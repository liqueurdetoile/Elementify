[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/collection.js",
    "content": "/**\n*  @file Collection definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport EventifiedElement from 'elements/eventifiedelement';\nimport HtmlElement from 'elements/htmlelement';\nimport Q from 'query';\n\n/**\n*  Class for handling a collection of any HtmlElement (or extended) objects.\n*\n*  A collection is pretty straight forwarding. All methods from HtmlElement class\n*  are mapped to a collection to let iterate a call on items from collection itself.\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*/\n\nclass Collection {\n  /**\n  *  A new Collection can be instantiated though it's more likely the result of a query in the DOM.\n  *\n  *  @returns {Collection} A collection of [HtmlElement]{@link HtmlElement} objects\n  */\n  constructor() {\n    /**\n    *  Array of elements contained in the collection (could be empty)\n    *  @type {Array}\n    *  @since 1.0.0\n    */\n    this.elements = [];\n  }\n\n  /**\n  *  Run a callback on each element in the collection.\n  *  This method is an alias to this.elements.forEach.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {ForEachCallback} callback Callback to run on each element\n  *  @returns {void}\n  */\n  forEach(callback) {\n    this.elements.forEach((element, index) => callback.call(element, element, index));\n  }\n\n  /**\n  *  Number of elements in the collection\n  *  @type {Number}\n  *  @since 1.0.0\n  */\n  get length() {\n    return this.elements.length;\n  }\n\n  /**\n  *  Push an element into the collection\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param   {Element|HtmlElement} element Element (enhanced ot not) to insert into the collection\n  *  @throws  {TypeError}  Throw an error if the argument is not an Element or an HtmlElement\n  *  @returns {this} Chainable\n  */\n  push(element) {\n    // Convert Element Node to HtmlElement\n    if (element.nodeType === 1) element = Q(element);\n    if (element.enhanced) this.elements.push(element);\n    else throw new TypeError('Only Element Object can be added to a collection of Elements');\n    return this;\n  }\n\n  /**\n  *  Merge all elements in collection under a DocumentFragment Element\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @type {HtmlElement}\n  */\n  get element() {\n    const container = Q();\n\n    this.elements.forEach(function (element) {\n      container.append(element);\n    });\n\n    return container.node;\n  }\n\n  /**\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @type {HtmlElement}\n  *  @see {@link Collection#element}\n  */\n  get node() {\n    return this.element;\n  }\n}\n\n// Map EventifiedElement and HTMLElement methods to Collection prototype\nfunction map(c) {\n  Object.getOwnPropertyNames(c.prototype).forEach(method => {\n    const prop = Object.getOwnPropertyDescriptor(c.prototype, method);\n\n    if (\n      typeof prop.value === 'function' &&\n      method !== 'constructor' &&\n      method !== 'forEach'\n    ) {\n      Collection.prototype[method] = function () {\n        let ret = [];\n\n        this.elements.forEach((el) => {\n          ret.push(el[method].apply(el, Array.prototype.slice.call(arguments)));\n        });\n        return ret;\n      };\n    }\n  });\n}\n\nmap(EventifiedElement);\nmap(HtmlElement);\n\nexport default Collection;\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "map",
    "memberof": "src/collection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/collection.js~map",
    "access": "public",
    "export": false,
    "importPath": "elementify/lib/collection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Collection",
    "memberof": "src/collection.js",
    "static": true,
    "longname": "src/collection.js~Collection",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/collection.js",
    "importStyle": "Collection",
    "description": " Class for handling a collection of any HtmlElement (or extended) objects.\n\n A collection is pretty straight forwarding. All methods from HtmlElement class\n are mapped to a collection to let iterate a call on items from collection itself.",
    "lineNumber": 22,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collection.js~Collection#constructor",
    "access": "public",
    "description": " A new Collection can be instantiated though it's more likely the result of a query in the DOM.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Collection} A collection of [HtmlElement]{@link HtmlElement} objects"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection"
      ],
      "spread": false,
      "description": "A collection of [HtmlElement]{@link HtmlElement} objects"
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "elements",
    "memberof": "src/collection.js~Collection",
    "static": false,
    "longname": "src/collection.js~Collection#elements",
    "access": "public",
    "description": " Array of elements contained in the collection (could be empty)",
    "lineNumber": 34,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "forEach",
    "memberof": "src/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collection.js~Collection#forEach",
    "access": "public",
    "description": " Run a callback on each element in the collection.\n This method is an alias to this.elements.forEach.",
    "lineNumber": 48,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ForEachCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback to run on each element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "get",
    "name": "length",
    "memberof": "src/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collection.js~Collection#length",
    "access": "public",
    "description": " Number of elements in the collection",
    "lineNumber": 57,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "push",
    "memberof": "src/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collection.js~Collection#push",
    "access": "public",
    "description": " Push an element into the collection",
    "lineNumber": 72,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this} Chainable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HtmlElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Element (enhanced ot not) to insert into the collection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "Chainable"
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "Throw an error if the argument is not an Element or an HtmlElement"
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "element",
    "memberof": "src/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collection.js~Collection#element",
    "access": "public",
    "description": " Merge all elements in collection under a DocumentFragment Element",
    "lineNumber": 89,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "get",
    "name": "node",
    "memberof": "src/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/collection.js~Collection#node",
    "access": "public",
    "description": "",
    "see": [
      "{@link Collection#element}"
    ],
    "lineNumber": 107,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/element.js",
    "content": "/**\r\n*  @file Element definition class\r\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\r\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\r\n*/\r\n\r\nimport Collection from 'collection';\r\n\r\nimport WindowElement from 'elements/windowelement';\r\nimport DocumentElement from 'elements/documentelement';\r\nimport HtmlElement from 'elements/htmlelement';\r\nimport FormElement from 'elements/formelement';\r\nimport InputElement from 'elements/inputelement';\r\n\r\n/**\r\n*  Element is basically a constructor that will take anything\r\n*  (string, node...) and returns the appropriate Elementify object.\r\n*\r\n*  If the provided input cannot be elementified, it is returned\r\n*  unchanged\r\n*\r\n*  @since 1.0.0\r\n*  @version 1.0.0\r\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\r\n*\r\n*/\r\nclass Element {\r\n  /**\r\n  *  @since 1.0.0\r\n  *  @version 1.0.0\r\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\r\n  *  @param {String|Node|HTMLElement} input\r\n  *  @param {keyValueObject} [options = {}] An option/value object that will be passed to the resulting object.\r\n  *  It may contain any HTML attributes and options. See each returned elements for legible values.\r\n  *  @returns {HtmlElement|FormElement|FormInput|FormSelector|FormSwitcher|Collection}\r\n  */\r\n  constructor(input, options = {}) {\r\n    var node;\r\n\r\n    if (!input) return new HtmlElement(document.createDocumentFragment(), options);\r\n\r\n    if (typeof input === 'string') {\r\n      try {\r\n        node = document.createElement(input);\r\n        return this._nodeToElement(node, options); // Import node\r\n      } catch (e) {\r\n        return this._stringToElements(input, options); // Import tag string\r\n      }\r\n    } else if (input instanceof Node && input.nodeType === 1) { // Import ELEMENT_NODE\r\n      return this._nodeToElement(input, options);\r\n    } else if (input instanceof Node && input.nodeType === 9) { // Import DOCUMENT_NODE\r\n      return new DocumentElement(input, options);\r\n    } else if (input === window) return new WindowElement(options); // Import window\r\n\r\n    return input;\r\n  }\r\n\r\n  /**\r\n  *  Converts a string to an HtmlElement.\r\n  *  You don't usually need to call directly this method.\r\n  *\r\n  *  @since 1.0.0\r\n  *  @version 1.0.0\r\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\r\n  *\r\n  *  @param {String} s String value to be converted to an Element\r\n  *  @param {KeyValueObject} [options]\r\n  *  An option/value object that will be passed to the resulting object.\r\n  *  It may contain any HTML attributes and options. See each returned elements for legible values.\r\n  *  @returns {HtmlElement|FormElement|FormInput|FormSelector|FormSwitcher|Collection}\r\n  */\r\n  _stringToElements(s, options = {}) {\r\n    var element, frag;\r\n\r\n    try {\r\n      frag = document.createRange().createContextualFragment(s);\r\n    } catch (e) /* istanbul ignore next */ {\r\n      let c = document.createElement('span');\r\n\r\n      c.innerHTML = s;\r\n      frag = c;\r\n    }\r\n\r\n    if (frag.childNodes.length === 1) {\r\n      element = this._nodeToElement(frag.childNodes.item(0), options);\r\n    } else {\r\n      element = new Collection();\r\n      for (let i = 0; i < frag.childNodes.length; i++) {\r\n        element.push(this._nodeToElement(frag.childNodes.item([i], options)));\r\n      }\r\n    }\r\n    return element;\r\n  }\r\n\r\n  /**\r\n  *  Converts a node to an HtmlElement.\r\n  *  You don't usually need to call directly this method.\r\n  *\r\n  *  @method elementify.Element.nodeToElement\r\n  *  @since 1.0.0\r\n  *  @version 1.0.0\r\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\r\n  *\r\n  *  @param {Node} node Node to import\r\n  *  @param {KeyValueObject} [options]\r\n  *  An option/value object that will be passed to the resulting object.\r\n  *  It may contain any HTML attributes and options. See each returned elements for legible values.\r\n  *  @returns {HtmlElement|FormElement|FormInput|FormSelector|FormSwitcher|Collection}\r\n  */\r\n  _nodeToElement(node, options = {}) {\r\n    var element;\r\n\r\n    if (node.nodeType !== 1) return new HtmlElement(document.createDocumentFragment(), options);\r\n    if (node.id) options.id = node.id;\r\n    switch (node.nodeName.toLowerCase()) {\r\n      case 'input':\r\n      case 'select':\r\n      case 'textarea':\r\n      case 'button':\r\n        element = new InputElement(node, options);\r\n        break;\r\n      case 'form':\r\n        element = new FormElement(node, options);\r\n        break;\r\n      default:\r\n        element = new HtmlElement(node, options);\r\n        break;\r\n    }\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport default Element;\r\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/element.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "class",
    "name": "Element",
    "memberof": "src/element.js",
    "static": true,
    "longname": "src/element.js~Element",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/element.js",
    "importStyle": "Element",
    "description": " Element is basically a constructor that will take anything\n (string, node...) and returns the appropriate Elementify object.\n\n If the provided input cannot be elementified, it is returned\n unchanged",
    "lineNumber": 27,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/element.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/element.js~Element#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|FormElement|FormInput|FormSelector|FormSwitcher|Collection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "keyValueObject"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "options",
        "description": "An option/value object that will be passed to the resulting object.\n It may contain any HTML attributes and options. See each returned elements for legible values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "FormElement",
        "FormInput",
        "FormSelector",
        "FormSwitcher",
        "Collection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "_stringToElements",
    "memberof": "src/element.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/element.js~Element#_stringToElements",
    "access": "private",
    "description": " Converts a string to an HtmlElement.\n You don't usually need to call directly this method.",
    "lineNumber": 72,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|FormElement|FormInput|FormSelector|FormSwitcher|Collection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "String value to be converted to an Element"
      },
      {
        "nullable": null,
        "types": [
          "KeyValueObject"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An option/value object that will be passed to the resulting object.\n It may contain any HTML attributes and options. See each returned elements for legible values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "FormElement",
        "FormInput",
        "FormSelector",
        "FormSwitcher",
        "Collection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "_nodeToElement",
    "memberof": "src/element.js~Element",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/element.js~Element#_nodeToElement",
    "access": "private",
    "description": " Converts a node to an HtmlElement.\n You don't usually need to call directly this method.",
    "lineNumber": 110,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "elementify.Element.nodeToElement"
      },
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|FormElement|FormInput|FormSelector|FormSwitcher|Collection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "Node to import"
      },
      {
        "nullable": null,
        "types": [
          "KeyValueObject"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An option/value object that will be passed to the resulting object.\n It may contain any HTML attributes and options. See each returned elements for legible values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "FormElement",
        "FormInput",
        "FormSelector",
        "FormSwitcher",
        "Collection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/elements/documentelement.js",
    "content": "/**\n*  @file Document Element definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport EventifiedElement from 'elements/eventifiedelement';\n\nexport default class DocumentElement extends EventifiedElement {\n  constructor(documentNode, options) {\n    super();\n\n    this.element = this.node = documentNode;\n    this.length = 0;\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/elements/documentelement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "DocumentElement",
    "memberof": "src/elements/documentelement.js",
    "static": true,
    "longname": "src/elements/documentelement.js~DocumentElement",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/elements/documentelement.js",
    "importStyle": "DocumentElement",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "elements/eventifiedelement~EventifiedElement"
    ]
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/elements/documentelement.js~DocumentElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/documentelement.js~DocumentElement#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "element",
    "memberof": "src/elements/documentelement.js~DocumentElement",
    "static": false,
    "longname": "src/elements/documentelement.js~DocumentElement#element",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "length",
    "memberof": "src/elements/documentelement.js~DocumentElement",
    "static": false,
    "longname": "src/elements/documentelement.js~DocumentElement#length",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/elements/eventifiedelement.js",
    "content": "/**\n*  @file Eventified Element definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport EventsManager from 'events/eventsmanager';\nimport hash from 'utilities/hash';\nimport uniqid from 'utilities/uniqid';\n\nconst eventsManager = new EventsManager();\n\nexport default class EventifiedElement {\n  _callbackId(callback) {\n    if (callback instanceof Function) return callback.name ? callback.name : hash(callback.toString());\n    else if (typeof callback === 'string') return callback;\n    return undefined;\n  }\n\n  /**\n  *  Unique id for HtmlElement automatically generated\n  *  Its solely purpose is for events tracking\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  */\n  get _id() {\n    let _id = this.data('__id__') ? this.data('__id__') : uniqid();\n\n    this.data('__id__', _id);\n    return _id;\n  }\n\n  /**\n  *  Attach event to htmlElement node. It is mostly an alias to native\n  *  addEventListener with a storage of the registered event.\n  *\n  *  A good side effect is you cannot [duplicate callbacks with anonymous functions]\n  *  (https://triangle717.wordpress.com/2015/12/14/js-avoid-duplicate-listeners).\n  *\n  *  @method HtmlElement~on\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n  *\n  *  @param {String} event Event name\n  *  @param {String|Function} callback Callback to run\n  *  @param {Boolean} [capture=false] Capture the event\n  *  @returns {HtmlElement} Self for chaining\n  */\n  on(event, callback, capture = false) {\n    const cbid = this._callbackId(callback);\n\n    // Prevent attaching event to a documentFragment itself\n    if (!this.length) return this;\n\n    // Avoid 2 same callbacks to be attached to an event\n    if (!eventsManager.has(`${this._id}.${event}.${cbid}`)) {\n      this.element.addEventListener(event, callback, capture);\n      eventsManager.push(`${this._id}.${event}.${cbid}`, {\n        callback: callback,\n        capture: capture\n      });\n    }\n\n    return this;\n  }\n\n  /**\n  *  Detach event from htmlElement node. It is mostly an alias to native\n  *  removeEventListener with a storage of the registered event\n  *\n  *  @method HtmlElement~off\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n  *\n  *  @param {String} event Event name\n  *  @param {String|Function} callback Callback to run\n  *  @param {Boolean} [capture=false] Capture the event\n  *  @returns {HtmlElement} Self for chaining\n  */\n  off(event, callback, capture = false) {\n    const cbid = this._callbackId(callback);\n\n    if (!this.length) return this;\n\n    if (!event) {\n      // Remove all events\n      eventsManager.forEach((cb, e) => {\n        eventsManager.forEach((action, id) => {\n          this.element.removeEventListener(e, action.callback, action.capture);\n        }, `${this._id}.${e}`);\n      }, this._id);\n      eventsManager.remove(this._id);\n    } else if (!cbid) {\n      // Remove all callbacks linked to event\n      eventsManager.forEach((action, id) => {\n        this.element.removeEventListener(event, action.callback, action.capture);\n      }, `${this._id}.${event}`);\n      eventsManager.remove(`${this._id}.${event}`);\n    } else { // Remove specific callback\n      eventsManager.forEach((action, id) => {\n        if (id === cbid) {\n          this.element.removeEventListener(event, action.callback, capture);\n          eventsManager.remove(`${this._id}.${event}.${cbid}`);\n        }\n      }, `${this._id}.${event}`);\n    }\n\n    return this;\n  }\n\n  /**\n  *  Fire an event to htmlElement. It is mostly an alias to native\n  *  dispatchEvent but with the option to make another element fire the event (it must\n  *  be a valid target though)\n  *\n  *  @method HtmlElement~fire\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n  *\n  *  @param {String} event Event name\n  *  @param {window|document|node} [element = this.node] Element that is required to fire the event.\n  *  If not provided, the underlying node will be the source.\n  *  @returns {Boolean} The return value is false if event is cancelable\n  *  and at least one of the event handlers which handled this event\n  *  called `Event.preventDefault()`. Otherwise it returns true.\n  */\n  fire(event, element) {\n    let e = document.createEvent('HTMLEvents');\n\n    element = element || this.node;\n    if (element.node) element = element.node;\n    e.initEvent(event, true, true);\n    e.eventName = event;\n    return element.dispatchEvent(e);\n  }\n\n  /**\n  *  Check if a listener is set for the element\n  *  is already attached to the HtmlElement\n  *\n  *  @method HtmlElement~hasEvent\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n  *\n  *  @param {String} [event] Event name\n  *  @param {String|Function} [callback] callback\n  */\n  hasEvent(event, callback) {\n    const cbid = this._callbackId(callback);\n\n    return !event ? eventsManager.has(this._id) :\n      !cbid ? eventsManager.has(`${this._id}.${event}`) :\n        eventsManager.has(`${this._id}.${event}.${cbid}`);\n  }\n\n  /**\n  *  Returns the callback(s) attached to element\n  *  is already attached to the HtmlElement\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n  *\n  *  @param {String} [event] Event name\n  */\n  getEvent(event) {\n    return !event ? eventsManager.pull(this._id) :\n      eventsManager.pull(`${this._id}.${event}`);\n  }\n\n  /**\n  *  Mass registering for event based on a key/callback object\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Object} events Events object to register\n  *  @returns {void}\n  */\n  registerEvents(events) {\n    events = new ObjectArray(events);\n    events.forEach(function (callback, event) { this.on(event, callback); }.bind(this));\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/elements/eventifiedelement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "eventsManager",
    "memberof": "src/elements/eventifiedelement.js",
    "static": true,
    "longname": "src/elements/eventifiedelement.js~eventsManager",
    "access": "public",
    "export": false,
    "importPath": "elementify/lib/elements/eventifiedelement.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "src/events/eventsmanager.js~EventsManager"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "EventifiedElement",
    "memberof": "src/elements/eventifiedelement.js",
    "static": true,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/elements/eventifiedelement.js",
    "importStyle": "EventifiedElement",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "_callbackId",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#_callbackId",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "get",
    "name": "_id",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#_id",
    "access": "private",
    "description": " Unique id for HtmlElement automatically generated\n Its solely purpose is for events tracking",
    "lineNumber": 30,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "on",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#on",
    "access": "public",
    "description": " Attach event to htmlElement node. It is mostly an alias to native\n addEventListener with a storage of the registered event.\n\n A good side effect is you cannot [duplicate callbacks with anonymous functions]\n (https://triangle717.wordpress.com/2015/12/14/js-avoid-duplicate-listeners).",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"
    ],
    "lineNumber": 55,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "HtmlElement~on"
      },
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback to run"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "capture",
        "description": "Capture the event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "off",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#off",
    "access": "public",
    "description": " Detach event from htmlElement node. It is mostly an alias to native\n removeEventListener with a storage of the registered event",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener"
    ],
    "lineNumber": 88,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "HtmlElement~off"
      },
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback to run"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "capture",
        "description": "Capture the event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "fire",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#fire",
    "access": "public",
    "description": " Fire an event to htmlElement. It is mostly an alias to native\n dispatchEvent but with the option to make another element fire the event (it must\n be a valid target though)",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent"
    ],
    "lineNumber": 137,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "HtmlElement~fire"
      },
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} The return value is false if event is cancelable\n and at least one of the event handlers which handled this event\n called `Event.preventDefault()`. Otherwise it returns true."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "window",
          "document",
          "node"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " this.node",
        "defaultRaw": " this.node",
        "name": "element",
        "description": "Element that is required to fire the event.\n If not provided, the underlying node will be the source."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "The return value is false if event is cancelable\n and at least one of the event handlers which handled this event\n called `Event.preventDefault()`. Otherwise it returns true."
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "hasEvent",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#hasEvent",
    "access": "public",
    "description": " Check if a listener is set for the element\n is already attached to the HtmlElement",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent"
    ],
    "lineNumber": 160,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "HtmlElement~hasEvent"
      },
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "getEvent",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#getEvent",
    "access": "public",
    "description": " Returns the callback(s) attached to element\n is already attached to the HtmlElement",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent"
    ],
    "lineNumber": 179,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "Event name"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "registerEvents",
    "memberof": "src/elements/eventifiedelement.js~EventifiedElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/eventifiedelement.js~EventifiedElement#registerEvents",
    "access": "public",
    "description": " Mass registering for event based on a key/callback object",
    "lineNumber": 194,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "Events object to register"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/elements/formelement.js",
    "content": "/**\n*  @file FormElement definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport HtmlElement from 'elements/htmlelement';\nimport Q from 'query';\n\n/**\n*  A FormElement instance node may contains only `<form>` Element.\n*\n*  Its main purpose is to provide an easy way to validate a whole form and prepare\n*  data for submission\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @todo\n*\n*  - Add support for binary data\n*/\n\nexport default class FormElement extends HtmlElement {\n  /**\n  *  The form constructor\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @private\n  *  @param {Element} node Form Element\n  *  @param {KeyValueObject} [options = {}]\n  *  @returns {FormElement}\n  *  @see https://developer.mozilla.org/fr/docs/Web/HTML/Element/Form\n  */\n  constructor(node, options = {}) {\n    super(node, options);\n\n    /**\n    *  Errors after validation\n    *\n    *  @type {ObjectArray}\n    *  @since 1.0.0\n    */\n    this._errors = new ObjectArray();\n  }\n\n  /**\n  *  Returns a field by its name\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} f  Field name\n  *  @returns {InputElement}\n  */\n  field(f) {\n    return Q('@' + f, this.node);\n  }\n\n  /**\n  *  Returns a Collection of all fields. The collection is\n  *  dynamic and regenerated by querying.\n  *  To ignore an input Element, just add class 'form-ignore' to it.\n  *\n  *  @type {Collection}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get fields() {\n    return Q('input:not(.form-ignore), select:not(.form-ignore), ' +\n      'textarea:not(.form-ignore), button:not(.form-ignore)', this.element);\n  }\n\n  /**\n  *  Dirty state of the form. Set by fetching all dirty\n  *  properties of the form's fields.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @type {boolean}\n  */\n  get dirty() {\n    var dirty = false;\n\n    this.fields.forEach(function (field) { if (field.dirty) dirty = true; });\n    return dirty;\n  }\n\n  /**\n  *  Validate the form by validating each field rule.\n  *  The class `field-validate` is added to validated fields Element\n  *  otherwise class `field-not-validate` is added to the Element\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @see {@link InputElement}\n  *  @returns {Boolean} `true`if validation is OK, `false` otherwise\n  */\n  validate() {\n    this._errors.empty();\n\n    this.fields.forEach(function (field) {\n      if (!field.validate()) {\n        field.addClass('field-not-validate').removeClass('field-validate');\n        this._errors.push(field.name, field.errors);\n      } else field.removeClass('field-not-validate').addClass('field-validate');\n    }.bind(this));\n\n    return this._errors.length() === 0;\n  }\n\n  /**\n  *  Fetch validation errors\n  *\n  *  @type {Object}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get errors() {\n    return this._errors.data;\n  }\n\n  /**\n  *  Form data as an {@link ObjectArray} object\n  *\n  *  @type {ObjectArray}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get datas() {\n    let data = new ObjectArray();\n\n    this.fields.forEach(function (field) {\n      if (typeof field.value !== undefined) data.push(field.name, field.value);\n    });\n    return data;\n  }\n\n  /**\n  *  Import data into form fields\n  *  from a {@link KeyValueObject} or an {@link ObjectArray} object\n  *\n  *  @type {keyValueObject|ObjectArray}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  set datas(o) {\n    let data = new ObjectArray(o).flatten(true);\n\n    data.forEach(function (v, f) {\n      this.field(f).value = v;\n    }.bind(this));\n  }\n\n  /**\n  *  Data of the form serialized in urlEncode standard. This\n  *  string is suitable for a query part or an URI.\n  *\n  *  @type {string}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get urlEncode() {\n    return this.datas.urlEncode();\n  }\n\n  /**\n  *  Data of the form serialized in urlEncode standard. This\n  *  string is suitable for a form-url-encoded data submission\n  *\n  *  @type {string}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get formUrlEncode() {\n    return this.datas.formUrlEncode();\n  }\n\n  /**\n  *  Form data as a {@link FormData} object\n  *\n  *  @type {FormData}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get formData() {\n    var fd = new FormData();\n\n    this.datas.forEach(function (v, k) { fd.append(k, v); });\n    return fd;\n  }\n\n  /**\n  *  Data of the form returned as a JSON string\n  *\n  *  @type {string}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get json() {\n    return JSON.stringify(this.datas.data);\n  }\n\n  /**\n  *  Import data into form fields from JSON\n  *\n  *  @type {string}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @throws {TypeError}\n  */\n  set json(j) {\n    try {\n      this.datas = JSON.parse(j);\n    } catch (e) {\n      throw new TypeError('Argument is not a valid JSON string');\n    }\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/elements/formelement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "class",
    "name": "FormElement",
    "memberof": "src/elements/formelement.js",
    "static": true,
    "longname": "src/elements/formelement.js~FormElement",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/elements/formelement.js",
    "importStyle": "FormElement",
    "description": " A FormElement instance node may contains only `<form>` Element.\n\n Its main purpose is to provide an easy way to validate a whole form and prepare\n data for submission",
    "lineNumber": 25,
    "since": "1.0.0",
    "version": "1.0.0",
    "todo": [
      "\n - Add support for binary data"
    ],
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "elements/htmlelement~HtmlElement"
    ]
  },
  {
    "__docId__": 81,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#constructor",
    "access": "private",
    "description": " The form constructor",
    "see": [
      "https://developer.mozilla.org/fr/docs/Web/HTML/Element/Form"
    ],
    "lineNumber": 39,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{FormElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "Form Element"
      },
      {
        "nullable": null,
        "types": [
          "KeyValueObject"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FormElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "_errors",
    "memberof": "src/elements/formelement.js~FormElement",
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#_errors",
    "access": "private",
    "description": " Errors after validation",
    "lineNumber": 48,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "field",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#field",
    "access": "public",
    "description": " Returns a field by its name",
    "lineNumber": 61,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{InputElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "Field name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "InputElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "get",
    "name": "fields",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#fields",
    "access": "public",
    "description": " Returns a Collection of all fields. The collection is\n dynamic and regenerated by querying.\n To ignore an input Element, just add class 'form-ignore' to it.",
    "lineNumber": 75,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Collection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "get",
    "name": "dirty",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#dirty",
    "access": "public",
    "description": " Dirty state of the form. Set by fetching all dirty\n properties of the form's fields.",
    "lineNumber": 90,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "validate",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#validate",
    "access": "public",
    "description": " Validate the form by validating each field rule.\n The class `field-validate` is added to validated fields Element\n otherwise class `field-not-validate` is added to the Element",
    "see": [
      "{@link InputElement}"
    ],
    "lineNumber": 109,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} `true`if validation is OK, `false` otherwise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "`true`if validation is OK, `false` otherwise"
    },
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "get",
    "name": "errors",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#errors",
    "access": "public",
    "description": " Fetch validation errors",
    "lineNumber": 130,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "get",
    "name": "datas",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#datas",
    "access": "public",
    "description": " Form data as an {@link ObjectArray} object",
    "lineNumber": 142,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "set",
    "name": "datas",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#datas",
    "access": "public",
    "description": " Import data into form fields\n from a {@link KeyValueObject} or an {@link ObjectArray} object",
    "lineNumber": 160,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "keyValueObject",
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "get",
    "name": "urlEncode",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#urlEncode",
    "access": "public",
    "description": " Data of the form serialized in urlEncode standard. This\n string is suitable for a query part or an URI.",
    "lineNumber": 177,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "get",
    "name": "formUrlEncode",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#formUrlEncode",
    "access": "public",
    "description": " Data of the form serialized in urlEncode standard. This\n string is suitable for a form-url-encoded data submission",
    "lineNumber": 190,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "get",
    "name": "formData",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#formData",
    "access": "public",
    "description": " Form data as a {@link FormData} object",
    "lineNumber": 202,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "FormData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "get",
    "name": "json",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#json",
    "access": "public",
    "description": " Data of the form returned as a JSON string",
    "lineNumber": 217,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "set",
    "name": "json",
    "memberof": "src/elements/formelement.js~FormElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/formelement.js~FormElement#json",
    "access": "public",
    "description": " Import data into form fields from JSON",
    "lineNumber": 230,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/elements/htmlelement.js",
    "content": "/**\n*  @file HtmlElement definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport Element from 'element';\nimport Collection from 'collection';\nimport EventifiedElement from 'elements/eventifiedelement';\n\nimport Q from 'query';\n\n/**\n*  This the common class for all other elements. It provides all functionalities to :\n*  - Explore and manipulate the DOM\n*  - Create, edit, delete properties on the object\n*  - Style the object\n*  - Fade in and out\n*  - Get and set position\n*  - Add event with a global events manager\n*\n*  __You cannot directly create an instance of the class.__\n*\n*  You must use the {@link Element} constructor or its alias {@link Q}\n*  that will then instantiate the right class given the node type (HTML, Form...).\n*\n*  The `options` passed to the Element constructor are then passed to this class constructor.\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*/\n\nexport default class HtmlElement extends EventifiedElement {\n  /**\n  *  Constructor for HTMLElement class\n  *\n  *  You can pass any attributes as options. There are a few reserved keywords\n  *  for specific options.\n  *\n  *  @private\n  *  @param {Element} node Element to enhance\n  *  @param {keyValueObject} [options={}]\n  *  Options for the HTMLElement object and/or attributes for\n  *  the underlying native HTMLElement Object. Excepting `data`, `events`,\n  *  `innerhtml` and `options`, any property of this object will be\n  *  added as attribute to the underlying HTML object.\n  *     @property\n  *     {String|Array}\n  *     [options.class]\n  *     Class(es) to be set as value for the `class` attribute.\n  *\n  *     @property\n  *     {String|keyValueObject}\n  *     [options.style]\n  *     Style(s) to be set as value for the `style` attribute.\n  *\n  *     @property\n  *     {keyValueObject}\n  *     [options.data]\n  *     An object with key/value pairs\n  *\n  *     @property {keyValueObject} [options.events]\n  *     Events to add to the element under the format : `{eventName: callback, ...}`\n  *\n  *  @returns {HtmlElement} New HTMLElement object\n  */\n  constructor(node, options = {}) {\n\n    super();\n\n    /**\n    *  The underlying DOM node object\n    *\n    *  @type {Node}\n    *  @since 1.0.0\n    */\n    this.element = node;\n\n    /**\n    *  Convenience property to check if the object\n    *  is an instance of this class\n    *\n    *  @type {Boolean}\n    *  @since 1.0.0\n    */\n    this.enhanced = true;\n\n    /**\n    *  The length property if useful to quickly check what kind\n    *  of underlying node object have been returned :\n    *  - 0 means it's a DocumentFragment\n    *  - 1 means it's a node (HTMLElement...)\n    *  - More than 1 means it's a Collection (@see elementify.Collection)\n    *\n    *  @type {Number}\n    *  @since 1.0.0\n    */\n    this.length = node.nodeType === 11 ? 0 : 1;\n\n    /**\n    *  The options passed to the constructor\n    *  @type {ObjectArray}\n    *  @since 1.0.0\n    */\n    this.options = new ObjectArray(options);\n\n    // Set attributes\n    if (this.node.setAttribute) {\n      this.options.forEach((value, attr) => {\n        attr = attr.toLowerCase();\n        if (attr !== 'data' && attr !== 'innerhtml' && attr !== 'events' && attr !== 'options') {\n          if (attr === 'class' && value instanceof Array) value = value.join(' ');\n          if (attr === 'style' && typeof value !== 'string') value = new ObjectArray(value).stylesToString();\n          this.node.setAttribute(attr, value);\n        }\n      });\n    }\n\n    if (options.innerHTML) this.node.innerHTML = options.innerHTML;\n    if (options.data) this.data(options.data);\n    if (options.events) this.registerEvents(options.events);\n  }\n\n  /**\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @description\n  *  Implemented for compatibility with Collection class {@see Collection} for chaining purposes\n  *\n  *  @param {forEachCallback} callback Callback function to be run on each element.\n  *  @returns {void}\n  */\n  forEach(callback) {\n    callback.call(this, this, 0);\n  }\n\n  /**\n  *  Get or set given attribute(s) of the element.\n  *\n  *  The getter can be used in two ways :\n  *  - A string will return an attribute value\n  *  - Array of attributes names will return a keyValueObject\n  *\n  *\n  *  The setter can be used in three ways :\n  *  - A string + value will set the attribute\n  *  - A string + null will delete the attribute\n  *  - A keyValueObject of attributes/values for multiple settings\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Void|String|Array|keyValueObject} [a] Attribute(s)\n  *  @param {Void|Null|Number|String} v Value for the attribute\n  *  @returns {HtmlElement|Number|String|keyValueObject} Self for chaining for setter or attributes for getter\n  */\n  attr(a, v) {\n    if (typeof a === 'undefined') {\n      let attrs = this.node.attributes;\n      let ret = {};\n\n      for (let i = 0; i < attrs.length; i++) ret[attrs[i].name] = attrs[i].value;\n      return ret;\n    }\n    if (a instanceof Array) {\n      let ret = {};\n\n      a.forEach(function (attr) { ret[attr] = this.attr(attr); }.bind(this));\n      return ret;\n    } else if (a instanceof Object) {\n      a = new ObjectArray(a);\n      a.forEach((value, attr) => { this.attr(attr, value); });\n    } else {\n      if (v === null) this.node.removeAttribute(a);\n      if (v) this.node.setAttribute(a, v);\n      else return this.node.getAttribute(a);\n    }\n    return this;\n  }\n\n  /**\n  *  Get or set data attribute(s) of the element.\n  *\n  *  With no arguments, it will return a keyValueObject with all data attributes.\n  *\n  *  Data items name will be automatically converted from dash to camel-case if needed.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {undefined|String|Array|Object|ObjectArray} [a] Data attribute name (without leading `data-`)\n  *  @param {Number|String|Object} v Value for the attribute\n  *  @returns {HtmlElement|Number|String|Object|keyValueObject}\n  *  Self for chaining for setter or data attribute(s) values for getter\n  */\n  data(a, v) {\n    const data = new ObjectArray(this.attr());\n\n    // Load data attributes\n    data.forEach((v, k) => {\n      if (k.indexOf('data-') === -1) data.remove(k);\n      else data.push(k.replace('data-', ''), v).remove(k);\n    });\n\n    // Check case\n    if (typeof a === 'undefined') return data.dataset();\n    else if (typeof a === 'string') {\n      // Dashize a for camel-cased key request\n      a = data.dashize(a);\n\n      if (typeof v === 'undefined') return data.pull(a, undefined, false);\n      else if (v === 'null') {\n        this.attr('data-' + a, null);\n      } else {\n        this.attr('data-' + a, v);\n        return this;\n      }\n    } else if (a instanceof Array) {\n      let ret = {};\n\n      a.forEach(function (v) { ret[v] = this.data(v); }.bind(this));\n      return ret;\n    } else if (a instanceof Object) {\n      a = new ObjectArray(a);\n      a.forEach(function (v, k) { this.data(k, v); }.bind(this));\n    } return this;\n  }\n\n  /**\n  *  Matches returns true if the element matches the query selector\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String} selector Valid DOM query selector\n  *  @returns {Boolean} `true` if Element matches selector\n  */\n  matches(selector) {\n    var matches, i;\n\n    if (this.node.matches) return this.node.matches(selector);\n    matches = (document || this.node.ownerDocument).querySelectorAll(selector);\n    i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this.node) {}\n    return i > -1;\n  }\n\n  /**\n  *  Element's n-th parent finder\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Number|String}  [n=1]   Distance to the current Element if number. Query selector if string.\n  *  @returns {HtmlElement|DocumentFragment}  If the parent level is above top level, it will returns a DocumentFragment\n  */\n  parent(n = 1) {\n    var parent = new Element(this.node.parentNode);\n\n    if (typeof n === 'string') return this.parents(n);\n    while (n > 1 && parent.length) {\n      parent = new Element(parent.node.parentNode);\n      n--;\n    }\n    return parent;\n  }\n\n  /**\n  *  Element's parent finder based on a DOM query selector\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String} selector A valid DOM query selector\n  *  @returns {Collection|HtmlElement|DocumentFragment}\n  *  HtmlElement or DocumentFragment if no parent matches the selector\n  */\n  parents(selector) {\n    let coll = new Collection();\n    let parent = this.parent();\n\n    while (parent.length) {\n      if (parent.matches(selector)) coll.push(parent);\n      parent = parent.parent();\n    }\n\n    if (coll.length === 0) return new Element();\n    if (coll.length === 1) return coll.elements[0];\n    return coll;\n  }\n\n  /**\n  *  Element's nth child finder\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Number}  [n=1]   Distance to the current Element\n  *  @returns {HtmlElement|DocumentFragment}  If the child is unreachable, it will returns a DocumentFragment\n  */\n  child(n = 1) {\n    let childs = this.node.children || this.node.childNodes;\n\n    if (typeof n === 'string') return this.childs(n);\n\n    if (childs && childs[n - 1]) return new Element(childs[n - 1]);\n    return new Element();\n  }\n\n  /**\n  *  Element's childs finder based on a DOM query selector\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String} selector A valid DOM query selector\n  *  @returns {Collection|HtmlElement|DocumentFragment} HtmlElement or DocumentFragment if no child matches the selector\n  */\n  childs(selector) {\n    return Q(selector, this);\n  }\n\n  /**\n  *  Element's previous sibling finder\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Qtype} [n=1] Distance to current Element\n  *  @returns {HtmlElement|DocumentFragment} If the sibling is unreachable, it will returns a DocumentFragment\n  */\n  previousSibling(n = 1) {\n    let ps = this.node.previousSibling;\n    let index = 0;\n\n    if (typeof n === 'string') return this.previousSiblings(n);\n\n    while (ps !== null) {\n      if (ps.nodeType === 1) index++;\n      if (index === n) break;\n      ps = ps.previousSibling;\n    }\n\n    return new Element(ps);\n  }\n\n  /**\n  *  Element's previous siblings finder based on a DOM query selector\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String} selector A valid DOM query selector\n  *  @returns {Collection|HtmlElement|DocumentFragment} DocumentFragment if no siblings matches the selector\n  */\n  previousSiblings(selector) {\n    let coll = new Collection();\n    let ps = this.previousSibling();\n\n    while (ps.length) {\n      if (ps.matches(selector)) coll.push(ps);\n      ps = ps.previousSibling();\n    }\n\n    if (coll.length === 0) return document.createDocumentFragment();\n    if (coll.length === 1) return coll.elements[0];\n    return coll;\n  }\n\n  /**\n  *  Element's next sibling finder\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Qtype} [n=1] Distance to current Element\n  *  @returns {HtmlElement|DocumentFragment} If the sibling is unreachable, it will returns a DocumentFragment\n  */\n  nextSibling(n = 1) {\n    let ns = this.node.nextSibling;\n    let index = 0;\n\n    if (typeof n === 'string') return this.nextSiblings(n);\n\n    while (ns !== null) {\n      if (ns.nodeType === 1) index++;\n      if (index === n) break;\n      ns = ns.nextSibling;\n    }\n\n    return new Element(ns);\n  }\n\n  /**\n  *  Element's next siblings finder based on a DOM query selector\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String} selector A valid DOM query selector\n  *  @returns {Collection|HtmlElement|DocumentFragment} DocumentFragment if no siblings matches the selector\n  */\n  nextSiblings(selector) {\n    let coll = new Collection();\n    let ns = this.nextSibling();\n\n    while (ns.length) {\n      if (ns.matches(selector)) coll.push(ns);\n      ns = ns.previousSibling();\n    }\n\n    if (coll.length === 0) return document.createDocumentFragment();\n    if (coll.length === 1) return coll.elements[0];\n    return coll;\n  }\n\n  /**\n  *  Append an element to another\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String|Node|HtmlElement} e Element to append (enhanced or not)\n  *  @returns {HtmlElement} Return self for chaining\n  */\n  append(e) {\n    if (!e.enhanced) e = new Element(e);\n    this.node.appendChild(e.node);\n    return this;\n  }\n\n  /**\n  *  Prepend an element to another\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String|Node|HtmlElement} e Element to prepend (enhanced or not)\n  *  @returns {HtmlElement} Return self for chaining\n  */\n  prepend(e) {\n    if (!e.enhanced) e = new Element(e);\n    if (this.node.children.length) this.node.insertBefore(e.node, this.node.firstChild);\n    else this.node.appendChild(e.node);\n    return this;\n  }\n\n  /**\n  *  Insert an element before another. A Documentfragement wrapper will be\n  *  inserted if Element have no parent node.\n  *\n  *  The second parameter can be used to get the parent element for\n  *  chaining instead of the element itself.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String|Node|HtmlElement} e Element to insert\n  *  @param {Boolean} [returnself=true]  If `true`, it will return the Element.\n  *  If `false`, it will return the parent Element.\n  *  @returns {HtmlElement} Return for chaining\n  */\n  before(e, returnself = true) {\n    if (!e.enhanced) e = new Element(e);\n    if (!this.node.parentNode) this.wrap(new Element());\n    this.node.parentNode.insertBefore(e.node, this.node);\n    return (returnself ? this : new Element(this.node.parentNode));\n  }\n\n  /**\n  *  Insert an element before another. A Documentfragement wrapper will be\n  *  inserted if Element have no parent node.\n  *\n  *  The second parameter can be used to get the parent element for\n  *  chaining instead of the element itself.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String|Node|HtmlElement} e Element to insert\n  *  @param {Boolean} [returnself=true]  If `true`, it will return the Element.\n  *  If `false`, it will return the parent Element.\n  *  @returns {HtmlElement} Return for chaining\n  */\n  after(e, returnself = true) {\n    if (!e.enhanced) e = new Element(e);\n    if (!this.node.parentNode) this.wrap(new Element());\n    this.node.parentNode.insertBefore(e.node, e.node.nextSibling);\n    return (returnself ? this : new Element(this.node.parentNode));\n  }\n\n  /**\n  *  Wrap an Element into another.\n  *  If no Element provided, the wrapper will be set to\n  *  a DocumentFragment node.\n  *\n  *  The second parameter can be used to get the parent element for\n  *  chaining instead of the element itself.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String|Node|HtmlElement} e=null Wrapping Element\n  *  @param {Boolean} [returnself=true] If `true`, it will return the Element.\n  *  If `false`, it will return the parent Element.\n  *  @returns {HtmlElement} Return for chaining\n  */\n  wrap(e = null, returnself = true) {\n    if (!e.enhanced) e = new Element(e);\n    this.after(e);\n    e.append(this);\n    return (returnself ? this : e);\n  }\n\n  /**\n  *  Unwrap an Element (and its siblings) and delete its parentNode\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {HtmlElement} Return for chaining\n  */\n  unwrap() {\n    if (this.parent().length) {\n      let parent = this.parent();\n\n      this.parent().before(this);\n      parent.remove();\n    }\n    return this;\n  }\n\n  /**\n  *  Empty an Element\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {HtmlElement} Return for chaining\n  */\n  empty() {\n    while (this.node.firstChild) this.node.removeChild(this.node.firstChild);\n    return this;\n  }\n\n  /**\n  *  Remove an Element\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {HtmlElement} Return for chaining\n  */\n  remove() {\n    if (this.node.parentNode) this.node.parentNode.removeChild(this.node);\n    return this;\n  }\n\n  /**\n  *  Get/Set the HTML content of the node\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String} [v] Value for HTML content\n  *  @returns {HTMLElement|string} Setter returns self for chaining, getter returns the string\n  */\n  html(v) {\n    if (v) {\n      this.node.innerHTML = v;\n      return this;\n    }\n    return this.node.innerHTML;\n  }\n\n  /**\n  *  Get the outerHTML string of the underlying node\n  *\n  *  @type {String}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  */\n  get outerHTML() {\n    var ret, wrapper = new Element('span');\n\n    if (!this.length) return this.node;\n    this.wrap(wrapper);\n    ret = this.node.parentNode.innerHTML;\n    this.unwrap();\n    return ret;\n  }\n\n  /**\n  *  Returns a deep clone of the HtmlElement. The clone will\n  *  contains the same child nodes.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {HtmlElement} Clone of the current HtmlElement\n  */\n  clone() {\n    return new Element(this.node.cloneNode(true));\n  }\n\n  /**\n  *  Returns a shallow copy of the HtmlElement\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {HtmlElement} Shallow copy of the current HtmlElement\n  */\n  shallow() {\n    return new Element(this.node.cloneNode(false));\n  }\n\n  /**\n  *  Check if the HtmlElement is present in DOM\n  *\n  *  @type {Boolean}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  */\n  get isInDom() {\n    return this.root === document;\n  }\n\n  /**\n  *  Alias for the element property member that\n  *  returns `null` instead of `undefined`\n  *\n  *  @type {Node}\n  *  @see {@link HtmlElement#element}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get node() { // Alias for element\n    return (this.element) ? this.element : null;\n  }\n\n  /**\n  *  Get the root Node element for the HtmlElement\n  *  The result is not enhanced as an HtmlElement\n  *  because it will mostly be a `document` object\n  *  which is not a Node object.\n  *\n  *  @type {Document|Node}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  */\n  get root() {\n    var root;\n\n    if (!this.length) return this.node;\n\n    root = this.node;\n    while (root.parentNode) root = root.parentNode;\n    return root;\n  }\n\n  /**\n  *  Get the computed styles of the underlying node.\n  *  __Use with care : It can be painfully slow and must be avoided\n  *  for huge set of automated ops on style__\n  *\n  *  @type {CSSStyleDeclaration}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  */\n  get styles() {\n    return getComputedStyle(this.node);\n  }\n\n  /**\n  *  Get/Set style properties of an HtmlElement based on its\n  *  node `style` attribute.\n  *\n  *  Properties name will be camelized when read from style string and\n  *  dashed when set to style string.\n  *\n  *  Many syntaxes are available. See examples.\n  *\n  *  You can remove a style property by setting its value to `null`\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String|Array|Object|ObjectArray}  [a]  get/set request on style attribute\n  *\n  *  - Empty: style will returns all styles set in the stye attribute\n  *  - String : Name or the style property to get or set if second parameter is provided\n  *  - Array: Array of properties names to get\n  *  - Object|ObjectArray : Properties names and values to set. If second parameter is set\n  *  to true, it will replace all styles properties defined in the style attribute. Otherwise\n  *  it will merge them\n  *\n  *  @param {String} [v] Value of the style or enable replace mode\n  *  @returns {HtmlElement|String|Object}\n  *  Returns self for chaining for set cases,\n  *  String or Object {styleKey: styleValue, ...} for get cases\n  *  @example\n  *  var e = new Element('<div style=\"color:red;margin:1em\"></div>');\n  *  e.style('color'); // returns 'red'\n  *  e.style('color', 'yellow'); // Set color to yellow and returns e for chaining\n  *  e.style(['color', 'margin']); // returns {color:'red', margin: '1em'}\n  *  e.style({color: 'yellow', padding: '5px'}); // Set color to yellow, padding to 5px and returns e for chaining\n  *  e.style({paddingLeft: '10px', margin: '5px'}); // Set color to yellow, padding to 5px and returns e for chaining\n  */\n  style(a, v) {\n    let o = new ObjectArray();\n\n    // undefined case (getter)\n    if (typeof a === 'undefined') {\n      o.stringToStyles(this.attr('style'));\n      return o.data;\n    }\n    // String case (getter or setter)\n    if (typeof a === 'string') {\n      a = o.camelize(a); // camelize property name\n      if (typeof v === 'undefined') return this.node.style[a];\n      this.node.style[a] = v;\n      return this;\n    }\n    // Array case (getter)\n    if (a instanceof Array) {\n      let ret = {};\n\n      o.stringToStyles(this.attr('style'));\n      a.forEach(function (k) {\n        k = o.camelize(k);\n        ret[k] = o.dataset(k);\n      });\n      return ret;\n    }\n    // Object or ArrayObject case (setter)\n    if (a instanceof Object) {\n      if (v) this.attr('style', o.import(a).stylesToString());\n      else this.attr('style', o.stringToStyles(this.attr('style')).import(a).stylesToString());\n      return this;\n    }\n\n    return undefined;\n  }\n\n  /**\n  *  Get the visibility of an HtmlElement. It will only return\n  *  false if the element is out of the DOM or with\n  *  a display style property set to none.\n  *\n  *  __Use with care : It can be painfully slow and must be avoided\n  *  for huge set of automated ops on elements if display property is not set inline__\n  *\n  *  @type {Number}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  */\n  get visible() {\n    return (this.isInDom && this.style('display') !== undefined && this.style('display') !== 'none') ||\n      (this.isInDom && this.styles.display !== 'none');\n  }\n\n  /**\n  *  Set the display style property of an HtmlElement\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  [v]   Value for display property\n  *  @returns {HtmlElement} Self for chaining\n  */\n  display(v) {\n    if (this.node.style) this.node.style.display = v;\n    return this;\n  }\n\n  /**\n  *  Hide an HtmlElement by setting its display property to 'none'.\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {HtmlElement} Self for chaining\n  */\n  hide() {\n    return this.display('none');\n  }\n\n  /**\n  *  Show an HtmlElement by setting its display property.\n  *  The property value can be override for custom results (e.g. 'flex')\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  [v='block']   Value for display property\n  *  @returns {HtmlElement} Self for chaining\n  */\n  show(v = 'block') {\n    return this.display(v);\n  }\n\n  /**\n  *  Toggle an HtmlElement visibility by setting its display property.\n  *  The \"show\" property value can be override for custom results (e.g. 'flex')\n  *\n  *  __Use with care : It can be painfully slow and must be avoided\n  *  for huge set of automated ops on elements if display property is not set inline__\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  [v='block']   Value for display property when set to visible\n  *  @returns {HtmlElement} Self for chaining\n  */\n  toggle(v = 'block') {\n    if (this.node.style) {\n      if (this.styles.display === 'none') this.show(v);\n      else this.hide();\n    }\n  }\n\n  /**\n  *  Check if an HtmLElement have given class(es)\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  cls   Class(es) name(s)\n  *  @returns {Boolean} True if class(es) are present\n  */\n  hasClass(...cls) {\n    let className = this.node.className ? this.node.className.split(' ') : [];\n    let ret = true;\n\n    cls.forEach(function (c) { if (className.indexOf(c) === -1) ret = false; });\n    return ret;\n  }\n\n  /**\n  *  Add class(es) to an HtmlElement\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  cls   Class(es) name(s)\n  *  @returns {HtmlElement} Self for chaining\n  */\n  addClass(...cls) {\n    let className = this.node.className ? this.node.className.split(' ') : [];\n\n    cls.forEach(c => { if (className.indexOf(c) === -1) className.push(c);});\n    this.node.className = className.join(' ');\n\n    return this;\n  }\n\n  /**\n  *  Remove class(es) from an HtmlElement\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  cls   Class(es) name(s)\n  *  @returns {HtmlElement} Self for chaining\n  */\n  removeClass(...cls) {\n    let className = this.node.className ? this.node.className.split(' ') : [];\n\n    cls.forEach((c) => {\n      let i = className.indexOf(c);\n\n      if (i >= 0) className.splice(i, 1);\n    });\n    this.node.className = className.join(' ');\n\n    return this;\n  }\n\n  /**\n  *  Toggle class(es) from an HtmlElement\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {String}  cls   Class(es) name(s)\n  *  @returns {HtmlElement} Self for chaining\n  */\n  toggleClass(...cls) {\n    cls.forEach(c => {\n      if (this.hasClass(c)) this.removeClass(c);\n      else this.addClass(c);\n    });\n    return this;\n  }\n\n  /**\n  *  Fade In element given a linear easing\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {ObjectArray} options Options for the animation\n  *  @param {String}  [options.display='block'] Value for the display CSS property\n  *  @param {Number}  [options.duration=400]  Duration of the animation in milliseconds\n  *  @param {Callback}  callback  Animation callback\n  *  @returns {this | Promise} Chainable or animation promise if available\n  */\n  fadeIn(options = {}, callback = null) {\n    var p, _this = this;\n\n    function animationPromise(resolve, reject) {\n      var start = null;\n\n      function animate(timestamp) {\n        var opacity;\n\n        if (start === null) start = timestamp;\n        // Linear easing\n        opacity = (timestamp - start) / options.duration;\n        _this.element.style.opacity = opacity;\n        if (opacity < 1) window.requestAnimationFrame(animate);\n        else {\n          _this.element.style.opacity = 1;\n          if (callback instanceof Function) callback(_this);\n          resolve(_this);\n        }\n      }\n\n      window.requestAnimationFrame(animate);\n    }\n\n    this.element.style.opacity = 0;\n    this.show(options.display);\n    options.duration = options.duration || 400;\n\n    if (typeof Promise !== 'undefined') p = new Promise(animationPromise);\n    else animationPromise(() => {});\n\n    return p ? p : this;\n  }\n\n  /**\n  *  Fade Out element given a linear easing\n  *\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {ObjectArray} options Options for the animation\n  *  @param {String}  [options.display='none'] Value for the display CSS property\n  *  at the end of the animation\n  *  @param {Number}  [options.duration=400]  Duration of the animation in milliseconds\n  *  @param {Callback}  callback  Animation callback\n  *  @returns {this | Promise} Chainable or animation promise if available\n  */\n  fadeOut(options = {}, callback = null) {\n    var p, _this = this;\n\n    function animationPromise(resolve, reject) {\n      var start = null;\n\n      function animate(timestamp) {\n        var opacity;\n\n        if (start === null) start = timestamp;\n        // Linear easing\n        opacity = 1 - (timestamp - start) / options.duration;\n        _this.element.style.opacity = opacity;\n        if (opacity > 0) window.requestAnimationFrame(animate);\n        else {\n          _this.element.style.opacity = 0;\n          _this.display(options.display);\n          if (callback instanceof Function) callback(_this);\n          resolve(_this);\n        }\n      }\n\n      window.requestAnimationFrame(animate);\n    }\n\n    this.element.style.opacity = 0;\n    this.show(options.display);\n    options.duration = options.duration || 400;\n\n    if (typeof Promise !== 'undefined') p = new Promise(animationPromise);\n    else animationPromise(() => {});\n\n    return p ? p : this;\n  }\n\n  /**\n  *  Refresh position object at first call or after\n  *  a resize / changeOrientation event\n  *\n  *  @private\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {void}\n  */\n  _metricsUpdate() {\n    let metrics = this.node.getBoundingClientRect();\n\n    this._metrics = {};\n    for (let k in metrics) if (typeof metrics[k] === 'number') this._metrics[k] = metrics[k];\n    this._metrics.outerWidth = this._metrics.right - this._metrics.left;\n    this._metrics.outerHeight = this._metrics.bottom - this._metrics.top;\n    this._metrics.width = this.node.clientWidth;\n    this._metrics.height = this.node.clientHeight;\n\n    // Update right property to match right offset\n    this._metrics.right = document.body.clientWidth - this._metrics.right;\n    // Update bottom property to match bottom offset\n    this._metrics.bottom = document.body.clientHeight - this._metrics.bottom;\n\n    // Call scroll update\n    this._scrollUpdate();\n  }\n\n  _scrollUpdate() {\n    if (typeof (this._metrics !== 'undefined')) {\n      this._metrics.scrollX =\n        (window.pageXOffset !== undefined) ?\n          window.pageXOffset :\n          (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\n      this._metrics.scrollY =\n        (window.pageYOffset !== undefined) ?\n          window.pageYOffset :\n          (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    }\n  }\n\n  _parseDims(v) {\n    if (v === null || typeof v === 'undefined') return '';\n    else if (v === parseInt(v, 10)) return v + 'px';\n    else if (typeof v === 'string') return v;\n    throw new TypeError('Invalid value for NodeMetrics');\n  }\n\n  /**\n  *  Get the position property of the element. The calculation only occurs\n  *  at first call or when window is resized, rotated or scrolled.\n  *\n  *  __ Warning : Calculations can be pretty slow on huge amount of elements __\n  *\n  *  A cached version of the result is available in the `_metrics` property of the\n  *  HtmlElement. It will be only be generated after a first call to position or another\n  *  getter/setter. It will then be regenerated after events that affect window size or scroll\n  *\n  *  If the element is not in DOM, all values will return undefined.\n  *\n  *  @type {NodeMetrics}\n  *  @readonly\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get position() {\n    if (!this.isInDom) {\n      return {\n        left: undefined,\n        right: undefined,\n        width: undefined,\n        top: undefined,\n        bottom: undefined,\n        height: undefined,\n        scrollX: undefined,\n        scrollY: undefined\n      };\n    }\n\n    if (typeof this._metrics === 'undefined') {\n      this._metricsUpdate();\n      window.addEventListener('resize', this._metricsUpdate.bind(this));\n      window.addEventListener('orientationchange', this._metricsUpdate.bind(this));\n      window.addEventListener('scroll', this._scrollUpdate.bind(this));\n      window.addEventListener('touchmove', this._scrollUpdate.bind(this));\n    }\n\n    return this._metrics;\n  }\n\n  /**\n  *  Get scroll X offset of the window in pixels\n  *\n  *  @see {@link position}\n  *  @type {Number|undefined}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get scrollX() {\n    return this.position.scrollX;\n  }\n\n  /**\n  *  Get scroll Y offset of the window in pixels\n  *\n  *  @see {@link position}\n  *  @type {Number|undefined}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get scrollY() {\n    return this.position.scrollY;\n  }\n\n  /**\n  *  Get left offset in pixels (relative to wiewport)\n  *\n  *  @see {@link position}\n  *  @type {Number|undefined}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get left() {\n    return this.position.left;\n  }\n\n  /**\n  *  Set left offset in pixels (relative to wiewport)\n  *\n  *  You can set value by assigning any of :\n  *\n  *  - `null`, `undefined` : Remove value\n  *  - {Number} : Value will be interpreted in pixels\n  *  - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)\n  *\n  *  @see {@link position}\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  set left(v) {\n    this.node.style.left = this._parseDims(v);\n    return this;\n  }\n\n  /**\n  *  Get/Set right offset in pixels (relative to wiewport)\n  *  You can set value by assigning any of :\n  *\n  *  - `null`, `undefined` : Remove value\n  *  - {Number} : Value will be interpreted in pixels\n  *  - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)\n  *\n  *  @see {@link position}\n  *  @type Number|undefined\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get right() {\n    return this.position.right;\n  }\n\n  set right(v) {\n    this.node.style.right = this._parseDims(v);\n    return this;\n  }\n\n  /**\n  *  Get/Set top offset in pixels (relative to wiewport)\n  *  You can set value by assigning any of :\n  *\n  *  - `null`, `undefined` : Remove value\n  *  - {Number} : Value will be interpreted in pixels\n  *  - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)\n  *\n  *  @see {@link position}\n  *  @type Number|undefined\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get top() {\n    return this.position.top;\n  }\n\n  set top(v) {\n    this.node.style.top = this._parseDims(v);\n    return this;\n  }\n\n  /**\n  *  Get/Set bottom offset in pixels (relative to wiewport)\n  *  You can set value by assigning any of :\n  *\n  *  - `null`, `undefined` : Remove value\n  *  - {Number} : Value will be interpreted in pixels\n  *  - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)\n  *\n  *  @see {@link position}\n  *  @type Number|undefined\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get bottom() {\n    return this.position.bottom;\n  }\n\n  set bottom(v) {\n    this.node.style.bottom = this._parseDims(v);\n    return this;\n  }\n\n  /**\n  *  Get/Set width in pixels\n  *  You can set value by assigning any of :\n  *\n  *  - `null`, `undefined` : Remove value\n  *  - {Number} : Value will be interpreted in pixels\n  *  - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)\n  *\n  *  @see {@link position}\n  *  @type Number|undefined\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get width() {\n    return this.position.width;\n  }\n\n  set width(v) {\n    this.node.style.width = this._parseDims(v);\n    return this;\n  }\n\n  /**\n  *  Get/Set height in pixels\n  *  You can set value by assigning any of :\n  *\n  *  - `null`, `undefined` : Remove value\n  *  - {Number} : Value will be interpreted in pixels\n  *  - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)\n  *\n  *  @see {@link position}\n  *  @type Number|undefined\n  *  @since 1.0.0\n  *  @version 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get height() {\n    return this.position.height;\n  }\n\n  set height(v) {\n    this.node.style.height = this._parseDims(v);\n    return this;\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/elements/htmlelement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "class",
    "name": "HtmlElement",
    "memberof": "src/elements/htmlelement.js",
    "static": true,
    "longname": "src/elements/htmlelement.js~HtmlElement",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/elements/htmlelement.js",
    "importStyle": "HtmlElement",
    "description": " This the common class for all other elements. It provides all functionalities to :\n - Explore and manipulate the DOM\n - Create, edit, delete properties on the object\n - Style the object\n - Fade in and out\n - Get and set position\n - Add event with a global events manager\n\n __You cannot directly create an instance of the class.__\n\n You must use the {@link Element} constructor or its alias {@link Q}\n that will then instantiate the right class given the node type (HTML, Form...).\n\n The `options` passed to the Element constructor are then passed to this class constructor.",
    "lineNumber": 36,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "elements/eventifiedelement~EventifiedElement"
    ]
  },
  {
    "__docId__": 98,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#constructor",
    "access": "private",
    "description": " Constructor for HTMLElement class\n\n You can pass any attributes as options. There are a few reserved keywords\n for specific options.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} New HTMLElement object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "Element to enhance"
      },
      {
        "nullable": null,
        "types": [
          "keyValueObject"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "Options for the HTMLElement object and/or attributes for\n the underlying native HTMLElement Object. Excepting `data`, `events`,\n `innerhtml` and `options`, any property of this object will be\n added as attribute to the underlying HTML object."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "options.class",
        "description": "Class(es) to be set as value for the `class` attribute."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "keyValueObject"
        ],
        "spread": false,
        "optional": true,
        "name": "options.style",
        "description": "Style(s) to be set as value for the `style` attribute."
      },
      {
        "nullable": null,
        "types": [
          "keyValueObject"
        ],
        "spread": false,
        "optional": true,
        "name": "options.data",
        "description": "An object with key/value pairs"
      },
      {
        "nullable": null,
        "types": [
          "keyValueObject"
        ],
        "spread": false,
        "optional": true,
        "name": "options.events",
        "description": "Events to add to the element under the format : `{eventName: callback, ...}`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "New HTMLElement object"
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "element",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#element",
    "access": "public",
    "description": " The underlying DOM node object",
    "lineNumber": 80,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "enhanced",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#enhanced",
    "access": "public",
    "description": " Convenience property to check if the object\n is an instance of this class",
    "lineNumber": 89,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "length",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#length",
    "access": "public",
    "description": " The length property if useful to quickly check what kind\n of underlying node object have been returned :\n - 0 means it's a DocumentFragment\n - 1 means it's a node (HTMLElement...)\n - More than 1 means it's a Collection (@see elementify.Collection)",
    "lineNumber": 101,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "options",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#options",
    "access": "public",
    "description": " The options passed to the constructor",
    "lineNumber": 108,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "forEach",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#forEach",
    "access": "public",
    "description": "",
    "lineNumber": 138,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@description",
        "tagValue": " Implemented for compatibility with Collection class {@see Collection} for chaining purposes"
      },
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "forEachCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to be run on each element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "attr",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#attr",
    "access": "public",
    "description": " Get or set given attribute(s) of the element.\n\n The getter can be used in two ways :\n - A string will return an attribute value\n - Array of attributes names will return a keyValueObject\n\n\n The setter can be used in three ways :\n - A string + value will set the attribute\n - A string + null will delete the attribute\n - A keyValueObject of attributes/values for multiple settings",
    "lineNumber": 163,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|Number|String|keyValueObject} Self for chaining for setter or attributes for getter"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Void",
          "String",
          "Array",
          "keyValueObject"
        ],
        "spread": false,
        "optional": true,
        "name": "a",
        "description": "Attribute(s)"
      },
      {
        "nullable": null,
        "types": [
          "Void",
          "Null",
          "Number",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "Value for the attribute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "Number",
        "String",
        "keyValueObject"
      ],
      "spread": false,
      "description": "Self for chaining for setter or attributes for getter"
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "data",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#data",
    "access": "public",
    "description": " Get or set data attribute(s) of the element.\n\n With no arguments, it will return a keyValueObject with all data attributes.\n\n Data items name will be automatically converted from dash to camel-case if needed.",
    "lineNumber": 203,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|Number|String|Object|keyValueObject}\n Self for chaining for setter or data attribute(s) values for getter"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "undefined",
          "String",
          "Array",
          "Object",
          "ObjectArray"
        ],
        "spread": false,
        "optional": true,
        "name": "a",
        "description": "Data attribute name (without leading `data-`)"
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "Value for the attribute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "Number",
        "String",
        "Object",
        "keyValueObject"
      ],
      "spread": false,
      "description": "Self for chaining for setter or data attribute(s) values for getter"
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "matches",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#matches",
    "access": "public",
    "description": " Matches returns true if the element matches the query selector",
    "lineNumber": 246,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} `true` if Element matches selector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "Valid DOM query selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "`true` if Element matches selector"
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "parent",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#parent",
    "access": "public",
    "description": " Element's n-th parent finder",
    "lineNumber": 266,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|DocumentFragment}  If the parent level is above top level, it will returns a DocumentFragment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "n",
        "description": "Distance to the current Element if number. Query selector if string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "If the parent level is above top level, it will returns a DocumentFragment"
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "parents",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#parents",
    "access": "public",
    "description": " Element's parent finder based on a DOM query selector",
    "lineNumber": 288,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Collection|HtmlElement|DocumentFragment}\n HtmlElement or DocumentFragment if no parent matches the selector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "A valid DOM query selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection",
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "HtmlElement or DocumentFragment if no parent matches the selector"
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "child",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#child",
    "access": "public",
    "description": " Element's nth child finder",
    "lineNumber": 312,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|DocumentFragment}  If the child is unreachable, it will returns a DocumentFragment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "n",
        "description": "Distance to the current Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "If the child is unreachable, it will returns a DocumentFragment"
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "childs",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#childs",
    "access": "public",
    "description": " Element's childs finder based on a DOM query selector",
    "lineNumber": 331,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Collection|HtmlElement|DocumentFragment} HtmlElement or DocumentFragment if no child matches the selector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "A valid DOM query selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection",
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "HtmlElement or DocumentFragment if no child matches the selector"
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "previousSibling",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#previousSibling",
    "access": "public",
    "description": " Element's previous sibling finder",
    "lineNumber": 345,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|DocumentFragment} If the sibling is unreachable, it will returns a DocumentFragment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Qtype"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "n",
        "description": "Distance to current Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "If the sibling is unreachable, it will returns a DocumentFragment"
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "previousSiblings",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#previousSiblings",
    "access": "public",
    "description": " Element's previous siblings finder based on a DOM query selector",
    "lineNumber": 370,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Collection|HtmlElement|DocumentFragment} DocumentFragment if no siblings matches the selector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "A valid DOM query selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection",
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "DocumentFragment if no siblings matches the selector"
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "nextSibling",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#nextSibling",
    "access": "public",
    "description": " Element's next sibling finder",
    "lineNumber": 394,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|DocumentFragment} If the sibling is unreachable, it will returns a DocumentFragment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Qtype"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "n",
        "description": "Distance to current Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "If the sibling is unreachable, it will returns a DocumentFragment"
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "nextSiblings",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#nextSiblings",
    "access": "public",
    "description": " Element's next siblings finder based on a DOM query selector",
    "lineNumber": 419,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Collection|HtmlElement|DocumentFragment} DocumentFragment if no siblings matches the selector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "A valid DOM query selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection",
        "HtmlElement",
        "DocumentFragment"
      ],
      "spread": false,
      "description": "DocumentFragment if no siblings matches the selector"
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "append",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#append",
    "access": "public",
    "description": " Append an element to another",
    "lineNumber": 443,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "HtmlElement"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "Element to append (enhanced or not)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return self for chaining"
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "prepend",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#prepend",
    "access": "public",
    "description": " Prepend an element to another",
    "lineNumber": 459,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "HtmlElement"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "Element to prepend (enhanced or not)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return self for chaining"
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "before",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#before",
    "access": "public",
    "description": " Insert an element before another. A Documentfragement wrapper will be\n inserted if Element have no parent node.\n\n The second parameter can be used to get the parent element for\n chaining instead of the element itself.",
    "lineNumber": 482,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "HtmlElement"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "Element to insert"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "returnself",
        "description": "If `true`, it will return the Element.\n If `false`, it will return the parent Element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return for chaining"
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "after",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#after",
    "access": "public",
    "description": " Insert an element before another. A Documentfragement wrapper will be\n inserted if Element have no parent node.\n\n The second parameter can be used to get the parent element for\n chaining instead of the element itself.",
    "lineNumber": 505,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "HtmlElement"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "Element to insert"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "returnself",
        "description": "If `true`, it will return the Element.\n If `false`, it will return the parent Element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return for chaining"
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "wrap",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#wrap",
    "access": "public",
    "description": " Wrap an Element into another.\n If no Element provided, the wrapper will be set to\n a DocumentFragment node.\n\n The second parameter can be used to get the parent element for\n chaining instead of the element itself.",
    "lineNumber": 529,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Node",
          "HtmlElement"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "e",
        "description": "Wrapping Element"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "returnself",
        "description": "If `true`, it will return the Element.\n If `false`, it will return the parent Element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return for chaining"
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "unwrap",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#unwrap",
    "access": "public",
    "description": " Unwrap an Element (and its siblings) and delete its parentNode",
    "lineNumber": 545,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return for chaining"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return for chaining"
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "empty",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#empty",
    "access": "public",
    "description": " Empty an Element",
    "lineNumber": 564,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return for chaining"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return for chaining"
    },
    "params": []
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "remove",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#remove",
    "access": "public",
    "description": " Remove an Element",
    "lineNumber": 578,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Return for chaining"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Return for chaining"
    },
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "html",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#html",
    "access": "public",
    "description": " Get/Set the HTML content of the node",
    "lineNumber": 593,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HTMLElement|string} Setter returns self for chaining, getter returns the string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "Value for HTML content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement",
        "string"
      ],
      "spread": false,
      "description": "Setter returns self for chaining, getter returns the string"
    }
  },
  {
    "__docId__": 124,
    "kind": "get",
    "name": "outerHTML",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#outerHTML",
    "access": "public",
    "description": " Get the outerHTML string of the underlying node",
    "lineNumber": 610,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "clone",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#clone",
    "access": "public",
    "description": " Returns a deep clone of the HtmlElement. The clone will\n contains the same child nodes.",
    "lineNumber": 630,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Clone of the current HtmlElement"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Clone of the current HtmlElement"
    },
    "params": []
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "shallow",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#shallow",
    "access": "public",
    "description": " Returns a shallow copy of the HtmlElement",
    "lineNumber": 643,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Shallow copy of the current HtmlElement"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Shallow copy of the current HtmlElement"
    },
    "params": []
  },
  {
    "__docId__": 127,
    "kind": "get",
    "name": "isInDom",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#isInDom",
    "access": "public",
    "description": " Check if the HtmlElement is present in DOM",
    "lineNumber": 656,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "get",
    "name": "node",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#node",
    "access": "public",
    "description": " Alias for the element property member that\n returns `null` instead of `undefined`",
    "see": [
      "{@link HtmlElement#element}"
    ],
    "lineNumber": 670,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "root",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#root",
    "access": "public",
    "description": " Get the root Node element for the HtmlElement\n The result is not enhanced as an HtmlElement\n because it will mostly be a `document` object\n which is not a Node object.",
    "lineNumber": 686,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Document",
        "Node"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "styles",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#styles",
    "access": "public",
    "description": " Get the computed styles of the underlying node.\n __Use with care : It can be painfully slow and must be avoided\n for huge set of automated ops on style__",
    "lineNumber": 707,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "CSSStyleDeclaration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "style",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#style",
    "access": "public",
    "description": " Get/Set style properties of an HtmlElement based on its\n node `style` attribute.\n\n Properties name will be camelized when read from style string and\n dashed when set to style string.\n\n Many syntaxes are available. See examples.\n\n You can remove a style property by setting its value to `null`",
    "examples": [
      " var e = new Element('<div style=\"color:red;margin:1em\"></div>');\n e.style('color'); // returns 'red'\n e.style('color', 'yellow'); // Set color to yellow and returns e for chaining\n e.style(['color', 'margin']); // returns {color:'red', margin: '1em'}\n e.style({color: 'yellow', padding: '5px'}); // Set color to yellow, padding to 5px and returns e for chaining\n e.style({paddingLeft: '10px', margin: '5px'}); // Set color to yellow, padding to 5px and returns e for chaining"
    ],
    "lineNumber": 747,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement|String|Object}\n Returns self for chaining for set cases,\n String or Object {styleKey: styleValue, ...} for get cases"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Array",
          "Object",
          "ObjectArray"
        ],
        "spread": false,
        "optional": true,
        "name": "a",
        "description": "get/set request on style attribute\n\n - Empty: style will returns all styles set in the stye attribute\n - String : Name or the style property to get or set if second parameter is provided\n - Array: Array of properties names to get\n - Object|ObjectArray : Properties names and values to set. If second parameter is set\n to true, it will replace all styles properties defined in the style attribute. Otherwise\n it will merge them"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "Value of the style or enable replace mode"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement",
        "String",
        "Object"
      ],
      "spread": false,
      "description": "Returns self for chaining for set cases,\n String or Object {styleKey: styleValue, ...} for get cases"
    }
  },
  {
    "__docId__": 132,
    "kind": "get",
    "name": "visible",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#visible",
    "access": "public",
    "description": " Get the visibility of an HtmlElement. It will only return\n false if the element is out of the DOM or with\n a display style property set to none.\n\n __Use with care : It can be painfully slow and must be avoided\n for huge set of automated ops on elements if display property is not set inline__",
    "lineNumber": 797,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "display",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#display",
    "access": "public",
    "description": " Set the display style property of an HtmlElement",
    "lineNumber": 812,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "Value for display property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "hide",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#hide",
    "access": "public",
    "description": " Hide an HtmlElement by setting its display property to 'none'.",
    "lineNumber": 826,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    },
    "params": []
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "show",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#show",
    "access": "public",
    "description": " Show an HtmlElement by setting its display property.\n The property value can be override for custom results (e.g. 'flex')",
    "lineNumber": 841,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'block'",
        "defaultRaw": "'block'",
        "name": "v",
        "description": "Value for display property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#toggle",
    "access": "public",
    "description": " Toggle an HtmlElement visibility by setting its display property.\n The \"show\" property value can be override for custom results (e.g. 'flex')\n\n __Use with care : It can be painfully slow and must be avoided\n for huge set of automated ops on elements if display property is not set inline__",
    "lineNumber": 859,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'block'",
        "defaultRaw": "'block'",
        "name": "v",
        "description": "Value for display property when set to visible"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "hasClass",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#hasClass",
    "access": "public",
    "description": " Check if an HtmLElement have given class(es)",
    "lineNumber": 876,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} True if class(es) are present"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "Class(es) name(s)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "True if class(es) are present"
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "addClass",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#addClass",
    "access": "public",
    "description": " Add class(es) to an HtmlElement",
    "lineNumber": 894,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "Class(es) name(s)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "removeClass",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#removeClass",
    "access": "public",
    "description": " Remove class(es) from an HtmlElement",
    "lineNumber": 913,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "Class(es) name(s)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "toggleClass",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#toggleClass",
    "access": "public",
    "description": " Toggle class(es) from an HtmlElement",
    "lineNumber": 936,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Self for chaining"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "cls",
        "description": "Class(es) name(s)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Self for chaining"
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "fadeIn",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#fadeIn",
    "access": "public",
    "description": " Fade In element given a linear easing",
    "lineNumber": 957,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this | Promise} Chainable or animation promise if available"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the animation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'block'",
        "defaultRaw": "'block'",
        "name": "options.display",
        "description": "Value for the display CSS property"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "400",
        "defaultRaw": 400,
        "name": "options.duration",
        "description": "Duration of the animation in milliseconds"
      },
      {
        "nullable": null,
        "types": [
          "Callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Animation callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this ",
        " Promise"
      ],
      "spread": false,
      "description": "Chainable or animation promise if available"
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "fadeOut",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#fadeOut",
    "access": "public",
    "description": " Fade Out element given a linear easing",
    "lineNumber": 1005,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this | Promise} Chainable or animation promise if available"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the animation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'none'",
        "defaultRaw": "'none'",
        "name": "options.display",
        "description": "Value for the display CSS property\n at the end of the animation"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "400",
        "defaultRaw": 400,
        "name": "options.duration",
        "description": "Duration of the animation in milliseconds"
      },
      {
        "nullable": null,
        "types": [
          "Callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Animation callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this ",
        " Promise"
      ],
      "spread": false,
      "description": "Chainable or animation promise if available"
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "_metricsUpdate",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#_metricsUpdate",
    "access": "private",
    "description": " Refresh position object at first call or after\n a resize / changeOrientation event",
    "lineNumber": 1051,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "_metrics",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#_metrics",
    "access": "private",
    "description": null,
    "lineNumber": 1054,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "_scrollUpdate",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#_scrollUpdate",
    "access": "private",
    "description": null,
    "lineNumber": 1070,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "_parseDims",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#_parseDims",
    "access": "private",
    "description": null,
    "lineNumber": 1084,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "get",
    "name": "position",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#position",
    "access": "public",
    "description": " Get the position property of the element. The calculation only occurs\n at first call or when window is resized, rotated or scrolled.\n\n __ Warning : Calculations can be pretty slow on huge amount of elements __\n\n A cached version of the result is available in the `_metrics` property of the\n HtmlElement. It will be only be generated after a first call to position or another\n getter/setter. It will then be regenerated after events that affect window size or scroll\n\n If the element is not in DOM, all values will return undefined.",
    "lineNumber": 1109,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "NodeMetrics"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "get",
    "name": "scrollX",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#scrollX",
    "access": "public",
    "description": " Get scroll X offset of the window in pixels",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1143,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "get",
    "name": "scrollY",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#scrollY",
    "access": "public",
    "description": " Get scroll Y offset of the window in pixels",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1156,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "get",
    "name": "left",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#left",
    "access": "public",
    "description": " Get left offset in pixels (relative to wiewport)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1169,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "set",
    "name": "left",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#left",
    "access": "public",
    "description": " Set left offset in pixels (relative to wiewport)\n\n You can set value by assigning any of :\n\n - `null`, `undefined` : Remove value\n - {Number} : Value will be interpreted in pixels\n - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1187,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ]
  },
  {
    "__docId__": 152,
    "kind": "get",
    "name": "right",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#right",
    "access": "public",
    "description": " Get/Set right offset in pixels (relative to wiewport)\n You can set value by assigning any of :\n\n - `null`, `undefined` : Remove value\n - {Number} : Value will be interpreted in pixels\n - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1206,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "set",
    "name": "right",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#right",
    "access": "public",
    "description": null,
    "lineNumber": 1210,
    "undocument": true
  },
  {
    "__docId__": 154,
    "kind": "get",
    "name": "top",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#top",
    "access": "public",
    "description": " Get/Set top offset in pixels (relative to wiewport)\n You can set value by assigning any of :\n\n - `null`, `undefined` : Remove value\n - {Number} : Value will be interpreted in pixels\n - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1229,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "set",
    "name": "top",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#top",
    "access": "public",
    "description": null,
    "lineNumber": 1233,
    "undocument": true
  },
  {
    "__docId__": 156,
    "kind": "get",
    "name": "bottom",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#bottom",
    "access": "public",
    "description": " Get/Set bottom offset in pixels (relative to wiewport)\n You can set value by assigning any of :\n\n - `null`, `undefined` : Remove value\n - {Number} : Value will be interpreted in pixels\n - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1252,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "set",
    "name": "bottom",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#bottom",
    "access": "public",
    "description": null,
    "lineNumber": 1256,
    "undocument": true
  },
  {
    "__docId__": 158,
    "kind": "get",
    "name": "width",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#width",
    "access": "public",
    "description": " Get/Set width in pixels\n You can set value by assigning any of :\n\n - `null`, `undefined` : Remove value\n - {Number} : Value will be interpreted in pixels\n - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1275,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "set",
    "name": "width",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#width",
    "access": "public",
    "description": null,
    "lineNumber": 1279,
    "undocument": true
  },
  {
    "__docId__": 160,
    "kind": "get",
    "name": "height",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#height",
    "access": "public",
    "description": " Get/Set height in pixels\n You can set value by assigning any of :\n\n - `null`, `undefined` : Remove value\n - {Number} : Value will be interpreted in pixels\n - {String} : any css acceptable value for the property (e.g '5vi', '1em'...)",
    "see": [
      "{@link position}"
    ],
    "lineNumber": 1298,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "set",
    "name": "height",
    "memberof": "src/elements/htmlelement.js~HtmlElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/htmlelement.js~HtmlElement#height",
    "access": "public",
    "description": null,
    "lineNumber": 1302,
    "undocument": true
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/elements/inputelement.js",
    "content": "/**\n*  @file Input Element definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport HtmlElement from 'elements/htmlelement';\nimport Q from 'query';\nimport uniqid from 'utilities/uniqid';\n\n/**\n*  InputElement is the common basic class wrapping all vanilla HTML inputs.\n*  It provides all properties and method to :\n*  - get/set Element value\n*  - reset Element value\n*  - validate Element value\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*/\n\nexport default class InputElement extends HtmlElement {\n  /**\n  *  InputElement constructor\n  *  Node and options are passed through {@link Element} call.\n  *\n  *  If the Element have required or pattern atributes, validation\n  *  rules will be automatically set accordingly.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @private\n  *\n  *  @param {Element} node Input element\n  *  @param {KeyValueObject} options Options for the InputElement\n  *\n  *  Specific keys are :\n  *\n  *  - `value`: initial value of the Element\n  *  - `options`: list of options {value: text} for a select tag\n  *\n  *  @returns {InputElement}\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement\n  */\n  constructor(node, options = {}) {\n    super(node, options);\n\n    /**\n    *  Rules for validation\n    *\n    *  @type {ObjectArray}\n    *  @since 1.0.0\n    */\n    this._rules = new ObjectArray();\n\n    /**\n    *  Errors after validation\n    *\n    *  @type {ObjectArray}\n    *  @since 1.0.0\n    */\n    this._errors = new ObjectArray();\n\n    // Add input type to Textarea and Select for further switch operations\n    if (this.node.nodeName === 'TEXTAREA') this.type = 'textarea';\n    if (this.node.nodeName === 'SELECT') {\n      this.type = 'select';\n      // Generates options items\n      if (options.options) {\n        for (let key in options.options) {\n          this.append(`<option value=\"${key}\" ${key === options.value ? 'selected' : ''}>` +\n                      `${options.options[key]}` +\n                      '</option>');\n        }\n      }\n    }\n\n    // Set value\n    if (options.value !== undefined) {\n      this.value = this.node.defaultValue = options.value;\n    }\n\n    // Set validation rules\n    if (this.attr('required')) this.rule('required');\n    if (this.attr('pattern')) this.rule('patternAttribute', this.attr('pattern'), null, true);\n    this.rule(this.attr('type'));\n  }\n\n  /**\n  *  Get a unique name\n  *  - `name`attribute value\n  *  - `id` attribute value if name not set\n  *  - A random unique id if both name and value are not set\n  *\n  *  @type {string}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get name() {\n    let name = this.node.name || this.node.id;\n\n    if (name === '') name = 'input-' + uniqid();\n    return name;\n  }\n\n  /**\n  *  Get standardized lowercased type attribute\n  *\n  *  @type {string}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get type() {\n    return (this.attr('type') || 'text').toLowerCase();\n  }\n\n  /**\n  *  Set input type attribute\n  *\n  *  @type {string}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  set type(t) {\n    this.attr('type', t);\n  }\n\n  /**\n  *  Get value\n  *\n  *  It normalizes the behaviour for boolean inputs (radio & checkbox) :\n  *  - If no value attribute is set, it will return `true` or `false`\n  *  - If a value attribute is set, it will return undefined and will be\n  *  skipped in fields list if not checked or returns its value otherwise.\n  *\n  *  @type {boolean|string|undefined}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @todo\n  *  - Add more casting (all values are considered as string when extracted)\n  */\n  get value() {\n    var ret;\n\n    switch (this.type) {\n      case 'checkbox' :\n      case 'radio' :\n        if (typeof this.attr('value') !== 'undefined' && this.attr('value') !== null) {\n          ret = (this.node.checked ? this.attr('value') : undefined);\n        } else ret = this.node.checked ? 1 : 0;\n        break;\n      default:\n        ret = (this.node.value || '').trim();\n        break;\n    }\n    return ret;\n  }\n\n  /**\n  *  Set value\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  set value(val) {\n    val = (String(val)).trim();\n\n    switch (this.type) {\n      case 'textarea': // Update textarea content\n        this.element.value = val;\n        this.html(val);\n        break;\n      case 'select': // Validate value is an option\n        let o, n = 1;\n\n        while ((o = this.child(n++)).length && val !== o.value);\n        if (o.length) this.value = val;\n        break;\n      case 'checkbox' :\n      case 'radio' :\n        if (val === true || val === false) this.node.checked = val;\n        else this.element.value = val;\n        break;\n      default:\n        this.element.value = val;\n        break;\n    }\n  }\n\n  /**\n  *  Get/Set value. It's a chainable alias for the getter/setter\n  *  properties\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {number|string} [v] Value to set\n  *  @returns {this|boolean|string|undefined}\n  *  @see {@link value}\n  */\n  val(v) {\n    if (typeof v !== 'undefined' && v !== null) {\n      this.value = v;\n      return this;\n    }\n    return this.value;\n  }\n\n  /**\n  *  Dirty state\n  *\n  *  Will be `true` if field value/state have changed\n  *  `false` otherwise\n  *\n  *  @type {boolean}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @see https://www.sitepoint.com/detect-html-form-changes/\n  */\n  get dirty() {\n    if (\n      this.type === 'checkbox' ||\n      this.type === 'radio'\n    ) return this.node.checked !== this.node.defaultChecked;\n    else if (this.type === 'select') {\n      let c = false, def = 0, o, ol, opt;\n\n      for (o = 0, ol = this.node.options.length; o < ol; o++) {\n        opt = this.node.options[o];\n        c = c || (opt.selected !== opt.defaultSelected);\n        if (opt.defaultSelected) def = o;\n      }\n      if (c && !this.node.multiple) c = (def !== this.node.selectedIndex);\n    }\n    return this.value !== this.node.defaultValue;\n  }\n\n  /**\n  *  Add a validation rule. Some presets are available :\n  *\n  *  - `required` : Value must be not empty. Add a `required` attribute to the Element\n  *  - `sameas` : Value must be the same than another field. __You must\n  *  provide a CSS Selector to query this field as second argument__\n  *  - `int` : Strict integer (only numbers)\n  *  - `number` : Decimal number (with dot). Change Element type attribute to `number`\n  *  - `email` : E-mail pattern. Change Element type attribute to `email`\n  *\n  *  For custom error messages when validating through browser or programmatically,\n  *  you can set the title attribute of the InputElement or provide a message when\n  *  creating rule.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string}  name  Name of the rule (preset or custom)\n  *  @param {string|RegExp|CSSSelector|InputRuleCallback} [pattern]\n  *  - Presets will usually don't require this value\n  *  - For preset `sameas`, you must provide the required CSS selector\n  *  to find the other Element in order to check value.\n  *  - For custom rule, you can provide a valid RegExp object or a callback. Any other value\n  *  will be evaluated as a RegExp if fourth parameter is set to `true`.\n  *  @param {string}  [message]   A message linked to a non validated rule can be store here\n  *  @param {boolean} [evaluate = false]  If `true`, the method will try to evaluate\n  *  `pattern`parameter as a regular expression. If `false`, it will simply don't create rule\n  *  if `pattern` is not a {@link Function} or a {@link RegExp}.\n  *  @returns {this} Chainable\n  *  @todo  Add more presets\n  */\n  rule(name, pattern, message, evaluate = false) {\n    // Presets\n    switch (name) {\n      case 'required':\n        this._rules.push('required.pattern', /^(?!\\s*$).+/);\n        this._rules.push('required.message', message || 'FIELD_REQUIRED');\n        this.attr('required', 'required');\n        break;\n      case 'sameas':\n        this._rules.push('sameas.pattern', pattern);\n        this._rules.push('sameas.message', message || ('FIELD_NOT_MATCHING_' + pattern));\n        break;\n      case 'int':\n        this._rules.push('int.pattern', /^\\-?\\d+$/);\n        this._rules.push('int.message', message || 'FIELD_NOT_INT');\n        this.type = 'number';\n        break;\n      case 'number':\n        this._rules.push('number.pattern', /^\\-?\\d+\\.?\\d*$/);\n        this._rules.push('number.message', message || 'FIELD_NOT_DECIMAL');\n        this.type = 'number';\n        break;\n      case 'email':\n        this._rules.push('email.pattern', /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/); //eslint-disable-line\n        this._rules.push('email.message', message || 'FIELD_NOT_EMAIL');\n        this.type = 'email';\n        break;\n      default:\n        if (pattern instanceof Function) {\n          this._rules.push(name + '.callback', pattern);\n          this._rules.push(name + '.message', message);\n        } else if (pattern instanceof RegExp || evaluate) {\n          this._rules.push(name + '.pattern', new RegExp(pattern));\n          this._rules.push(name + '.message', message);\n        }\n    }\n    return this;\n  }\n\n  /**\n  *  Export rules set on the Element\n  *\n  *  @type {InputValidationRules}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get rules() {\n    return this._rules.data;\n  }\n\n  /**\n  *  Import rules set on the Element\n  *\n  *  @type {InputValidationRules}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  set rules(rules) {\n    this._rules.import(rules);\n  }\n\n  /**\n  *  Validate the field against the rules. Any errors will be logged\n  *  in {@link errors} property.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {boolean} `true`if field validates, `false` otherwise.\n  */\n  validate() {\n    // Reset errors\n    this._errors.empty();\n\n    // fix : Some older browsers may returns the placeholder as value\n    if (this.value === this.attr('placeholder')) this.value = '';\n\n    return this._rules.reduce(function (validate, v, k) {\n      if (k === 'sameas') validate = this.value === Q(v.pattern).value;\n      else if (v.pattern) validate = v.pattern.test(this.value);\n      else validate = v.callback.call(this, this);\n      if (!validate) this._errors.push(k, v.message || this.attr('title'));\n      return validate;\n    }.bind(this), true);\n  }\n\n  /**\n  *  Fetch validation errors\n  *\n  *  @type {Object}\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  get errors() {\n    return this._errors.data;\n  }\n\n  /**\n  *  Returns a label HtmlElement linked to this inputElement\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} t Text for label\n  *  @param {KeyValueObject} o Options for HtmLElement\n  *  @returns {HtmlElement} Label\n  */\n  label(t, o) {\n    return Q(`+<label for=\"${this.name}\">${t}</label>`, o);\n  }\n\n  /**\n  *  Returns a tooltip HtmlElement linked to this inputElement\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {$type} t Text for tooltip\n  *  @param {KeyValueObject} o Options for HtmLElement\n  *  @returns {HtmlElement} Tooltip\n  */\n  tooltip(t, o) {\n    return Q(`+<span data-for=\"${this.name}\" data-type=\"tooltip\">${t}</span>`, o);\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/elements/inputelement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "InputElement",
    "memberof": "src/elements/inputelement.js",
    "static": true,
    "longname": "src/elements/inputelement.js~InputElement",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/elements/inputelement.js",
    "importStyle": "InputElement",
    "description": " InputElement is the common basic class wrapping all vanilla HTML inputs.\n It provides all properties and method to :\n - get/set Element value\n - reset Element value\n - validate Element value",
    "lineNumber": 24,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "elements/htmlelement~HtmlElement"
    ]
  },
  {
    "__docId__": 164,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#constructor",
    "access": "private",
    "description": " InputElement constructor\n Node and options are passed through {@link Element} call.\n\n If the Element have required or pattern atributes, validation\n rules will be automatically set accordingly.",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"
    ],
    "lineNumber": 48,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{InputElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "Input element"
      },
      {
        "nullable": null,
        "types": [
          "KeyValueObject"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the InputElement\n\n Specific keys are :\n\n - `value`: initial value of the Element\n - `options`: list of options {value: text} for a select tag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "InputElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "_rules",
    "memberof": "src/elements/inputelement.js~InputElement",
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#_rules",
    "access": "private",
    "description": " Rules for validation",
    "lineNumber": 57,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "_errors",
    "memberof": "src/elements/inputelement.js~InputElement",
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#_errors",
    "access": "private",
    "description": " Errors after validation",
    "lineNumber": 65,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "get",
    "name": "name",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#name",
    "access": "public",
    "description": " Get a unique name\n - `name`attribute value\n - `id` attribute value if name not set\n - A random unique id if both name and value are not set",
    "lineNumber": 103,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "get",
    "name": "type",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#type",
    "access": "public",
    "description": " Get standardized lowercased type attribute",
    "lineNumber": 118,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "set",
    "name": "type",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#type",
    "access": "public",
    "description": " Set input type attribute",
    "lineNumber": 130,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "get",
    "name": "value",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#value",
    "access": "public",
    "description": " Get value\n\n It normalizes the behaviour for boolean inputs (radio & checkbox) :\n - If no value attribute is set, it will return `true` or `false`\n - If a value attribute is set, it will return undefined and will be\n skipped in fields list if not checked or returns its value otherwise.",
    "lineNumber": 149,
    "since": "1.0.0",
    "version": "1.0.0",
    "todo": [
      " - Add more casting (all values are considered as string when extracted)"
    ],
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean",
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "set",
    "name": "value",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#value",
    "access": "public",
    "description": " Set value",
    "lineNumber": 173,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ]
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "val",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#val",
    "access": "public",
    "description": " Get/Set value. It's a chainable alias for the getter/setter\n properties",
    "see": [
      "{@link value}"
    ],
    "lineNumber": 210,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this|boolean|string|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "Value to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this",
        "boolean",
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "get",
    "name": "dirty",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#dirty",
    "access": "public",
    "description": " Dirty state\n\n Will be `true` if field value/state have changed\n `false` otherwise",
    "see": [
      "https://www.sitepoint.com/detect-html-form-changes/"
    ],
    "lineNumber": 230,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "rule",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#rule",
    "access": "public",
    "description": " Add a validation rule. Some presets are available :\n\n - `required` : Value must be not empty. Add a `required` attribute to the Element\n - `sameas` : Value must be the same than another field. __You must\n provide a CSS Selector to query this field as second argument__\n - `int` : Strict integer (only numbers)\n - `number` : Decimal number (with dot). Change Element type attribute to `number`\n - `email` : E-mail pattern. Change Element type attribute to `email`\n\n For custom error messages when validating through browser or programmatically,\n you can set the title attribute of the InputElement or provide a message when\n creating rule.",
    "lineNumber": 280,
    "since": "1.0.0",
    "version": "1.0.0",
    "todo": [
      " Add more presets"
    ],
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this} Chainable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the rule (preset or custom)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "RegExp",
          "CSSSelector",
          "InputRuleCallback"
        ],
        "spread": false,
        "optional": true,
        "name": "pattern",
        "description": "Presets will usually don't require this value\n - For preset `sameas`, you must provide the required CSS selector\n to find the other Element in order to check value.\n - For custom rule, you can provide a valid RegExp object or a callback. Any other value\n will be evaluated as a RegExp if fourth parameter is set to `true`."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "A message linked to a non validated rule can be store here"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "evaluate",
        "description": "If `true`, the method will try to evaluate\n `pattern`parameter as a regular expression. If `false`, it will simply don't create rule\n if `pattern` is not a {@link Function} or a {@link RegExp}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "Chainable"
    }
  },
  {
    "__docId__": 183,
    "kind": "get",
    "name": "rules",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#rules",
    "access": "public",
    "description": " Export rules set on the Element",
    "lineNumber": 327,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "InputValidationRules"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "set",
    "name": "rules",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#rules",
    "access": "public",
    "description": " Import rules set on the Element",
    "lineNumber": 339,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "InputValidationRules"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "validate",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#validate",
    "access": "public",
    "description": " Validate the field against the rules. Any errors will be logged\n in {@link errors} property.",
    "lineNumber": 353,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true`if field validates, `false` otherwise."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true`if field validates, `false` otherwise."
    },
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "get",
    "name": "errors",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#errors",
    "access": "public",
    "description": " Fetch validation errors",
    "lineNumber": 377,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "label",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#label",
    "access": "public",
    "description": " Returns a label HtmlElement linked to this inputElement",
    "lineNumber": 392,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Label"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Text for label"
      },
      {
        "nullable": null,
        "types": [
          "KeyValueObject"
        ],
        "spread": false,
        "optional": false,
        "name": "o",
        "description": "Options for HtmLElement"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Label"
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "tooltip",
    "memberof": "src/elements/inputelement.js~InputElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/inputelement.js~InputElement#tooltip",
    "access": "public",
    "description": " Returns a tooltip HtmlElement linked to this inputElement",
    "lineNumber": 407,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{HtmlElement} Tooltip"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "$type"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "Text for tooltip"
      },
      {
        "nullable": null,
        "types": [
          "KeyValueObject"
        ],
        "spread": false,
        "optional": false,
        "name": "o",
        "description": "Options for HtmLElement"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HtmlElement"
      ],
      "spread": false,
      "description": "Tooltip"
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "src/elements/windowelement.js",
    "content": "/**\n*  @file Window Element definition class\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport EventifiedElement from 'elements/eventifiedelement';\n\nexport default class WindowElement extends EventifiedElement {\n  constructor(options) {\n    super();\n\n    this.element = this.node = window;\n    this.length = 0;\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/elements/windowelement.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "class",
    "name": "WindowElement",
    "memberof": "src/elements/windowelement.js",
    "static": true,
    "longname": "src/elements/windowelement.js~WindowElement",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/elements/windowelement.js",
    "importStyle": "WindowElement",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "elements/eventifiedelement~EventifiedElement"
    ]
  },
  {
    "__docId__": 192,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/elements/windowelement.js~WindowElement",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/elements/windowelement.js~WindowElement#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "element",
    "memberof": "src/elements/windowelement.js~WindowElement",
    "static": false,
    "longname": "src/elements/windowelement.js~WindowElement#element",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "length",
    "memberof": "src/elements/windowelement.js~WindowElement",
    "static": false,
    "longname": "src/elements/windowelement.js~WindowElement#length",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "src/events/complete.js",
    "content": "/**\n*  @file Complete event for elementify\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\n/**\n*  Returns a promise fullfilled when document is at complete state\n*  meaning all assets have been loaded\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*  @param {Function}  callback  Callback to be run when event fired\n*  @returns {undefined|Promise}\n*  @example\n*  // With promise\n*  complete().then(function() { console.log('Assets loaded !') });\n*\n*  // With callback\n*  complete(function() { console.log('Assets loaded !') });\n*\n*/\n\nexport default function complete(callback) {\n  function process(resolve, reject) {\n    if (document.readyState === 'complete') {\n      if (callback instanceof Function) callback();\n      resolve(true);\n    } else {\n      document.addEventListener('readystatechange', (ev) => {\n        if (document.readyState === 'complete') {\n          if (callback instanceof Function) callback(ev);\n          resolve(true);\n        }\n      });\n    }\n  }\n\n  if (typeof Promise !== 'undefined') return new Promise(process);\n  return process(()=>{}, ()=>{});\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/events/complete.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "complete",
    "memberof": "src/events/complete.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/events/complete.js~complete",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/events/complete.js",
    "importStyle": "complete",
    "description": " Returns a promise fullfilled when document is at complete state\n meaning all assets have been loaded",
    "examples": [
      " // With promise\n complete().then(function() { console.log('Assets loaded !') });\n\n // With callback\n complete(function() { console.log('Assets loaded !') });"
    ],
    "lineNumber": 26,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{undefined|Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback to be run when event fired"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined",
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "src/events/eventsmanager.js",
    "content": "/**\n*  @file Events manager class for elementify\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport Q from 'query';\n\n/**\n*  EventsManager class provide an object in order to\n*  easily track and manage user-defined events\n*  Eventified Elements\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @see HtmlElement\n*/\n\nexport default class EventsManager {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @returns {EventsManager} Event manager\n  */\n  constructor() {\n    /**\n    *  Events storage\n    *\n    *  @type {ObjectArray}\n    *  @since 1.0.0\n    */\n    this.orm = new ObjectArray();\n  }\n\n  /**\n  *  Cleans events database from object that are not in DOM anymore.\n  *  This method is called each time the events manager is accessed\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {void}\n  */\n  clean() {\n    this.orm.forEach(function (v, k) {\n      if (!Q('[data-__id__=\"' + k + '\"]').length) this.orm.remove(k);\n    }.bind(this));\n  }\n\n  /**\n  *  Check if object have event, specific event or specific event/callback\n  *  given the `key` parameter value\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} [key] All events if not provided or path to the event or event callback\n  *  in dotted way\n  *  @returns {boolean} `true` if result found\n  */\n  has(key) {\n    this.clean();\n    return this.orm.has(key);\n  }\n\n  /**\n  *  Add and event/callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} key Event name\n  *  @param {Function} val Event callback\n  *  @param {string} pKey Context parent key (useless)\n  *  @returns {this} Chainable\n  */\n  push(key, val, pKey) {\n    this.clean();\n    this.orm.push(key, val, pKey);\n    return this;\n  }\n\n  /**\n  *  Fetch all events, specific event or specific event/callback\n  *  given the `key` paramater value\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} [key] All events if not provided or path to the event or event callback\n  *  in dotted way\n  *  @returns {boolean} `true` if result found\n  */\n  pull(key) {\n    this.clean();\n    return this.orm.pull(key);\n  }\n\n  /**\n  *  Remove all events, specific event or specific event/callback\n  *  given the `key` paramater value\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} [key] All events if not provided or path to the event or event callback\n  *  in dotted way\n  *  @returns {boolean} `true` if result found\n  */\n  remove(key) {\n    this.clean();\n    this.orm.remove(key);\n    return this;\n  }\n\n  /**\n  *  Iterates on all events, specific event or specific event/callback\n  *  given the `pKey` paramater value\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Function}  cb  Callback for iteration\n  *  @param {string} [pKey] Context parent key\n  *  @returns {boolean} `true` if result found\n  */\n  forEach(cb, pKey) {\n    this.orm.forEach(cb, pKey);\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/events/eventsmanager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "class",
    "name": "EventsManager",
    "memberof": "src/events/eventsmanager.js",
    "static": true,
    "longname": "src/events/eventsmanager.js~EventsManager",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/events/eventsmanager.js",
    "importStyle": "EventsManager",
    "description": " EventsManager class provide an object in order to\n easily track and manage user-defined events\n Eventified Elements",
    "see": [
      "HtmlElement"
    ],
    "lineNumber": 21,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 199,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{EventsManager} Event manager"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EventsManager"
      ],
      "spread": false,
      "description": "Event manager"
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "orm",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#orm",
    "access": "public",
    "description": " Events storage",
    "lineNumber": 34,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "ObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "clean",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#clean",
    "access": "public",
    "description": " Cleans events database from object that are not in DOM anymore.\n This method is called each time the events manager is accessed",
    "lineNumber": 47,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "has",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#has",
    "access": "public",
    "description": " Check if object have event, specific event or specific event/callback\n given the `key` parameter value",
    "lineNumber": 65,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true` if result found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "key",
        "description": "All events if not provided or path to the event or event callback\n in dotted way"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if result found"
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "push",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#push",
    "access": "public",
    "description": " Add and event/callback",
    "lineNumber": 82,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this} Chainable"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "Event callback"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pKey",
        "description": "Context parent key (useless)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "Chainable"
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "pull",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#pull",
    "access": "public",
    "description": " Fetch all events, specific event or specific event/callback\n given the `key` paramater value",
    "lineNumber": 100,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true` if result found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "key",
        "description": "All events if not provided or path to the event or event callback\n in dotted way"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if result found"
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "remove",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#remove",
    "access": "public",
    "description": " Remove all events, specific event or specific event/callback\n given the `key` paramater value",
    "lineNumber": 117,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true` if result found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "key",
        "description": "All events if not provided or path to the event or event callback\n in dotted way"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if result found"
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "forEach",
    "memberof": "src/events/eventsmanager.js~EventsManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/eventsmanager.js~EventsManager#forEach",
    "access": "public",
    "description": " Iterates on all events, specific event or specific event/callback\n given the `pKey` paramater value",
    "lineNumber": 135,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean} `true` if result found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "Callback for iteration"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "pKey",
        "description": "Context parent key"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if result found"
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "src/events/ready.js",
    "content": "/**\n*  @file Ready event for elementify\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\n/**\n*  Returns a promise fullfilled when document is at interactive state\n*  meaning DOM is safe to manipulate\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*  @returns {Promise}\n*  @example\n*  ready().then(function() { console.log('Can manipulate DOM!') });\n*/\nexport default function ready(callback) {\n  function process(resolve, reject) {\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      if (callback instanceof Function) callback();\n      resolve(true);\n    } else {\n      document.addEventListener('readystatechange', (ev) => {\n        if (document.readyState === 'interactive') {\n          if (callback instanceof Function) callback(ev);\n          resolve(true);\n        }\n      });\n    }\n  }\n\n  if (typeof Promise !== 'undefined') return new Promise(process);\n  return process(()=>{}, ()=>{});\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/events/ready.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "ready",
    "memberof": "src/events/ready.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/events/ready.js~ready",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/events/ready.js",
    "importStyle": "ready",
    "description": " Returns a promise fullfilled when document is at interactive state\n meaning DOM is safe to manipulate",
    "examples": [
      " ready().then(function() { console.log('Can manipulate DOM!') });"
    ],
    "lineNumber": 19,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n*  @file Elementify main\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport load from 'load';\nimport Element from 'element';\nimport Collection from 'collection';\nimport Q from 'query';\nimport ready from 'events/ready';\nimport complete from 'events/complete';\nimport ObjectArray from 'dot-object-array';\nimport uniqid from 'utilities/uniqid';\n\nexport {load, Collection, Element, Q, ready, complete, ObjectArray, uniqid};\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "src/load.js",
    "content": "/**\n*  @file Elementify main\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport Element from 'element';\nimport Collection from 'collection';\nimport Q from 'query';\n\n/**\n*  Load Elementify names exports into the global scope. Therefore,\n*  these functions and objects will be directly accessible.\n*\n*  You can personnalize the name of the Q function (and\n*  may try $ ;)\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license MIT {@https://github.com/liqueurdetoile/DotObjectArray/blob/master/LICENSE}\n*  @see {@link Q}\n*\n*  @params {String} [Qname='Q'] Name for Q [function]{@link Q} in the global scope.\n*/\n\nexport default function load(Qname = 'Q') {\n  window.Element = Element;\n  window.Collection = Collection;\n  window[Qname] = Q;\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/load.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "load",
    "memberof": "src/load.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/load.js~load",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/load.js",
    "importStyle": "load",
    "description": " Load Elementify names exports into the global scope. Therefore,\n these functions and objects will be directly accessible.\n\n You can personnalize the name of the Q function (and\n may try $ ;)",
    "see": [
      "{@link Q}"
    ],
    "lineNumber": 27,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@license",
        "tagValue": "MIT {@https://github.com/liqueurdetoile/DotObjectArray/blob/master/LICENSE}"
      },
      {
        "tagName": "@params",
        "tagValue": "{String} [Qname='Q'] Name for Q [function]{@link Q} in the global scope."
      }
    ],
    "params": [
      {
        "name": "Qname",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "Q",
        "defaultValue": "Q"
      }
    ],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/query.js",
    "content": "/**\n*  @file Q function definition\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\nimport Element from 'element';\nimport Collection from 'collection';\n\n/**\n*  The `Q` function can be used to create Elements,\n*  enhance nodes and query DOM or nodes. It's the swiss army knife\n*  of elementify\n*\n*  ### query syntax\n*\n*  `Q` will returns an empty collection if\n*  no elements are found with the given query. A single HtmLElement (or extended\n*  Form, FormElement) if there is only one result and a collection if\n*  there is more than one result.\n*\n*  In query mode, the first parameter must be a valid CSS query selector :\n*\n*  <ul>\n*  <li>#idname for single id search will trigger `getElementById`</li>\n*  <li>.classname for single class search will trigger `getElementsByClassName`</li>\n*  <li>@elementName for a single name attribute search will trigger `getElementsByName`</li>\n*  <li>=tagName for a single tag name search will trigger `getElementsByTagName`</li>\n*  </ul>\n*\n*  Any others queries will be treated through `querySelectorAll`. For single queries,\n*  using the above functions will generally be faster than falling down to `querySelectorAll`.\n*\n*  `Q` tweaks the query so you can perform id or name search in nodes that are not in DOM.\n*\n*  The second parameter let restrict the search to a node.\n*\n*  ### Creating and enhancing syntax\n*\n*  If the first parameter is empty, `Q` will return an HtmlElement with an\n*  underlying {@link DocumentFragment}.\n*  You can use `Q` as an alias for [Element constructor]{@link elementify.Element}\n*  with prepending a `+` on the string node description or providing\n*  a valid Element node created with `document.createElement()`.\n*\n*  Any element node provided to `Q` will be returned enhanced.\n*  Any HtmlElement or Collection will be returned as is.\n*\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*  @param {Element|Node|String} [s] Element definition or search query\n*  @param {Element|Node|String|ArrayObject} [e] Element options or search context\n*  @returns {Collection|HtmlElement}\n*/\nfunction Q(s, e) {\n  var q, r;\n\n  // Create/Enhance mode\n  if (typeof s === 'undefined') return new Element();\n  if (s.enhanced) return s;\n  if (s.nodeType || s === window) return new Element(s, e);\n  if (s[0] === '+') return new Element(s.slice(1), e);\n\n  // Query mode\n  if (typeof e === 'undefined') e = document;\n  else if (e.node) e = e.node;\n\n  // Tweak search if e not equal to document\n  if (e !== document) {\n    // Let ID search into a node\n    if (s[0] === '#') s = s.replace('#', '[id=\"') + '\"]';\n    // Let name search into a node\n    if (s[0] === '@') s = s.replace('@', '[name=\"') + '\"]';\n  }\n\n  try {\n    q = e[ {\n      '#': 'getElementById',\n      '.': 'getElementsByClassName',\n      '@': 'getElementsByName',\n      '=': 'getElementsByTagName'\n    }[ s[0] ] ](s.slice(1));\n  } catch (ex) {\n    try {\n      q = e.querySelectorAll(s);\n    } catch (ex) { throw new TypeError('Invalid CSS query Selector'); }\n  }\n\n  if (q === null) return new Element();\n\n  if (\n    typeof q !== 'undefined' &&\n    typeof q.length !== 'undefined' &&\n    q.nodeName !== 'FORM'\n  ) {\n    if (q.length > 1) {\n      r = new Collection();\n      r.query = s;\n      for (let i = 0; i < q.length; i++) r.push(new Element(q.item([i])));\n    } else if (q.length === 1) {\n      r = new Element(q.item([0]));\n    } else return new Element();\n  } else r = new Element(q);\n  return r;\n}\n\nexport default Q;\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/query.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "Q",
    "memberof": "src/query.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/query.js~Q",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/query.js",
    "importStyle": "Q",
    "description": " The `Q` function can be used to create Elements,\n enhance nodes and query DOM or nodes. It's the swiss army knife\n of elementify\n\n ### query syntax\n\n `Q` will returns an empty collection if\n no elements are found with the given query. A single HtmLElement (or extended\n Form, FormElement) if there is only one result and a collection if\n there is more than one result.\n\n In query mode, the first parameter must be a valid CSS query selector :\n\n <ul>\n <li>#idname for single id search will trigger `getElementById`</li>\n <li>.classname for single class search will trigger `getElementsByClassName`</li>\n <li>@elementName for a single name attribute search will trigger `getElementsByName`</li>\n <li>=tagName for a single tag name search will trigger `getElementsByTagName`</li>\n </ul>\n\n Any others queries will be treated through `querySelectorAll`. For single queries,\n using the above functions will generally be faster than falling down to `querySelectorAll`.\n\n `Q` tweaks the query so you can perform id or name search in nodes that are not in DOM.\n\n The second parameter let restrict the search to a node.\n\n ### Creating and enhancing syntax\n\n If the first parameter is empty, `Q` will return an HtmlElement with an\n underlying {@link DocumentFragment}.\n You can use `Q` as an alias for [Element constructor]{@link elementify.Element}\n with prepending a `+` on the string node description or providing\n a valid Element node created with `document.createElement()`.\n\n Any element node provided to `Q` will be returned enhanced.\n Any HtmlElement or Collection will be returned as is.",
    "lineNumber": 58,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Collection|HtmlElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "s",
        "description": "Element definition or search query"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "String",
          "ArrayObject"
        ],
        "spread": false,
        "optional": true,
        "name": "e",
        "description": "Element options or search context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection",
        "HtmlElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "src/typedef.doc.js",
    "content": "/**\n*  @file Docs file for typedef\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\n/**\n*  Any vanilla object that is on the form of a paired key/value structure :\n*\n*  @typedef {Object} KeyValueObject\n*  @example\n*  {\n*   key1: value1,\n*   key2: value2,\n*   [...],\n*   keyN: valueN\n*  }\n*/\n\n/**\n*  A read-only object that parses position and size informations about an HtmlElement.\n*  The position is relative to viewport. If you want absolute positionning on a page,\n*  you must also use scrollX and scrollY values\n*\n*  @typedef {Object|DOMRect} NodeMetrics\n*\n*  @property {Number} left  Left offset from viewport in pixels\n*  @property {Number} top  Top offset from viewport in pixels\n*  @property {Number} right  Right offset from viewport in pixels\n*  @property {Number} bottom  Bottom offset from viewport in pixels\n*  @property {Number} width  Width in pixels\n*  @property {Number} height  Height in pixels\n*  @property {Number} outerWidth  Outer width in pixels\n*  @property {Number} outerHeight  Outer height in pixels\n*  @property {Number} scrollX Offset of the viewport from left in pixels\n*  @property {Number} scrollY Offset of the viewport from top in pixels\n*/\n\n/**\n*  Object used to store the validation rules on an InputElement.\n*  \n*  @typedef {Object} InputValidationRules\n*  @property  {RegExp|CSSSelector}  pattern Pattern used for regexp or CSS Selector with `sameas`\n*  @property  {string}  message   Message stored with the rule (usually an error Key for i18n to user)\n*/\n\n/**\n*  This callback is used in forEach callback iteration on a Collection.\n*\n*  The callback is provided with two parameters :\n*  - element {{@link HtmlElement}} Current element in the iteration\n*  - index {Number}  Index of the current iterated element\n*\n*  @typedef {Function} ForEachCallback\n*/\n\n/**\n*  This callback is used in rule validation for InputElement.\n*\n*  The callback is provided with the InputElement context. You can then call\n*  `this.value` to fetch InputElement value.\n*  It __must__ return `true` if validates or `false` otherwise.\n*\n*  @typedef {Function} InputRuleCallback\n*  @example\n*  var i = new Element('<input type=\"text\">');\n*\n*  i.rule('myRule', function() {\n*     return this.value > 5;\n*  }, 'value must be over 5');\n*  \n*  i.value = 3;\n*  i.validate(); // returns false\n*  console.log(i.errors); // outputs {myRule: 'value must be over 5'}\n* \n*/\n\n/**\n*  @external {DOMRect} https://developer.mozilla.org/fr/docs/Web/API/DOMRect\n*/\n/**\n*  @external {Node} https://developer.mozilla.org/fr/docs/Web/API/Node\n*/\n/**\n*  @external {Element} https://developer.mozilla.org/fr/docs/Web/API/Element\n*/\n/**\n*  @external {ObjectArray} https://liqueurdetoile.github.io/DotObjectArray/\n*/\n/**\n*  @external {FormData} https://developer.mozilla.org/en-US/docs/Web/API/FormData\n*/\n/**\n*  @external {RegExp} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n*/\n/**\n*  @external {CSSSelector} https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors\n*/\n/**\n*  @external {DocumentFragment} https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n*/\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/typedef.doc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "typedef",
    "name": "KeyValueObject",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~KeyValueObject",
    "access": "public",
    "description": " Any vanilla object that is on the form of a paired key/value structure :",
    "examples": [
      " {\n  key1: value1,\n  key2: value2,\n  [...],\n  keyN: valueN\n }"
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "KeyValueObject"
    }
  },
  {
    "__docId__": 216,
    "kind": "typedef",
    "name": "NodeMetrics",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~NodeMetrics",
    "access": "public",
    "description": " A read-only object that parses position and size informations about an HtmlElement.\n The position is relative to viewport. If you want absolute positionning on a page,\n you must also use scrollX and scrollY values",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": "Left offset from viewport in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "top",
        "description": "Top offset from viewport in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": "Right offset from viewport in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bottom",
        "description": "Bottom offset from viewport in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "Width in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "Height in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "outerWidth",
        "description": "Outer width in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "outerHeight",
        "description": "Outer height in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollX",
        "description": "Offset of the viewport from left in pixels"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollY",
        "description": "Offset of the viewport from top in pixels"
      }
    ],
    "type": {
      "types": [
        "Object",
        "DOMRect"
      ],
      "optional": false,
      "name": "NodeMetrics"
    }
  },
  {
    "__docId__": 217,
    "kind": "typedef",
    "name": "InputValidationRules",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~InputValidationRules",
    "access": "public",
    "description": " Object used to store the validation rules on an InputElement.\n ",
    "properties": [
      {
        "nullable": null,
        "types": [
          "RegExp",
          "CSSSelector"
        ],
        "spread": false,
        "optional": false,
        "name": "pattern",
        "description": "Pattern used for regexp or CSS Selector with `sameas`"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "Message stored with the rule (usually an error Key for i18n to user)"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "InputValidationRules"
    }
  },
  {
    "__docId__": 218,
    "kind": "typedef",
    "name": "ForEachCallback",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~ForEachCallback",
    "access": "public",
    "description": " This callback is used in forEach callback iteration on a Collection.\n\n The callback is provided with two parameters :\n - element {{@link HtmlElement}} Current element in the iteration\n - index {Number}  Index of the current iterated element",
    "type": {
      "types": [
        "Function"
      ],
      "optional": false,
      "name": "ForEachCallback"
    }
  },
  {
    "__docId__": 219,
    "kind": "typedef",
    "name": "InputRuleCallback",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~InputRuleCallback",
    "access": "public",
    "description": " This callback is used in rule validation for InputElement.\n\n The callback is provided with the InputElement context. You can then call\n `this.value` to fetch InputElement value.\n It __must__ return `true` if validates or `false` otherwise.",
    "examples": [
      " var i = new Element('<input type=\"text\">');\n\n i.rule('myRule', function() {\n    return this.value > 5;\n }, 'value must be over 5');\n \n i.value = 3;\n i.validate(); // returns false\n console.log(i.errors); // outputs {myRule: 'value must be over 5'}"
    ],
    "type": {
      "types": [
        "Function"
      ],
      "optional": false,
      "name": "InputRuleCallback"
    }
  },
  {
    "__docId__": 220,
    "kind": "external",
    "name": "DOMRect",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/DOMRect",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~DOMRect",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 221,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/Node",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~Node",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 222,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/API/Element",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~Element",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 223,
    "kind": "external",
    "name": "ObjectArray",
    "externalLink": "https://liqueurdetoile.github.io/DotObjectArray/",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~ObjectArray",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 224,
    "kind": "external",
    "name": "FormData",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/FormData",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~FormData",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 225,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~RegExp",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 226,
    "kind": "external",
    "name": "CSSSelector",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~CSSSelector",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 227,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "src/typedef.doc.js",
    "static": true,
    "longname": "src/typedef.doc.js~DocumentFragment",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/utilities/hash.js",
    "content": "/**\n*  @file Hashing text utility function\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\n/**\n*  This function takes a string as argument\n*  and returns its hash.\n*\n*  Probavility of collision is rather high\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*  @param {string} text Text to process\n*  @returns {string} Hash\n*/\nexport default function (text) {\n  const verb = 'abcdefghijkl';\n  var hash = 0, i, chr, ret;\n\n  if (!text) return hash;\n  for (i = 0; i < text.length; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  ret = verb.charAt(10); // Convert the integer into string\n  if (hash < 0) ret = verb.charAt(11);\n  hash = Math.abs(hash);\n  while (hash) {\n    i = hash % 10;\n    hash = (hash - i) / 10;\n    ret += verb.charAt(i);\n  }\n\n  return ret;\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/utilities/hash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "hash",
    "memberof": "src/utilities/hash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities/hash.js~hash",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/utilities/hash.js",
    "importStyle": "hash",
    "description": " This function takes a string as argument\n and returns its hash.\n\n Probavility of collision is rather high",
    "lineNumber": 20,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} Hash"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "Text to process"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Hash"
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/utilities/uniqid.js",
    "content": "/**\n*  @file Hashing text utility function\n*  @author  Liqueur de Toile <contact@liqueurdetoile.com>\n*  @license Apache-2.0 {@link https://www.apache.org/licenses/LICENSE-2.0}\n*/\n\n/**\n*  This function returns a unique identifier\n*\n*  @since 1.0.0\n*  @version 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*  @param {string} [prefix] Prefix to prepend\n*  @param {boolean} [moreEntropy] Add more entropy to generator (slower)\n*  @see http://locutus.io/php/uniqid/\n*  @returns {string} Hash\n*/\n\nexport default function (prefix, moreEntropy) {\n  var retId;\n  var _formatSeed = function (seed, reqWidth) {\n    seed = parseInt(seed, 10).toString(16); // to hex str\n    if (reqWidth < seed.length) {\n      // so long we split\n      return seed.slice(seed.length - reqWidth);\n    }\n    if (reqWidth > seed.length) {\n      // so short we pad\n      return Array(1 + (reqWidth - seed.length)).join('0') + seed;\n    }\n    return seed;\n  };\n  var $global = (typeof window !== 'undefined' ? window : global);\n  var $locutus = $global.$locutus || {};\n\n  $locutus.php = $locutus.php || {};\n\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n\n  if (!$locutus.php.uniqidSeed) {\n    // init seed with big random int\n    $locutus.php.uniqidSeed = Math.floor(Math.random() * 0x75bcd15);\n  }\n  $locutus.php.uniqidSeed++;\n  // start with prefix, add current milliseconds hex string\n  retId = prefix;\n  retId += _formatSeed(parseInt(new Date().getTime() / 1000, 10), 8);\n  // add seed hex string\n  retId += _formatSeed($locutus.php.uniqidSeed, 5);\n  if (moreEntropy) {\n    // for more entropy we add a float lower to 10\n    retId += (Math.random() * 10).toFixed(8).toString();\n  }\n  return retId;\n}\n",
    "static": true,
    "longname": "F:/Projets/Elementify/src/utilities/uniqid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "uniqid",
    "memberof": "src/utilities/uniqid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities/uniqid.js~uniqid",
    "access": "public",
    "export": true,
    "importPath": "elementify/lib/utilities/uniqid.js",
    "importStyle": "uniqid",
    "description": " This function returns a unique identifier",
    "see": [
      "http://locutus.io/php/uniqid/"
    ],
    "lineNumber": 20,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} Hash"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "prefix",
        "description": "Prefix to prepend"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "moreEntropy",
        "description": "Add more entropy to generator (slower)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Hash"
    }
  },
  {
    "kind": "index",
    "content": "[![NPM](https://nodei.co/npm/elementify.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/elementify/)\r\n\r\n[![GitHub release](https://img.shields.io/github/release/liqueurdetoile/elementify.svg)](https://www.npmjs.com/package/elementify)\r\n[![Gzip size](http://img.badgesize.io/https://cdn.jsdelivr.net/npm/elementify@latest?compression=gzip&style=flat-square)](https://cdn.jsdelivr.net/npm/elementify@latest)\r\n[![Build Status](https://travis-ci.org/liqueurdetoile/Elementify.svg?branch=master)](https://travis-ci.org/liqueurdetoile/Elementify)\r\n[![Coverage Status](https://coveralls.io/repos/github/liqueurdetoile/Elementify/badge.svg?branch=master)](https://coveralls.io/github/liqueurdetoile/Elementify?branch=master)\r\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\r\n[![Documentation](https://liqueurdetoile.github.io/Elementify/badge.svg)](https://liqueurdetoile.github.io/Elementify/)\r\n\r\n[![bitHound Overall Score](https://www.bithound.io/github/liqueurdetoile/Elementify/badges/score.svg)](https://www.bithound.io/github/liqueurdetoile/Elementify)\r\n[![bitHound Code](https://www.bithound.io/github/liqueurdetoile/Elementify/badges/code.svg)](https://www.bithound.io/github/liqueurdetoile/Elementify)\r\n[![bitHound Dependencies](https://www.bithound.io/github/liqueurdetoile/Elementify/badges/dependencies.svg)](https://www.bithound.io/github/liqueurdetoile/Elementify/master/dependencies/npm)\r\n[![bitHound Dev Dependencies](https://www.bithound.io/github/liqueurdetoile/Elementify/badges/devDependencies.svg)](https://www.bithound.io/github/liqueurdetoile/Elementify/master/dependencies/npm)\r\n[![Known Vulnerabilities](https://snyk.io/test/github/liqueurdetoile/Elementify/badge.svg?targetFile=package.json)](https://snyk.io/test/github/liqueurdetoile/Elementify?targetFile=package.json)\r\n\r\n<p align=\"center\"><a href=\"https://liqueurdetoile.com\" target=\"\\_blank\"><img src=\"https://hosting.liqueurdetoile.com/logo_lqdt.png\" alt=\"Liqueur de Toile\"></a></p>\r\n\r\n# Elementify\r\nElementify is a vanilla JS library designed to be :\r\n- powerful but still ultra-lightweight (39,2 KB minified and 8,32KB gzipped)\r\n- cross-browser (IE9+)\r\n- focused on DOM manipulation, events management and data validation\r\n- focused on improving and adding functionnalities to vanilla JS, not shimming or replacing it.\r\n- UMD pattern for easy integration\r\n\r\n## Why Elementify ?\r\nOh no, again an other library to manipulate the DOM ! Really ?\r\n\r\nWait ! Elementify main purpose is not to shim the DOM across browsers. Most of the time, you'll have to rely on vanilla things to do your stuff.\r\n\r\nYou can see Elementify as the missing link between full vanilla JS and Jquery. Jquery or Mootools (or Underscore in its way)\r\nare a **replacement** to browser's vanilla JS, even for things that are really common nowadays. They are **heavy** but complete\r\nlibraries.\r\n\r\nOn the other side, Elementify is a **lightweight** creates an abstraction layer to manage events, manipulate the DOM and validate data with ease. You can switch between\r\nvanilla and elementified layers at will and choose the best - or the only one - layer able to do your stuff.\r\n\r\nI follow three main goals when building Elementify :\r\n- Have most of the great functionnalities we beloved on other heavy-weighted library for manipulating the DOM\r\n- Easy event management and easy data validation client-side\r\n- Syntax and lazyness friendly\r\n- Focus to stay lightweight and low-memory. Not the **fastest** but the **smallest**\r\n- Have an UMD compliant library for easing integration in other projects\r\n\r\nSo that's it. Elementify will simply, well, *elementify* the browser and the DOM.\r\n\r\n## Installation\r\n### As a module\r\n```\r\nnpm install elementify\r\n```\r\nor\r\n```\r\nyarn add elementify\r\n```\r\nThen simply require/import it :\r\n```javascript\r\nimport elementify from 'elementify';\r\n// or for submodule\r\nimport {Collection, Element, Q, ready, complete} from 'elementify';\r\n```\r\n\r\n### In a browser\r\n#### Bundle\r\n```html\r\n<script type=\"text/javascript\" src=\"https://bundle.run/elementify@latest\"></script>\r\n```\r\n#### JsDelivr\r\n```html\r\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/elementify@latest\"></script>\r\n```\r\n#### Unpkg\r\n```html\r\n<script type=\"text/javascript\" src=\"https://unpkg.com/elementify@latest\"></script>\r\n```\r\n#### Local install\r\nFor browser install, you can simply fetch file `dist/objectarray.min.js` in this repo or clone it and load it :\r\n```html\r\n<script type=\"text/javascript\" src=\"myJsFolder/elementify.min.js\"></script>\r\n```\r\n\r\nThe elementify library will be added to global (window) scope. If you wish to import its exported modules in global scope, simply call\r\n```javascript\r\nelementify.load()\r\n```\r\nIt will monkey-patch the native Element class by adding the constructor for elementify objects.\r\n\r\n## Usage\r\nWe will assume that the exported modules of elementify are in global running scope.\r\n### Create elements\r\n```javascript\r\n/**\r\n*  All following asserts will lead to the same HtmlElement with a node\r\n*  equal to <div class=\"div1 div2\" id=\"div\">DIV</div>\r\n*/\r\nvar div = new Element('<div class=\"div1 div2\" id=\"div\">DIV</div>');\r\nvar div = new Element('div', {class: ['div1', 'div2'], id:'div', innerHTML: 'DIV'});\r\nvar div = new Element('div').addClass('div1 div2').attr('id', 'div').html('DIV');\r\nvar div = Q('+div', {class: ['div1', 'div2'], id:'div', innerHTML: 'DIV'});\r\nvar div = Q('+div').addClass('div1 div2').attr('id', 'div').html('DIV');\r\n```\r\nAll properties setters are chainable for easing creation. The `Q` magic function is quite similar to the famous `$` one. It can query the DOM or create elements.\r\n\r\nBoth Element and Q will check the input and returns the appropriate Element (windowElement, DocumentElement, HtmlElement, FormElement or InputElement) or a Collection of these.\r\n\r\n### Query DOM\r\n```html\r\n<div class=\"e1\" data-rel=\"f1\"></div>\r\n<div class=\"e2\" data-rel=\"f2\"></div>\r\n<div class=\"e3\" data-rel=\"f3\"></div>\r\n```\r\n\r\n```javascript\r\nQ('.e1').data('rel') // returns 'f1'\r\nQ('div').attr('class') // returns ['e1', 'e2', 'e3']\r\nQ('[data-rel=\"f3\"').node.className // returns 'e3'\r\n```\r\nThe `Q` magic function is used to query the DOM and returned the appropriate Element/Collection.\r\n\r\nWhen a method is called on a Collection, Elementify will try to apply it to each member of the Collection and returns an array of result with the same indexing.\r\n\r\nTo access the ghosted vanilla element, simply call the `element` or `node` property of the Elementify object.\r\n\r\n## Documentation\r\nA nearly complete API reference is available here : [https://liqueurdetoile.github.io/Elementify](https://liqueurdetoile.github.io/Elementify/).\r\n\r\nWish I could spare some time to write examples and a manual.\r\n\r\n## Bugs and features requests\r\nElementify is test-driven though it did not prevent all issues. Please report here any trouble or features request.\r\n\r\n## Want to help ?\r\nThere is many more to do to implements othe features. Don't mind fork Elementify, tweak it and submit a pull request.\r\n",
    "longname": "F:\\Projets\\Elementify\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"elementify\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Ultra lightweight vanilla JS library for DOM and events manipulation, form manipulation and data validation\",\n  \"main\": \"dist/elementify.min.js\",\n  \"scripts\": {\n    \"build\": \"webpack -p --config webpack.conf/build.js\",\n    \"docs\": \"./node_modules/.bin/esdoc\",\n    \"test\": \"./node_modules/.bin/karma start --single-run --browsers ChromeHeadless && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\",\n    \"test:dry\": \"./node_modules/.bin/karma start --single-run --browsers ChromeHeadless\",\n    \"test:capture\": \"karma start\",\n    \"prepub\": \"npm run test:dry && npm run build && npm run docs\"\n  },\n  \"devDependencies\": {\n    \"ajv\": \"^6.4.0\",\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.2.3\",\n    \"babel-loader\": \"^7.1.4\",\n    \"babel-plugin-syntax-dynamic-import\": \"^6.18.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"chai\": \"^4.1.2\",\n    \"clean-webpack-plugin\": \"^0.1.19\",\n    \"coveralls\": \"^3.0.0\",\n    \"css-loader\": \"^0.28.11\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-importpath-plugin\": \"^1.0.1\",\n    \"esdoc-inject-script-plugin\": \"^1.0.0\",\n    \"esdoc-inject-style-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.19.1\",\n    \"eslint-loader\": \"^1.9.0\",\n    \"istanbul-instrumenter-loader\": \"^3.0.1\",\n    \"karma\": \"^2.0.2\",\n    \"karma-babel-preprocessor\": \"^7.0.0\",\n    \"karma-chai\": \"^0.1.0\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"^1.4.2\",\n    \"karma-firefox-launcher\": \"^1.1.0\",\n    \"karma-ie-launcher\": \"^1.0.0\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-opera-launcher\": \"^1.0.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\n    \"karma-safari-launcher\": \"^1.0.0\",\n    \"karma-sinon\": \"^1.0.5\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-webpack\": \"2.0.7\",\n    \"mocha\": \"^5.1.1\",\n    \"phantomjs-prebuilt\": \"^2.1.16\",\n    \"postcss-cssnext\": \"^3.1.0\",\n    \"postcss-loader\": \"^2.1.4\",\n    \"postcss-reporter\": \"^5.0.0\",\n    \"puppeteer\": \"^1.3.0\",\n    \"semantic-release\": \"^15.1.7\",\n    \"sinon\": \"^4.5.0\",\n    \"style-loader\": \"^0.20.3\",\n    \"sugarss\": \"^1.0.1\",\n    \"webpack\": \"^3.11.0\",\n    \"webpack-bundle-analyzer\": \"^2.11.1\",\n    \"webpack-merge\": \"^4.1.2\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/liqueurdetoile/elementify.git\"\n  },\n  \"keywords\": [\n    \"library\",\n    \"html\",\n    \"node\",\n    \"element\",\n    \"cross-browser\",\n    \"jquery\",\n    \"lightweight\",\n    \"dom\",\n    \"dom-manipulation\"\n  ],\n  \"author\": \"Liqueur de Toile\",\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/liqueurdetoile/elementify/issues\"\n  },\n  \"homepage\": \"https://github.com/liqueurdetoile/elementify\",\n  \"dependencies\": {\n    \"dot-object-array\": \"^3.1.0\"\n  }\n}\n",
    "longname": "F:\\Projets\\Elementify\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "",
    "longname": "F:\\Projets\\Elementify\\docs\\manual\\md\\index.md",
    "name": "./docs/manual/md/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "F:\\Projets\\Elementify\\docs\\manual\\md\\overview.md",
    "name": "./docs/manual/md/overview.md",
    "content": "<p align=\"center\"><a href=\"https://liqueurdetoile.com\" target=\"\\_blank\"><img src=\"https://hosting.liqueurdetoile.com/logo_lqdt.png\" alt=\"Liqueur de Toile\"></a></p>\n\n# Elementify\nElementify is a vanilla JS library designed to be :\n- powerful but still ultra-lightweight (39,2 KB minified and 8,32KB gzipped)\n- cross-browser (IE9+)\n- focused on DOM manipulation, events management and data validation\n- focused on improving and adding functionnalities to vanilla JS, not shimming or replacing it.\n- UMD pattern for easy integration\n\n## Features\nElementify is not working by enhancing DOM objects but introduce a kind of new layer with new Objects\nthat ghosts actual DOM nodes and elements.\n\nFor obvious performance constraint, Elementify only create enhanced objects when required.\nYou can easily pass from one layer to another in order to dig the best of the two worlds.\n\nThis table presents the basic functionalities that have been ignored,\nghosted, improved, created and to do between vanilla and elementified layer.\n\nThis chart is subject to change at any time.\n\n| Vanilla Object | Elementify Object | Ignored | Ghosted | Improved | created | Todo |\n| --- | --- | --- | --- | --- | --- | --- |\n| window | WindowElement | Nearly all | - | Events | - | Import metrics |\n| Document | DocumentElement | Nearly All | - | Events | - | - |\n| HTMLElement | HtmlElement | Nearly none | Nearly all with cross-browser polyfill | Positioning, Events | - |\n| HTMLFormElement | FormElement | Nearly all | very few | - | Form validation and data serialize, json, formData exports | - |\n| HTMLFormElement Element | InputElement | Nearly all | very few | Value/checked management for radio and checkbox | Validation rules and method | - |\n\n## Usage\n\n### Importing library modules in global scopes\nTo avoid polluting the global cope namespace, all modules will be accessible under elementify namespace. You can create\nglobal var to hoist any module or mass importing them with `elementify.load()`.\n\n### Create elements\n```javascript\n/**\n*  All following asserts will lead to the same HtmlElement with a node\n*  equal to <div class=\"div1 div2\" id=\"div\">DIV</div>\n*/\nvar div = new Element('<div class=\"div1 div2\" id=\"div\">DIV</div>');\nvar div = new Element('div', {class: ['div1', 'div2'], id:'div', innerHTML: 'DIV'});\nvar div = new Element('div').addClass('div1 div2').attr('id', 'div').html('DIV');\nvar div = Q('+div', {class: ['div1', 'div2'], id:'div', innerHTML: 'DIV'});\nvar div = Q('+div').addClass('div1 div2').attr('id', 'div').html('DIV');\n```\nAll properties setters are chainable for easing creation. The `Q` magic function is quite similar to the famous `$` one. It can query the DOM or create elements.\n\nBoth Element and Q will check the input and returns the appropriate Element (windowElement, DocumentElement, HtmlElement, FormElement or InputElement) or a Collection of these.\n\n### Query DOM\n```html\n<div class=\"e1\" data-rel=\"f1\"></div>\n<div class=\"e2\" data-rel=\"f2\"></div>\n<div class=\"e3\" data-rel=\"f3\"></div>\n```\n\n```javascript\nQ('.e1').data('rel') // returns 'f1'\nQ('div').attr('class') // returns ['e1', 'e2', 'e3']\nQ('[data-rel=\"f3\"').node.className // returns 'e3'\n```\nThe `Q` magic function is used to query the DOM and returned the appropriate Element/Collection.\n\nWhen a method is called on a Collection, Elementify will try to apply it to each member of the Collection and returns an array of result with the same indexing.\n\nTo access the ghosted vanilla element, simply call the `element` or `node` property of the Elementify object.",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 232,
    "kind": "testFile",
    "name": "tests/collection.spec.js",
    "content": "import {Q, Collection} from 'index';\n\n/**\n*  @test {Collection}\n*/\ndescribe('Collection class', function () {\n  /**\n  *  @test {Collection#constructor}\n  */\n  describe('constructor', function () {\n    it('should return an empty collection', function () {\n      let i = new Collection();\n\n      i.should.be.instanceof(Collection);\n      i.length.should.equal(0);\n    });\n  });\n\n  /**\n  *  @test {Collection#push}\n  */\n  describe('push', function () {\n    it('should push an HtmlElement', function () {\n      let i = new Collection();\n      let e = Q('+div');\n\n      i.push(e);\n      i.length.should.equal(1);\n      i.elements[0].should.equal(e);\n    });\n\n    it('should push a node', function () {\n      let i = new Collection();\n      let e = document.createElement('div');\n\n      i.push(e);\n      i.length.should.equal(1);\n      i.elements[0].should.eql(Q(e));\n    });\n\n    it('should throw an exception', function () {\n      let i = new Collection();\n      let e = 'foo';\n\n      expect(i.push.bind(i, e)).to.throw('Only Element Object can be added to a collection of Elements');\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/collection.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "tests/collection.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/collection.spec.js~describe0",
    "access": null,
    "description": "Collection class",
    "lineNumber": 6,
    "testTargets": [
      "Collection"
    ]
  },
  {
    "__docId__": 234,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "tests/collection.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "tests/collection.spec.js~describe0.describe1",
    "access": null,
    "description": "constructor",
    "lineNumber": 10,
    "testTargets": [
      "Collection#constructor"
    ]
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "tests/collection.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "tests/collection.spec.js~describe0.describe1.it2",
    "access": null,
    "description": "should return an empty collection",
    "lineNumber": 11
  },
  {
    "__docId__": 236,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "tests/collection.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "tests/collection.spec.js~describe0.describe3",
    "access": null,
    "description": "push",
    "lineNumber": 22,
    "testTargets": [
      "Collection#push"
    ]
  },
  {
    "__docId__": 237,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "tests/collection.spec.js~describe0.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "tests/collection.spec.js~describe0.describe3.it4",
    "access": null,
    "description": "should push an HtmlElement",
    "lineNumber": 23
  },
  {
    "__docId__": 238,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "tests/collection.spec.js~describe0.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "tests/collection.spec.js~describe0.describe3.it5",
    "access": null,
    "description": "should push a node",
    "lineNumber": 32
  },
  {
    "__docId__": 239,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "tests/collection.spec.js~describe0.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "tests/collection.spec.js~describe0.describe3.it6",
    "access": null,
    "description": "should throw an exception",
    "lineNumber": 41
  },
  {
    "__docId__": 240,
    "kind": "testFile",
    "name": "tests/element.spec.js",
    "content": "import {Element} from 'index';\n\ndescribe('Element Class', function () {\n\n  var html = ['a', 'abbr', 'acronym', 'address', 'applet', 'h1'];\n  var formElements = ['input', 'select', 'button', 'textarea'];\n\n  it('should create a DocumentFragment HtmlElement in case of void input', function () {\n    var e = new Element();\n\n    e.node.nodeType.should.equal(11);\n  });\n\n  it('should create a DocumentFragment HtmlElement in case of silly string input', function () {\n    // var e = new Element('my silly input');\n    var e = new Element(null);\n\n    e.node.nodeType.should.equal(11);\n  });\n\n  html.forEach(function (tag) {\n    describe('HtmlElement creation : ' + tag, function () {\n      it('should create HtmlElement from ' + tag + ' string tag name', function () {\n        var e = new Element(tag);\n\n        e.enhanced.should.equal(true);\n        e.node.nodeName.should.equal(tag.toUpperCase());\n      });\n\n      it('should create HtmlElement from ' + tag + ' node', function () {\n        var e = new Element(document.createElement(tag));\n\n        e.enhanced.should.equal(true);\n        e.node.nodeName.should.equal(tag.toUpperCase());\n      });\n\n      it('should create HtmlElement from ' + tag + ' string', function () {\n        var e = new Element('<' + tag + '></' + tag + '>');\n\n        e.enhanced.should.equal(true);\n        e.node.nodeName.should.equal(tag.toUpperCase());\n      });\n\n      it('should create Collection from ' + tag + ' string', function () {\n        var e = new Element('<' + tag + '></' + tag + '><' + tag + '></' + tag + '>');\n\n        e.length.should.equal(2);\n      });\n\n      it('should returns same HtmlElement when HtmlElement given in arguments', function () {\n        var e = new Element(tag);\n        var f = new Element(e);\n\n        e.enhanced.should.equal(true);\n        (e === f).should.equal(true);\n      });\n\n      it('should returns same Collection when Collection given in arguments', function () {\n        var e = new Element('<' + tag + '></' + tag + '><' + tag + '></' + tag + '>');\n        var f = new Element(e);\n\n        (e === f).should.equal(true);\n      });\n    });\n  });\n\n  describe('Form creation', function () {\n    it('should create Form from string', function () {\n      var e = new Element('form');\n\n      expect(typeof e.validate).to.equal('function');\n      e.node.nodeName.should.equal('FORM');\n    });\n  });\n\n  formElements.forEach(function (tag) {\n    describe('FormElement creation : ' + tag, function () {\n      it('should create FormElement from ' + tag + ' string tag name', function () {\n        var e = new Element(tag);\n\n        e.node.nodeName.should.equal(tag.toUpperCase());\n        expect(typeof e.validate).to.equal('function');\n      });\n\n      it('should create FormElement from ' + tag + ' node', function () {\n        var e = new Element(document.createElement(tag));\n\n        e.node.nodeName.should.equal(tag.toUpperCase());\n        expect(typeof e.validate).to.equal('function');\n      });\n\n      it('should create FormElement from ' + tag + ' string', function () {\n        var e = new Element('<' + tag + '></' + tag + '>');\n\n        e.node.nodeName.should.equal(tag.toUpperCase());\n        expect(typeof e.validate).to.equal('function');\n      });\n\n      it('should create Collection from ' + tag + ' string', function () {\n        var e = new Element('<' + tag + '></' + tag + '><' + tag + '></' + tag + '>');\n\n        e.length.should.equal(2);\n      });\n\n      it('should returns same FormElement when FormElement given in arguments', function () {\n        var e = new Element(tag);\n        var f = new Element(e);\n\n        (e === f).should.equal(true);\n      });\n\n      it('should returns same Collection when Collection given in arguments', function () {\n        var e = new Element('<' + tag + '></' + tag + '><' + tag + '></' + tag + '>');\n        var f = new Element(e);\n\n        (e === f).should.equal(true);\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/element.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "test",
    "name": "describe7",
    "testId": 7,
    "memberof": "tests/element.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/element.spec.js~describe7",
    "access": null,
    "description": "Element Class",
    "lineNumber": 3
  },
  {
    "__docId__": 242,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "tests/element.spec.js~describe7",
    "testDepth": 1,
    "static": true,
    "longname": "tests/element.spec.js~describe7.it8",
    "access": null,
    "description": "should create a DocumentFragment HtmlElement in case of void input",
    "lineNumber": 8
  },
  {
    "__docId__": 243,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "tests/element.spec.js~describe7",
    "testDepth": 1,
    "static": true,
    "longname": "tests/element.spec.js~describe7.it9",
    "access": null,
    "description": "should create a DocumentFragment HtmlElement in case of silly string input",
    "lineNumber": 14
  },
  {
    "__docId__": 244,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "tests/element.spec.js~describe7",
    "testDepth": 1,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10",
    "access": null,
    "lineNumber": 22
  },
  {
    "__docId__": 245,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "tests/element.spec.js~describe7.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10.it11",
    "access": null,
    "lineNumber": 23
  },
  {
    "__docId__": 246,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "tests/element.spec.js~describe7.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10.it12",
    "access": null,
    "lineNumber": 30
  },
  {
    "__docId__": 247,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "tests/element.spec.js~describe7.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10.it13",
    "access": null,
    "lineNumber": 37
  },
  {
    "__docId__": 248,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "tests/element.spec.js~describe7.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10.it14",
    "access": null,
    "lineNumber": 44
  },
  {
    "__docId__": 249,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "tests/element.spec.js~describe7.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10.it15",
    "access": null,
    "description": "should returns same HtmlElement when HtmlElement given in arguments",
    "lineNumber": 50
  },
  {
    "__docId__": 250,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "tests/element.spec.js~describe7.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe10.it16",
    "access": null,
    "description": "should returns same Collection when Collection given in arguments",
    "lineNumber": 58
  },
  {
    "__docId__": 251,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "tests/element.spec.js~describe7",
    "testDepth": 1,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe17",
    "access": null,
    "description": "Form creation",
    "lineNumber": 67
  },
  {
    "__docId__": 252,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "tests/element.spec.js~describe7.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe17.it18",
    "access": null,
    "description": "should create Form from string",
    "lineNumber": 68
  },
  {
    "__docId__": 253,
    "kind": "test",
    "name": "describe19",
    "testId": 19,
    "memberof": "tests/element.spec.js~describe7",
    "testDepth": 1,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19",
    "access": null,
    "lineNumber": 77
  },
  {
    "__docId__": 254,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "tests/element.spec.js~describe7.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19.it20",
    "access": null,
    "lineNumber": 78
  },
  {
    "__docId__": 255,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "tests/element.spec.js~describe7.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19.it21",
    "access": null,
    "lineNumber": 85
  },
  {
    "__docId__": 256,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "tests/element.spec.js~describe7.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19.it22",
    "access": null,
    "lineNumber": 92
  },
  {
    "__docId__": 257,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "tests/element.spec.js~describe7.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19.it23",
    "access": null,
    "lineNumber": 99
  },
  {
    "__docId__": 258,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "tests/element.spec.js~describe7.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19.it24",
    "access": null,
    "description": "should returns same FormElement when FormElement given in arguments",
    "lineNumber": 105
  },
  {
    "__docId__": 259,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "tests/element.spec.js~describe7.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "tests/element.spec.js~describe7.describe19.it25",
    "access": null,
    "description": "should returns same Collection when Collection given in arguments",
    "lineNumber": 112
  },
  {
    "__docId__": 260,
    "kind": "testFile",
    "name": "tests/events.spec.js",
    "content": "import {ready, complete} from 'index';\n\n/**\n*  @test {ready}\n*/\ndescribe('Ready', function () {\n  it('Should run callback at interactive ready state', function (done) {\n    let spy = sinon.spy();\n\n    ready(() => spy());\n    ready(() => {\n      spy.called.should.be.true;\n      done();\n    });\n    spy.called.should.be.false;\n  });\n});\n\n/**\n*  @test {complete}\n*/\ndescribe('Complete', function () {\n  it('Should run callback at complete ready state', function (done) {\n    let spy = sinon.spy();\n\n    complete(() => spy());\n    complete(() => {\n      spy.called.should.be.true;\n      done();\n    });\n    spy.called.should.be.false;\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/events.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "test",
    "name": "describe26",
    "testId": 26,
    "memberof": "tests/events.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/events.spec.js~describe26",
    "access": null,
    "description": "Ready",
    "lineNumber": 6,
    "testTargets": [
      "ready"
    ]
  },
  {
    "__docId__": 262,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "tests/events.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe26.it27",
    "access": null,
    "description": "Should run callback at interactive ready state",
    "lineNumber": 7
  },
  {
    "__docId__": 263,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "tests/events.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/events.spec.js~describe28",
    "access": null,
    "description": "Complete",
    "lineNumber": 22,
    "testTargets": [
      "complete"
    ]
  },
  {
    "__docId__": 264,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it29",
    "access": null,
    "description": "Should run callback at complete ready state",
    "lineNumber": 23
  },
  {
    "__docId__": 265,
    "kind": "testFile",
    "name": "tests/formelement.spec.js",
    "content": "import {Q, Element} from 'index';\r\nimport ObjectArray from 'dot-object-array';\r\n\r\n/**\r\n*  @test {FormElement}\r\n*/\r\ndescribe('FormElement', function () {\r\n  /**\r\n  *  @test {FormElement#constructor}\r\n  */\r\n  describe('Constructor', function () {\r\n    it('should return and empty FormElement', function () {\r\n      let f = new Element('form');\r\n\r\n      f.node.nodeName.should.equal('FORM');\r\n      f.node.method.should.equal('get');\r\n    });\r\n\r\n    it('should return a FormElement with Element method attribute set to post', function () {\r\n      let f = new Element('form', {method: 'post'});\r\n\r\n      f.node.nodeName.should.equal('FORM');\r\n      f.node.method.should.equal('post');\r\n    });\r\n  });\r\n\r\n  /**\r\n  *  @test {FormElement#field}\r\n  *  @test {FormElement#fields}\r\n  */\r\n  describe('Fields access', function () {\r\n    it('should find a field, even if the name is already used elsewhere', function () {\r\n      let f = new Element('form');\r\n      let fake = Q('+<input type=\"text\" name=\"fixture1\" value=\"fixtureFake\">');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture1\" value=\"fixture1\">');\r\n      Q('body').append(f).append(fake);\r\n\r\n      f.field('fixture1').length.should.equal(1);\r\n      f.field('fixture1').value.should.equal('fixture1');\r\n\r\n      f.remove();\r\n      fake.remove();\r\n    });\r\n\r\n    it('should return a collection of fields of the form', function () {\r\n      let f = new Element('form');\r\n      let fake = Q('+<input type=\"text\" name=\"fixture1\" value=\"fixtureFake\">');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"fixture2\" value=\"fixture2\">');\r\n      Q('body').append(f).append(fake);\r\n\r\n      f.fields.length.should.equal(2);\r\n      f.fields.elements[0].value.should.equal('fixture1');\r\n      f.fields.elements[1].value.should.equal('fixture2');\r\n\r\n      f.remove();\r\n      fake.remove();\r\n    });\r\n\r\n    it('should return a collection of fields and ignore fields with class form-ignore', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"fixture2\" value=\"fixture2\">');\r\n      f.append('<input type=\"text\" class=\"form-ignore\" name=\"fixture3\" value=\"fixture3\">');\r\n      Q('body').append(f);\r\n\r\n      f.fields.length.should.equal(2);\r\n      f.fields.elements[0].value.should.equal('fixture1');\r\n      f.fields.elements[1].value.should.equal('fixture2');\r\n\r\n      f.remove();\r\n    });\r\n  });\r\n\r\n  /**\r\n  *  @test {FormElement#dirty}\r\n  */\r\n  describe('Dirty', function () {\r\n    it('should return false if no field changed', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture1\" value=\"fixture1\">');\r\n      f.dirty.should.be.false;\r\n    });\r\n    it('should return true if field changed', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture1\" value=\"fixture1\">');\r\n      f.field('fixture1').value = 'fixtureX';\r\n      f.dirty.should.be.true;\r\n    });\r\n  });\r\n\r\n  /**\r\n  *  @test {FormElement#validate}\r\n  *  @test {FormElement.errors}\r\n  */\r\n  describe('Validate', function () {\r\n    it('should validate', function () {\r\n      let f = new Element('form');\r\n      let i = new Element('input', {required: 'required'});\r\n\r\n      f.append(i);\r\n      f.validate().should.be.false;\r\n      i.hasClass('field-not-validate').should.be.true;\r\n      i.hasClass('field-validate').should.be.false;\r\n      f._errors.length().should.equal(1);\r\n      i.value = 'a';\r\n      f.validate().should.be.true;\r\n      i.hasClass('field-not-validate').should.be.false;\r\n      i.hasClass('field-validate').should.be.true;\r\n    });\r\n  });\r\n\r\n  /**\r\n  *  @test {FormElement.data}\r\n  *  @test {FormElement.urlEncode}\r\n  *  @test {FormElement.formUrlEncode}\r\n  *  @test {FormElement.formData}\r\n  *  @test {FormElement.json}\r\n  */\r\n  describe('Data export and import', function () {\r\n    it('should export data to ObjectArray', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"f1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"f2\" value=\"fixture2\">');\r\n      f.datas.should.be.instanceof(ObjectArray);\r\n      f.datas.data.should.eql({f1: 'fixture1', f2: 'fixture2'});\r\n    });\r\n\r\n    it('should export data to ObjectArray with dotted keys', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture.f1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"fixture.f2\" value=\"fixture2\">');\r\n      f.datas.should.be.instanceof(ObjectArray);\r\n      f.datas.data.should.eql({fixture: {f1: 'fixture1', f2: 'fixture2'}});\r\n    });\r\n\r\n    it('should export data to JSON', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"f1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"f2\" value=\"fixture2\">');\r\n      f.json.should.equal('{\"f1\":\"fixture1\",\"f2\":\"fixture2\"}');\r\n    });\r\n\r\n    it('should export data to JSON with dotted keys', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture.f1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"fixture.f2\" value=\"fixture2\">');\r\n      f.json.should.equal('{\"fixture\":{\"f1\":\"fixture1\",\"f2\":\"fixture2\"}}');\r\n    });\r\n\r\n    it('should export data to urlEncode string', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"f1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"f2\" value=\"fixture2 space\">');\r\n      f.urlEncode.should.equal('f1=fixture1&f2=fixture2%20space');\r\n    });\r\n\r\n    it('should export data to formUrlEncode string', function () {\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"f1\" value=\"fixture1\">');\r\n      f.append('<input type=\"text\" name=\"f2\" value=\"fixture2 space\">');\r\n      f.formUrlEncode.should.equal('f1=fixture1&f2=fixture2+space');\r\n    });\r\n\r\n    it('should import data into fields from JSON', function () {\r\n      let js = '{\"fixvoid\": true, \"f1\":\"fixture1\", \"f2\":\"fixture2\"}';\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"f1\">');\r\n      f.append('<input type=\"text\" name=\"f2\">');\r\n      f.append('<input type=\"text\" name=\"f3\">');\r\n      f.json = js;\r\n      f.field('f1').value.should.equal('fixture1');\r\n      f.field('f2').value.should.equal('fixture2');\r\n      f.field('f3').value.should.equal('');\r\n    });\r\n\r\n    it('should import dotted keys data into fields from JSON', function () {\r\n      let js = '{\"fixvoid\": true,\"fixture\":{\"f1\":\"fixture1\",\"f2\":\"fixture2\"}}';\r\n      let f = new Element('form');\r\n\r\n      f.append('<input type=\"text\" name=\"fixture.f1\">');\r\n      f.append('<input type=\"text\" name=\"fixture.f2\">');\r\n      f.append('<input type=\"text\" name=\"fixture.f3\">');\r\n      f.json = js;\r\n      f.field('fixture.f1').value.should.equal('fixture1');\r\n      f.field('fixture.f2').value.should.equal('fixture2');\r\n      f.field('fixture.f3').value.should.equal('');\r\n    });\r\n\r\n    it('should throw an exception while import data into fields from JSON', function () {\r\n      let js = '\"fixvoid\": true,\"fixture\":{\"f1\":\"fixture1\",\"f2\":\"fixture2\"}}';\r\n      let f = new Element('form');\r\n\r\n      expect((function test() { f.json = js; })).to.throw(TypeError);\r\n    });\r\n  });\r\n\r\n  describe('Events management', function () {\r\n    it('should prevent submitting', function () {\r\n      let f = new Element('form');\r\n      let spy = sinon.spy();\r\n\r\n      f.on('submit', (ev) => {\r\n        ev.preventDefault();\r\n        spy();\r\n      });\r\n\r\n      Q('body').append(f);\r\n      f.fire('submit');\r\n      spy.called.should.be.true;\r\n      f.remove();\r\n    });\r\n  });\r\n\r\n  describe('Should find a form by id', function () {\r\n    it('should find form', function () {\r\n      let f = new Element('form', {\r\n        id: 'form-login'\r\n      });\r\n\r\n      Q(document.body).append(f);\r\n      Q('#form-login').should.eql(f);\r\n      f.remove();\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/formelement.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 266,
    "kind": "test",
    "name": "describe30",
    "testId": 30,
    "memberof": "tests/formelement.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30",
    "access": null,
    "description": "FormElement",
    "lineNumber": 7,
    "testTargets": [
      "FormElement"
    ]
  },
  {
    "__docId__": 267,
    "kind": "test",
    "name": "describe31",
    "testId": 31,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe31",
    "access": null,
    "description": "Constructor",
    "lineNumber": 11,
    "testTargets": [
      "FormElement#constructor"
    ]
  },
  {
    "__docId__": 268,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "tests/formelement.spec.js~describe30.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe31.it32",
    "access": null,
    "description": "should return and empty FormElement",
    "lineNumber": 12
  },
  {
    "__docId__": 269,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "tests/formelement.spec.js~describe30.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe31.it33",
    "access": null,
    "description": "should return a FormElement with Element method attribute set to post",
    "lineNumber": 19
  },
  {
    "__docId__": 270,
    "kind": "test",
    "name": "describe34",
    "testId": 34,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe34",
    "access": null,
    "description": "Fields access",
    "lineNumber": 31,
    "testTargets": [
      "FormElement#field",
      "FormElement#fields"
    ]
  },
  {
    "__docId__": 271,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "tests/formelement.spec.js~describe30.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe34.it35",
    "access": null,
    "description": "should find a field, even if the name is already used elsewhere",
    "lineNumber": 32
  },
  {
    "__docId__": 272,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "tests/formelement.spec.js~describe30.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe34.it36",
    "access": null,
    "description": "should return a collection of fields of the form",
    "lineNumber": 46
  },
  {
    "__docId__": 273,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "tests/formelement.spec.js~describe30.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe34.it37",
    "access": null,
    "description": "should return a collection of fields and ignore fields with class form-ignore",
    "lineNumber": 62
  },
  {
    "__docId__": 274,
    "kind": "test",
    "name": "describe38",
    "testId": 38,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe38",
    "access": null,
    "description": "Dirty",
    "lineNumber": 81,
    "testTargets": [
      "FormElement#dirty"
    ]
  },
  {
    "__docId__": 275,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "tests/formelement.spec.js~describe30.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe38.it39",
    "access": null,
    "description": "should return false if no field changed",
    "lineNumber": 82
  },
  {
    "__docId__": 276,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "tests/formelement.spec.js~describe30.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe38.it40",
    "access": null,
    "description": "should return true if field changed",
    "lineNumber": 88
  },
  {
    "__docId__": 277,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe41",
    "access": null,
    "description": "Validate",
    "lineNumber": 101,
    "testTargets": [
      "FormElement#validate",
      "FormElement.errors"
    ]
  },
  {
    "__docId__": 278,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "tests/formelement.spec.js~describe30.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe41.it42",
    "access": null,
    "description": "should validate",
    "lineNumber": 102
  },
  {
    "__docId__": 279,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43",
    "access": null,
    "description": "Data export and import",
    "lineNumber": 125,
    "testTargets": [
      "FormElement.data",
      "FormElement.urlEncode",
      "FormElement.formUrlEncode",
      "FormElement.formData",
      "FormElement.json"
    ]
  },
  {
    "__docId__": 280,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it44",
    "access": null,
    "description": "should export data to ObjectArray",
    "lineNumber": 126
  },
  {
    "__docId__": 281,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it45",
    "access": null,
    "description": "should export data to ObjectArray with dotted keys",
    "lineNumber": 135
  },
  {
    "__docId__": 282,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it46",
    "access": null,
    "description": "should export data to JSON",
    "lineNumber": 144
  },
  {
    "__docId__": 283,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it47",
    "access": null,
    "description": "should export data to JSON with dotted keys",
    "lineNumber": 152
  },
  {
    "__docId__": 284,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it48",
    "access": null,
    "description": "should export data to urlEncode string",
    "lineNumber": 160
  },
  {
    "__docId__": 285,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it49",
    "access": null,
    "description": "should export data to formUrlEncode string",
    "lineNumber": 168
  },
  {
    "__docId__": 286,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it50",
    "access": null,
    "description": "should import data into fields from JSON",
    "lineNumber": 176
  },
  {
    "__docId__": 287,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it51",
    "access": null,
    "description": "should import dotted keys data into fields from JSON",
    "lineNumber": 189
  },
  {
    "__docId__": 288,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "tests/formelement.spec.js~describe30.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe43.it52",
    "access": null,
    "description": "should throw an exception while import data into fields from JSON",
    "lineNumber": 202
  },
  {
    "__docId__": 289,
    "kind": "test",
    "name": "describe53",
    "testId": 53,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe53",
    "access": null,
    "description": "Events management",
    "lineNumber": 210
  },
  {
    "__docId__": 290,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "tests/formelement.spec.js~describe30.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe53.it54",
    "access": null,
    "description": "should prevent submitting",
    "lineNumber": 211
  },
  {
    "__docId__": 291,
    "kind": "test",
    "name": "describe55",
    "testId": 55,
    "memberof": "tests/formelement.spec.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe55",
    "access": null,
    "description": "Should find a form by id",
    "lineNumber": 227
  },
  {
    "__docId__": 292,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "tests/formelement.spec.js~describe30.describe55",
    "testDepth": 2,
    "static": true,
    "longname": "tests/formelement.spec.js~describe30.describe55.it56",
    "access": null,
    "description": "should find form",
    "lineNumber": 228
  },
  {
    "__docId__": 293,
    "kind": "testFile",
    "name": "tests/hash.spec.js",
    "content": "import hash from 'utilities/hash';\n\ndescribe('Hash utility function', function () {\n  it('should return 0 if no text as input', function () {\n    hash().should.equal(0);\n    hash('').should.equal(0);\n  });\n\n  it('should return hashed string', function () {\n    hash('a').should.equal('khj');\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/hash.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "test",
    "name": "describe57",
    "testId": 57,
    "memberof": "tests/hash.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/hash.spec.js~describe57",
    "access": null,
    "description": "Hash utility function",
    "lineNumber": 3
  },
  {
    "__docId__": 295,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "tests/hash.spec.js~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "tests/hash.spec.js~describe57.it58",
    "access": null,
    "description": "should return 0 if no text as input",
    "lineNumber": 4
  },
  {
    "__docId__": 296,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "tests/hash.spec.js~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "tests/hash.spec.js~describe57.it59",
    "access": null,
    "description": "should return hashed string",
    "lineNumber": 9
  },
  {
    "__docId__": 297,
    "kind": "testFile",
    "name": "tests/htmlelement.spec.js",
    "content": "import {Element} from 'index';\nimport {Q} from 'index';\n\ndescribe('HTMLElement Class', function () {\n  window.beforeEach(function () { // eslint-disable-line\n    let e = new Element('div', {\n      class: 'fixture',\n      id: 'fixture',\n      innerHTML: 'fixture'\n    });\n\n    document.body.appendChild(e.node);\n  });\n\n  window.afterEach(function () { // eslint-disable-line\n    Q('#fixture').remove();\n  });\n\n  describe('Constructor', function () {\n    it('should add attributes', function () {\n      let stringdiv = new Element('div', {\n        class: 'class1',\n        style: 'text-align:left; display:none'\n      });\n      let arraydiv = new Element('div', {\n        class: ['class1', 'class2'],\n        style: {\n          display: 'none',\n          padding: '20px',\n          marginLeft: '10em'\n        }\n      });\n\n      stringdiv.node.className.should.equal('class1');\n      stringdiv.style('text-align').should.equal('left');\n      stringdiv.style('display').should.equal('none');\n      arraydiv.node.className.should.equal('class1 class2');\n      arraydiv.style(['display', 'padding', 'marginLeft']).should.eql({\n        display: 'none',\n        padding: '20px',\n        marginLeft: '10em'\n      });\n      arraydiv.style('display').should.equal('none');\n      arraydiv.style('padding').should.equal('20px');\n      arraydiv.style('margin-left').should.equal('10em');\n    });\n  });\n\n  describe('forEach', function () {\n    it('should runs callback', function () {\n      Q('#fixture').forEach(function (el, i) {\n        el.node.id.should.equal('fixture');\n        i.should.equal(0);\n      });\n    });\n  });\n\n  describe('Attributes and Data Attributes', function () {\n    it('should set a single attribute', function () {\n      Q('#fixture').attr('fixture', 'fixture');\n      Q('#fixture').node.getAttribute('fixture').should.equal('fixture');\n    });\n    it('should get a single attribute', function () {\n      Q('#fixture').attr('fixture', 'fixture');\n      Q('#fixture').attr('fixture').should.equal('fixture');\n    });\n    it('should remove a single attribute', function () {\n      Q('#fixture').attr('fixture', null);\n      expect(Q('#fixture').node.getAttribute('fixture')).to.equal(null);\n    });\n    it('should create multiple attributes', function () {\n      Q('#fixture').attr({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      Q('#fixture').node.getAttribute('fixture1').should.equal('fixture1');\n      Q('#fixture').node.getAttribute('fixture2').should.equal('fixture2');\n      Q('#fixture').node.getAttribute('fixture2').should.equal('fixture2');\n    });\n    it('should get multiple attributes', function () {\n      Q('#fixture').attr({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      let r = Q('#fixture').attr(['fixture1', 'fixture2', 'fixture3']);\n\n      expect(r).to.eql({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n    });\n    it('should edit multiple attributes', function () {\n      Q('#fixture').attr({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      Q('#fixture').attr({\n        fixture1: 'fixture1m',\n        fixture2: 'fixture2m',\n        fixture3: 'fixture3m'\n      });\n      Q('#fixture').node.getAttribute('fixture1').should.equal('fixture1m');\n      Q('#fixture').node.getAttribute('fixture2').should.equal('fixture2m');\n      Q('#fixture').node.getAttribute('fixture2').should.equal('fixture2m');\n    });\n    it('should remove multiple attributes', function () {\n      Q('#fixture').attr({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      Q('#fixture').attr({\n        fixture1: null,\n        fixture2: null,\n        fixture3: null\n      });\n      expect(Q('#fixture').node.getAttribute('fixture1')).to.equal(null);\n      expect(Q('#fixture').node.getAttribute('fixture2')).to.equal(null);\n      expect(Q('#fixture').node.getAttribute('fixture3')).to.equal(null);\n    });\n    it('should get all attributes', function () {\n      let r = Q('#fixture').attr();\n\n      r.should.eql({\n        class: 'fixture',\n        id: 'fixture'\n      });\n    });\n\n    it('should set a single data attribute', function () {\n      Q('#fixture').data('fixture', 'fixture');\n      Q('#fixture').node.getAttribute('data-fixture').should.equal('fixture');\n    });\n    it('should get a single data attribute', function () {\n      Q('#fixture').data('fixture', 'fixture');\n      Q('#fixture').data('fixture').should.equal('fixture');\n      expect(Q('#fixture').data('foo')).to.be.undefined;\n    });\n    it('should remove a single data attribute', function () {\n      Q('#fixture').data('fixture', null);\n      expect(Q('#fixture').node.getAttribute('data-fixture')).to.equal(null);\n    });\n    it('should set multiple data attributes', function () {\n      Q('#fixture').data({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      Q('#fixture').node.getAttribute('data-fixture1').should.equal('fixture1');\n      Q('#fixture').node.getAttribute('data-fixture2').should.equal('fixture2');\n      Q('#fixture').node.getAttribute('data-fixture2').should.equal('fixture2');\n    });\n    it('should get multiple data attributes', function () {\n      Q('#fixture').data({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      let r = Q('#fixture').data(['fixture1', 'fixture2', 'fixture3']);\n\n      expect(r).to.eql({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n    });\n    it('should edit multiple data attributes', function () {\n      Q('#fixture').data({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      Q('#fixture').data({\n        fixture1: 'fixture1m',\n        fixture2: 'fixture2m',\n        fixture3: 'fixture3m'\n      });\n      Q('#fixture').node.getAttribute('data-fixture1').should.equal('fixture1m');\n      Q('#fixture').node.getAttribute('data-fixture2').should.equal('fixture2m');\n      Q('#fixture').node.getAttribute('data-fixture2').should.equal('fixture2m');\n    });\n    it('should remove multiple data attributes', function () {\n      Q('#fixture').data({\n        fixture1: 'fixture1',\n        fixture2: 'fixture2',\n        fixture3: 'fixture3'\n      });\n      Q('#fixture').data({\n        fixture1: null,\n        fixture2: null,\n        fixture3: null\n      });\n      expect(Q('#fixture').node.getAttribute('data-fixture1')).to.equal(null);\n      expect(Q('#fixture').node.getAttribute('data-fixture2')).to.equal(null);\n      expect(Q('#fixture').node.getAttribute('data-fixture3')).to.equal(null);\n    });\n    it('should get all data attributes', function () {\n      Q('#fixture').data({\n        id: 'id',\n        id2: 'id2'\n      });\n      let r = Q('#fixture').data();\n\n      r.should.eql({\n        id: 'id',\n        id2: 'id2'\n      });\n      Q('#fixture').data({\n        id: null,\n        id2: null\n      });\n    });\n  });\n\n  describe('Tree traversing', function () {\n    window.beforeEach(function () { // eslint-disable-line\n      let ul = new Element(\n        '<ul id=\"list\" class=\"list\">' +\n        '<li id=\"li11\"></li>' +\n        '<li id=\"li12\">' +\n          '<ul id=\"sublist\">' +\n            '<li id=\"li21\"></li>' +\n            '<li id=\"li22\" class=\"lisubsub\"></li>' +\n            '<li id=\"li23\" class=\"li23 lisubsub\"></li>' +\n          '</ul>' +\n        '</li>' +\n       '</ul>');\n\n      document.body.appendChild(ul.node);\n    });\n\n    window.afterEach(function () { // eslint-disable-line\n      Q('#list').remove();\n    });\n\n    describe('Element.parent and Element.parents', function () {\n      it('should find the first parent', function () {\n        Q('#li21').parent().node.id.should.equal('sublist');\n        Q('#li21').parent(1).node.id.should.equal('sublist');\n      });\n\n      it('should find the grand parent', function () {\n        Q('#li21').parent(2).node.id.should.equal('li12');\n      });\n\n      it('should find the grand grand parent', function () {\n        Q('#li21').parent(3).node.id.should.equal('list');\n      });\n\n      it('should return document', function () {\n        Q('#li21').parent(20).node.nodeType.should.equal(9);;\n      });\n\n      it('should find the parent with class \"list\"', function () {\n        Q('#li21').parents('.list').node.id.should.equal('list');\n        Q('#li21').parent('.list').node.id.should.equal('list');\n      });\n    });\n\n    describe('Element.child and Element.childs', function () {\n      it('should find the first child', function () {\n        Q('#list').child().node.id.should.equal('li11');\n        Q('#list').child(1).node.id.should.equal('li11');\n      });\n\n      it('should find the second child', function () {\n        Q('#list').child(2).node.id.should.equal('li12');\n      });\n\n      it('should return a DocumentFragment', function () {\n        Q('#list').child(3).node.nodeType.should.equal(11);;\n      });\n\n      it('should find the child with class \"li23\"', function () {\n        Q('#list').childs('.li23').node.id.should.equal('li23');\n        Q('#list').child('.li23').node.id.should.equal('li23');\n      });\n\n      it('should find the childs with class \"lisubsub\"', function () {\n        let r = Q('#list').child('.lisubsub');\n\n        r.length.should.equal(2);\n        r.elements[0].node.id.should.equal('li22');\n        r.elements[1].node.id.should.equal('li23');\n      });\n    });\n\n    describe('Element.previousSibling and Element.previousSiblings', function () {\n      it('should find the previous sibling', function () {\n        Q('#li23').previousSibling().node.id.should.equal('li22');\n        Q('#li23').previousSibling(1).node.id.should.equal('li22');\n      });\n\n      it('should find the second previous sibling', function () {\n        Q('#li23').previousSibling(2).node.id.should.equal('li21');\n      });\n\n      it('should return a DocumentFragment', function () {\n        Q('#li23').previousSibling(3).node.nodeType.should.equal(11);;\n      });\n\n      it('should find the previous sibling with class \"lisubsub\"', function () {\n        Q('#li23').previousSibling('.lisubsub').node.id.should.equal('li22');\n        Q('#li23').previousSiblings('.lisubsub').node.id.should.equal('li22');\n      });\n    });\n\n    describe('Element.nextSibling and Element.nextSiblings', function () {\n      it('should find the next sibling', function () {\n        Q('#li21').nextSibling().node.id.should.equal('li22');\n        Q('#li21').nextSibling(1).node.id.should.equal('li22');\n      });\n\n      it('should find the second next sibling', function () {\n        Q('#li21').nextSibling(2).node.id.should.equal('li23');\n      });\n\n      it('should return a DocumentFragment', function () {\n        Q('#li21').nextSibling(3).node.nodeType.should.equal(11);;\n      });\n\n      it('should find the next sibling with class \"lisubsub\"', function () {\n        Q('#li21').nextSibling('.lisubsub').node.id.should.equal('li22');\n        Q('#li21').nextSiblings('.lisubsub').node.id.should.equal('li22');\n      });\n    });\n  });\n\n  describe('DOM manipulations', function () {\n    describe('Append', function () {\n      it('should append tag to existing dom element', function () {\n        Q('#fixture').append('span');\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n      it('should append string as node to existing dom element', function () {\n        Q('#fixture').append('<span id=\"span\"></span>');\n        Q('#fixture').child().node.id.should.equal('span');\n        Q('#fixture').empty();\n      });\n      it('should append node to existing dom element', function () {\n        Q('#fixture').append(document.createElement('span'));\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n      it('should append element to existing dom element', function () {\n        Q('#fixture').append(new Element('span'));\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n      it('should append tag to documentFragment', function () {\n        let f = new Element();\n\n        f.append('span');\n        f.child().node.nodeName.should.equal('SPAN');\n      });\n    });\n\n    describe('Prepend', function () {\n      it('should prepend tag to existing dom element', function () {\n        Q('#fixture').prepend('span');\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n\n      it('should prepend tag to existing dom element', function () {\n        Q('#fixture').append('div');\n        Q('#fixture').prepend('span');\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n    });\n\n    describe('Before', function () {\n      it('should insert before', function () {\n        Q('#fixture').prepend('span');\n        Q('#fixture').child().before('div');\n        Q('#fixture').child().node.nodeName.should.equal('DIV');\n        Q('#fixture').empty();\n      });\n    });\n\n    describe('After', function () {\n      it('should insert after', function () {\n        Q('#fixture').append('span');\n        Q('#fixture').child().after('div');\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').child(2).node.nodeName.should.equal('DIV');\n        Q('#fixture').empty();\n      });\n    });\n\n    describe('Wrap', function () {\n      it('should wrap element and return wrapped element', function () {\n        Q('#fixture').append('span');\n        let test = Q('#fixture').child().wrap('div');\n\n        Q('#fixture').child().node.nodeName.should.equal('DIV');\n        Q('#fixture').child().child().node.nodeName.should.equal('SPAN');\n        test.node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n\n      it('should wrap element and return wrapping element', function () {\n        Q('#fixture').append('span');\n        let test = Q('#fixture').child().wrap('div', false);\n\n        Q('#fixture').child().node.nodeName.should.equal('DIV');\n        Q('#fixture').child().child().node.nodeName.should.equal('SPAN');\n        test.node.nodeName.should.equal('DIV');\n        Q('#fixture').empty();\n      });\n    });\n\n    describe('Unwrap', function () {\n      it('should unwrap element', function () {\n        Q('#fixture').append('span');\n        let span = Q('#fixture').child();\n\n        Q('#fixture').child().wrap('div');\n        span.unwrap();\n        Q('#fixture').child().node.nodeName.should.equal('SPAN');\n        Q('#fixture').empty();\n      });\n    });\n\n    describe('Empty', function () {\n      it('shoud empty element text node', function () {\n        Q('#fixture').html('test');\n        Q('#fixture').node.innerHTML.should.equal('test');\n        Q('#fixture').empty();\n        Q('#fixture').node.innerHTML.should.equal('');\n      });\n\n      it('shoud empty element nodes', function () {\n        Q('#fixture').append('div');\n        Q('#fixture').append('div');\n        Q('#fixture').append('div');\n        Q('#fixture').childs('div').length.should.equal(3);\n        Q('#fixture').empty();\n        Q('#fixture').node.innerHTML.should.equal('');\n      });\n    });\n\n    describe('Remove', function () {\n      it('should remove element from DOM', function () {\n        Q('#fixture').after('div');\n        let div = Q('#fixture').nextSibling();\n\n        div.isInDom.should.equal(true);\n        div.remove();\n        div.isInDom.should.equal(false);\n      });\n    });\n  });\n\n  describe('Content, cloning and informations', function () {\n    describe('html', function () {\n      it('should get the html content', function () {\n        Q('#fixture').html().should.equal('fixture');\n      });\n      it('should set the html content', function () {\n        Q('#fixture').after('div');\n        let div = Q('#fixture').nextSibling();\n\n        div.html('test');\n        div.node.innerHTML.should.equal('test');\n        div.remove();\n      });\n    });\n\n    describe('outerHTML', function () {\n      it('should get the outerHTML content', function () {\n        Q('#fixture').outerHTML.should.equal('<div class=\"fixture\" id=\"fixture\">fixture</div>');\n      });\n    });\n\n    describe('clone', function () {\n      it('should create a clone', function () {\n        Q('#fixture').empty().append('div');\n        Q('#fixture').child().append('<div class=\"1\"></div><div class=\"2\"></div>');\n\n        let clone = Q('#fixture').child().clone();\n\n        Q('#fixture').append(clone);\n        Q('#fixture').child(1).html().should.equal(Q('#fixture').child(2).html());\n        clone.child().removeClass('1');\n        Q('#fixture').child(1).html().should.not.equal(Q('#fixture').child(2).html());\n      });\n    });\n\n    describe('shallow', function () {\n      it('should create a shallow copy', function () {\n        Q('#fixture').empty().append('div');\n        Q('#fixture').child().append('<div class=\"1\"></div><div class=\"2\"></div>');\n        let clone = Q('#fixture').child().shallow();\n\n        Q('#fixture').append(clone);\n        Q('#fixture').child(2).html().should.equal('');\n      });\n    });\n\n    describe('isInDom', function () {\n      it('should be true if is in dom', function () {\n        let div = new Element('div');\n\n        div.isInDom.should.equal(false);\n        Q('#fixture').append(div);\n        div.isInDom.should.equal(true);\n        Q('#fixture').empty();\n      });\n    });\n\n    describe('root', function () {\n      it('should return the root object container of the element', function () {\n        let div = new Element('div');\n\n        expect(div.root).to.equal(div.node);\n        document.body.appendChild(div.node);\n        expect(div.root).to.equal(document);\n        div.remove();\n      });\n    });\n  });\n\n  describe('Styles and display functions', function () {\n    describe('Styles', function () {\n      it('should return node style properties', function () {\n        Q('#fixture').styles.should.eql(getComputedStyle(document.getElementById('fixture')));\n      });\n    });\n    describe('Style', function () {\n      it('should return the initial style properties values', function () {\n        let div = Q('+div', {\n          style: {\n            color: 'red',\n            margin: '1em'\n          }\n        });\n\n        expect(div.style()).to.eql({color: 'red', margin: '1em'});\n        expect(div.style('color')).to.equal('red');\n        expect(div.style('unknown')).to.equal(undefined);\n        expect(div.style(['color', 'margin'])).to.eql({color: 'red', margin: '1em'});\n      });\n\n      it('should set style properties', function () {\n        let div = Q('+div');\n\n        div.style('background-color', 'red');\n        div.node.style.backgroundColor.should.equal('red');\n        div.style({backgroundColor: 'yellow', margin: '1em'});\n        div.node.style.backgroundColor.should.equal('yellow');\n        div.node.style.margin.should.equal('1em');\n        div.style({align: 'left'}, true).style().should.eql({align: 'left'});\n        expect(div.style(56)).to.equal(undefined);\n      });\n    });\n    describe('Visible, display, hide, show, toggle', function () {\n      it('should return false for an element not in DOM', function () {\n        let div = Q('+div');\n\n        expect(div.visible).to.equal(false);\n      });\n      it('should return true/false for an element in DOM', function () {\n        let div = Q('+div', {id: 'visible-fixture'});\n\n        document.body.appendChild(div.node);\n        expect(div.visible).to.equal(true);\n        div.display('none');\n        expect(div.visible).to.equal(false);\n        div.show();\n        expect(div.visible).to.equal(true);\n        div.hide();\n        expect(div.visible).to.equal(false);\n        div.toggle();\n        expect(div.visible).to.equal(true);\n        div.toggle();\n        expect(div.visible).to.equal(false);\n        div.remove();\n      });\n    });\n    describe('Classes', function () {\n      it('should check class', function () {\n        let div = Q('+div', {class: 'one two'});\n\n        div.hasClass('one').should.equal(true);\n        div.hasClass('one two').should.equal(false);\n        div.hasClass('one', 'two').should.equal(true);\n        div.hasClass('three').should.equal(false);\n        div.hasClass('one three').should.equal(false);\n        div.hasClass('one', 'three').should.equal(false);\n        div.hasClass('one', 'two', 'three').should.equal(false);\n      });\n\n      it('should add class', function () {\n        let div = Q('+div');\n\n        div.addClass('one').hasClass('one').should.equal(true);\n        div.addClass('one', 'two').hasClass('one', 'two').should.equal(true);\n      });\n\n      it('should remove class', function () {\n        let div = Q('+div', { class: ['one', 'two', 'three']});\n\n        div.removeClass('one').hasClass('one').should.equal(false);\n        div.removeClass('four').should.eql(div);\n        div.removeClass('three', 'two').node.className.should.equal('');\n      });\n\n      it('should toggle class', function () {\n        let div = Q('+div');\n\n        div.toggleClass('one').hasClass('one').should.equal(true);\n        div.toggleClass('one').hasClass('one').should.equal(false);\n        div.toggleClass('one', 'two').hasClass('one', 'two').should.equal(true);\n        div.toggleClass('one', 'two').hasClass('one', 'two').should.equal(false);\n        div.toggleClass('one', 'two').hasClass('one', 'two').should.equal(true);\n        div.toggleClass('one').hasClass('two').should.equal(true);\n        div.toggleClass('one').hasClass('one', 'two').should.equal(true);\n      });\n    });\n  });\n\n  describe('NodeMetrics', function () {\n    describe('Position', function () {\n      it('should return NodeMetrics object', function () {\n        let i = Q('+div', {\n          id: 'pFixture',\n          style: {\n            position: 'absolute',\n            top: '50px',\n            left: '50px',\n            width: '100px',\n            height: '100px',\n            border: '1px solid #000'\n          }\n        });\n\n        expect(i.position).to.be.an('object')\n          .to.have.all.keys('left', 'right', 'width', 'height', 'top', 'bottom', 'scrollX', 'scrollY');\n        i.position.should.eql({\n          left: undefined,\n          right: undefined,\n          width: undefined,\n          top: undefined,\n          bottom: undefined,\n          height: undefined,\n          scrollX: undefined,\n          scrollY: undefined\n        });\n        Q('=body').append(i);\n        i.position.should.contain({\n          left: 50,\n          top: 50,\n          width: 100,\n          height: 100\n        });\n      });\n\n      it('should set object position', function () {\n        Q('#pFixture').left = null;\n        Q('#pFixture').right = 50;\n        Q('#pFixture').position.should.contain({\n          right: 50,\n          top: 50,\n          width: 100,\n          height: 100\n        });\n      });\n    });\n  });\n\n  describe('Events', function () {\n    describe('Update events manager', function () {\n      var i, spy1, spy2, spy3;\n\n      window.beforeEach(function () {\n        i = Q('+div');\n        spy1 = () => {this.name = 'spy1';};\n        spy2 = () => {this.name = 'spy2';};\n        spy3 = () => {this.name = 'spy3';};\n\n        Q('body').append(i);\n        i.on('click', spy1);\n        i.on('click', spy2);\n        i.on('mouseover', spy3);\n      });\n\n      window.afterEach(function () {\n        i.remove();\n      });\n\n      it('should remove all listeners when element removed from DOM', function () {\n        i.remove();\n        i.hasEvent().should.be.false;\n      });\n\n      it('should remove all listeners when calling off()', function () {\n        i.off();\n        i.hasEvent().should.be.false;\n      });\n\n      it('should remove all clicks events when calling off(\\'click\\')', function () {\n        i.off('click');\n        i.hasEvent('click').should.be.false;\n        i.hasEvent('mouseover').should.be.true;\n      });\n\n      it('should remove only one click event when calling off(\\'click\\', spy1)', function () {\n        i.off('click', spy1);\n        i.hasEvent('click', spy1).should.be.false;\n        i.hasEvent('click', spy2).should.be.true;\n        i.hasEvent('mouseover').should.be.true;\n      });\n    });\n\n    describe('Native events - Single Element', function () {\n      var i, spy1, spy2, spy3, f1, f2, f3;\n\n      window.beforeEach(function () {\n        i = Q('+div');\n        spy1 = sinon.spy();\n        spy2 = sinon.spy();\n        spy3 = sinon.spy();\n        f1 = function () { spy1(); };\n        f2 = function () { spy2(); };\n        f3 = function () { spy3(); };\n\n        Q('body').append(i);\n      });\n\n      window.afterEach(function () {\n        i.remove();\n      });\n\n      it('Should add single listener on single HtmlElement and fire it', function () {\n        i.on('click', spy1);\n        i.fire('click');\n        spy1.called.should.be.true;\n        expect(spy1.args[0][0]).to.be.instanceof(Event);\n        expect(spy1.args[0][0].eventName).to.equal('click');\n        expect(spy1.args[0][0].target).to.equal(i.node);\n      });\n\n      it('Should add multiple listeners (same event) on single HtmlElement and fire it', function () {\n        i.on('click', f1);\n        i.on('click', f2);\n        i.fire('click');\n        spy1.called.should.be.true;\n        spy2.called.should.be.true;\n      });\n\n      it('Should add multiple listeners (multiple events) on single HtmlElement and fire it', function () {\n        i.on('click', f1);\n        i.on('click', f2);\n        i.on('mouseover', f3);\n        i.fire('click');\n        spy1.called.should.be.true;\n        spy2.called.should.be.true;\n        spy3.called.should.be.false;\n        i.fire('mouseover');\n        spy1.calledTwice.should.be.false;\n        spy2.calledTwice.should.be.false;\n        spy3.called.should.be.true;\n      });\n\n      it('Should remove single listener on single HtmlElement (specific call)', function () {\n        i.on('click', spy1);\n        i.off('click', spy1);\n        i.fire('click');\n        spy1.called.should.be.false;\n      });\n\n      it('Should remove single listener on single HtmlElement (event call)', function () {\n        i.on('click', spy1);\n        i.off('click');\n        i.fire('click');\n        spy1.called.should.be.false;\n      });\n\n      it('Should remove single listener on single HtmlElement (all events call)', function () {\n        i.on('click', spy1);\n        i.off();\n        i.fire('click');\n        spy1.called.should.be.false;\n      });\n\n      it('Should remove one among multiple listener (same event) on single HtmlElement and fire it', function () {\n        i.on('click', f1);\n        i.on('click', f2);\n        i.on('mouseover', f3);\n\n        i.off('click', f1);\n        i.fire('click');\n        spy1.called.should.be.false;\n        spy2.called.should.be.true;\n        spy3.called.should.be.false;\n      });\n\n      it('Should remove all for event multiple listener (same event) on single HtmlElement and fire it', function () {\n        i.on('click', f1);\n        i.on('click', f2);\n        i.on('mouseover', f3);\n\n        i.off('click');\n        i.fire('click');\n        spy1.called.should.be.false;\n        spy2.called.should.be.false;\n        spy3.called.should.be.false;\n      });\n\n      it('Should remove all multiple listener (same event) on single HtmlElement and fire it', function () {\n        i.on('click', f1);\n        i.on('click', f2);\n        i.on('mouseover', f3);\n        i.off();\n        i.fire('click');\n        i.fire('mouseover');\n        spy1.called.should.be.false;\n        spy2.called.should.be.false;\n        spy3.called.should.be.false;\n      });\n    });\n\n    describe('Native events - Others tests', function () {\n      it('Should add listener on Collection', function () {\n        let i = new Element('<div id=\"d1\"></div><div id=\"d2\"></div>');\n        let spy = sinon.spy();\n\n        Q('body').append(i);\n        i.on('click', spy);\n        i.fire('click');\n        spy.calledTwice.should.be.true;\n      });\n\n      it('Should remove listener on Collection', function () {\n        let i = new Element('<div id=\"d1\"></div><div id=\"d2\"></div>');\n        let spy = sinon.spy();\n\n        Q('body').append(i);\n        i.on('click', spy);\n        i.off();\n        i.fire('click');\n        spy.called.should.be.false;\n      });\n\n      it('Should add listener at construct on single HtmlElement', function () {\n        let spy = sinon.spy();\n        let i = Q('+div', {\n          events: {\n            click: spy\n          }\n        });\n\n        Q('body').append(i);\n        i.on('click', spy);\n        i.fire('click');\n        spy.called.should.be.true;\n      });\n\n      it('Should add listener at construct on Collection', function () {\n        let spy = sinon.spy();\n        let i = new Element('<div id=\"d1\"></div><div id=\"d2\"></div>', {\n          events: {\n            click: spy\n          }\n        });\n\n        Q('body').append(i);\n        i.on('click', spy);\n        i.fire('click');\n        spy.calledTwice.should.be.true;\n      });\n\n      it('Should fire event on window', function () {\n        let spy1 = sinon.spy();\n        let spy2 = sinon.spy();\n        let i = Q('+div');\n\n        window.addEventListener('click', spy1);\n        i.on('click', spy2);\n        i.fire('click', window);\n        spy1.called.should.be.true;\n        spy2.called.should.be.false;\n      });\n\n      it('Should fire event on another element', function () {\n        let spy1 = sinon.spy();\n        let spy2 = sinon.spy();\n        let i = Q('+div');\n        let j = Q('+div');\n\n        Q('body').append(i).append(j);\n        j.on('click', spy1);\n        i.on('click', spy2);\n        i.fire('click', j);\n        spy1.called.should.be.true;\n        spy2.called.should.be.false;\n      });\n\n      it('Should check registered events/event/callback', function () {\n        let i = Q('+div');\n\n        i.on('click', function f1() {});\n        i.hasEvent().should.be.false; // Not in DOM\n\n        Q(document.body).append(i);\n        i.on('click', function f1() {});\n        i.on('click', function f2() {});\n        i.on('mouseover', function f1() {});\n\n        i.hasEvent().should.be.true;\n        i.hasEvent('click').should.be.true;\n        i.hasEvent('mouseout').should.be.false;\n        i.hasEvent('click', function f1() {}).should.be.true;\n        i.hasEvent('click', function f3() {}).should.be.false;\n      });\n\n      it('Should fetch registered events/event/callback', function () {\n        let i = Q('+div');\n        let f1 = () => {};\n        let f2 = () => {};\n\n        i.on('click', function f1() {});\n        i.hasEvent().should.be.false; // Not in DOM\n\n        Q(document.body).append(i);\n        i.on('click', f1);\n        i.on('click', f2);\n        i.on('mouseover', function f1() {});\n\n        i.getEvent().should.have.all.keys('click', 'mouseover');\n        i.getEvent('click').should.have.all.keys(i._callbackId(f1), i._callbackId(f2));\n      });\n    });\n  });\n\n  describe('Fade in and out', function () {\n    before(function () {\n      let e = new Element('div', {\n        id: 'fixture-fade',\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '50px',\n          height: '50px',\n          'background-color': '#000'\n        }\n      });\n\n      document.body.appendChild(e.node);\n    });\n\n    after(function () { //eslint-disable-line\n      Q('#fixture-fade').remove();\n    });\n\n    it('should return a Promise if available or this (fadeOut)', function () {\n      let p = Q('#fixture-fade').fadeOut();\n\n      if (typeof Promise !== 'undefined') expect(p).to.be.instanceof(Promise);\n      else expect(p).to.eql(Q('#fixture-fade'));\n    });\n\n    it('should return a Promise if available or this (fadeIn)', function () {\n      let p = Q('#fixture-fade').fadeIn();\n\n      if (typeof Promise !== 'undefined') expect(p).to.be.instanceof(Promise);\n      else expect(p).to.eql(Q('#fixture-fade'));\n    });\n\n    it('should fade out in 400ms', function (done) {\n      Q('#fixture-fade').fadeOut({}, el => {\n        expect(el.node.style.opacity).to.equal('0');\n        done();\n      });\n    });\n    it('should fade in in 400ms', function (done) {\n      Q('#fixture-fade').fadeIn({}, el => {\n        expect(el.node.style.opacity).to.equal('1');\n        done();\n      });\n    });\n    it('should fade out in 1000ms', function (done) {\n      Q('#fixture-fade').fadeOut({duration: 1000}, el => {\n        expect(el.node.style.opacity).to.equal('0');\n        done();\n      });\n    });\n    it('should fade in in 1000ms', function (done) {\n      Q('#fixture-fade').fadeIn({duration: 1000}, el => {\n        expect(el.node.style.opacity).to.equal('1');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/htmlelement.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "test",
    "name": "describe60",
    "testId": 60,
    "memberof": "tests/htmlelement.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60",
    "access": null,
    "description": "HTMLElement Class",
    "lineNumber": 4
  },
  {
    "__docId__": 299,
    "kind": "test",
    "name": "describe61",
    "testId": 61,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe61",
    "access": null,
    "description": "Constructor",
    "lineNumber": 19
  },
  {
    "__docId__": 300,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "tests/htmlelement.spec.js~describe60.describe61",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe61.it62",
    "access": null,
    "description": "should add attributes",
    "lineNumber": 20
  },
  {
    "__docId__": 301,
    "kind": "test",
    "name": "describe63",
    "testId": 63,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe63",
    "access": null,
    "description": "forEach",
    "lineNumber": 49
  },
  {
    "__docId__": 302,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "tests/htmlelement.spec.js~describe60.describe63",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe63.it64",
    "access": null,
    "description": "should runs callback",
    "lineNumber": 50
  },
  {
    "__docId__": 303,
    "kind": "test",
    "name": "describe65",
    "testId": 65,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65",
    "access": null,
    "description": "Attributes and Data Attributes",
    "lineNumber": 58
  },
  {
    "__docId__": 304,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it66",
    "access": null,
    "description": "should set a single attribute",
    "lineNumber": 59
  },
  {
    "__docId__": 305,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it67",
    "access": null,
    "description": "should get a single attribute",
    "lineNumber": 63
  },
  {
    "__docId__": 306,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it68",
    "access": null,
    "description": "should remove a single attribute",
    "lineNumber": 67
  },
  {
    "__docId__": 307,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it69",
    "access": null,
    "description": "should create multiple attributes",
    "lineNumber": 71
  },
  {
    "__docId__": 308,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it70",
    "access": null,
    "description": "should get multiple attributes",
    "lineNumber": 81
  },
  {
    "__docId__": 309,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it71",
    "access": null,
    "description": "should edit multiple attributes",
    "lineNumber": 95
  },
  {
    "__docId__": 310,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it72",
    "access": null,
    "description": "should remove multiple attributes",
    "lineNumber": 110
  },
  {
    "__docId__": 311,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it73",
    "access": null,
    "description": "should get all attributes",
    "lineNumber": 125
  },
  {
    "__docId__": 312,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it74",
    "access": null,
    "description": "should set a single data attribute",
    "lineNumber": 134
  },
  {
    "__docId__": 313,
    "kind": "test",
    "name": "it75",
    "testId": 75,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it75",
    "access": null,
    "description": "should get a single data attribute",
    "lineNumber": 138
  },
  {
    "__docId__": 314,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it76",
    "access": null,
    "description": "should remove a single data attribute",
    "lineNumber": 143
  },
  {
    "__docId__": 315,
    "kind": "test",
    "name": "it77",
    "testId": 77,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it77",
    "access": null,
    "description": "should set multiple data attributes",
    "lineNumber": 147
  },
  {
    "__docId__": 316,
    "kind": "test",
    "name": "it78",
    "testId": 78,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it78",
    "access": null,
    "description": "should get multiple data attributes",
    "lineNumber": 157
  },
  {
    "__docId__": 317,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it79",
    "access": null,
    "description": "should edit multiple data attributes",
    "lineNumber": 171
  },
  {
    "__docId__": 318,
    "kind": "test",
    "name": "it80",
    "testId": 80,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it80",
    "access": null,
    "description": "should remove multiple data attributes",
    "lineNumber": 186
  },
  {
    "__docId__": 319,
    "kind": "test",
    "name": "it81",
    "testId": 81,
    "memberof": "tests/htmlelement.spec.js~describe60.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe65.it81",
    "access": null,
    "description": "should get all data attributes",
    "lineNumber": 201
  },
  {
    "__docId__": 320,
    "kind": "test",
    "name": "describe82",
    "testId": 82,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82",
    "access": null,
    "description": "Tree traversing",
    "lineNumber": 219
  },
  {
    "__docId__": 321,
    "kind": "test",
    "name": "describe83",
    "testId": 83,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe83",
    "access": null,
    "description": "Element.parent and Element.parents",
    "lineNumber": 240
  },
  {
    "__docId__": 322,
    "kind": "test",
    "name": "it84",
    "testId": 84,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe83",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe83.it84",
    "access": null,
    "description": "should find the first parent",
    "lineNumber": 241
  },
  {
    "__docId__": 323,
    "kind": "test",
    "name": "it85",
    "testId": 85,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe83",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe83.it85",
    "access": null,
    "description": "should find the grand parent",
    "lineNumber": 246
  },
  {
    "__docId__": 324,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe83",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe83.it86",
    "access": null,
    "description": "should find the grand grand parent",
    "lineNumber": 250
  },
  {
    "__docId__": 325,
    "kind": "test",
    "name": "it87",
    "testId": 87,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe83",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe83.it87",
    "access": null,
    "description": "should return document",
    "lineNumber": 254
  },
  {
    "__docId__": 326,
    "kind": "test",
    "name": "it88",
    "testId": 88,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe83",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe83.it88",
    "access": null,
    "description": "should find the parent with class \"list\"",
    "lineNumber": 258
  },
  {
    "__docId__": 327,
    "kind": "test",
    "name": "describe89",
    "testId": 89,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe89",
    "access": null,
    "description": "Element.child and Element.childs",
    "lineNumber": 264
  },
  {
    "__docId__": 328,
    "kind": "test",
    "name": "it90",
    "testId": 90,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe89",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe89.it90",
    "access": null,
    "description": "should find the first child",
    "lineNumber": 265
  },
  {
    "__docId__": 329,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe89",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe89.it91",
    "access": null,
    "description": "should find the second child",
    "lineNumber": 270
  },
  {
    "__docId__": 330,
    "kind": "test",
    "name": "it92",
    "testId": 92,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe89",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe89.it92",
    "access": null,
    "description": "should return a DocumentFragment",
    "lineNumber": 274
  },
  {
    "__docId__": 331,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe89",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe89.it93",
    "access": null,
    "description": "should find the child with class \"li23\"",
    "lineNumber": 278
  },
  {
    "__docId__": 332,
    "kind": "test",
    "name": "it94",
    "testId": 94,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe89",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe89.it94",
    "access": null,
    "description": "should find the childs with class \"lisubsub\"",
    "lineNumber": 283
  },
  {
    "__docId__": 333,
    "kind": "test",
    "name": "describe95",
    "testId": 95,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe95",
    "access": null,
    "description": "Element.previousSibling and Element.previousSiblings",
    "lineNumber": 292
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "it96",
    "testId": 96,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe95",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe95.it96",
    "access": null,
    "description": "should find the previous sibling",
    "lineNumber": 293
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe95",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe95.it97",
    "access": null,
    "description": "should find the second previous sibling",
    "lineNumber": 298
  },
  {
    "__docId__": 336,
    "kind": "test",
    "name": "it98",
    "testId": 98,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe95",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe95.it98",
    "access": null,
    "description": "should return a DocumentFragment",
    "lineNumber": 302
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "it99",
    "testId": 99,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe95",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe95.it99",
    "access": null,
    "description": "should find the previous sibling with class \"lisubsub\"",
    "lineNumber": 306
  },
  {
    "__docId__": 338,
    "kind": "test",
    "name": "describe100",
    "testId": 100,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe100",
    "access": null,
    "description": "Element.nextSibling and Element.nextSiblings",
    "lineNumber": 312
  },
  {
    "__docId__": 339,
    "kind": "test",
    "name": "it101",
    "testId": 101,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe100",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe100.it101",
    "access": null,
    "description": "should find the next sibling",
    "lineNumber": 313
  },
  {
    "__docId__": 340,
    "kind": "test",
    "name": "it102",
    "testId": 102,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe100",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe100.it102",
    "access": null,
    "description": "should find the second next sibling",
    "lineNumber": 318
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "it103",
    "testId": 103,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe100",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe100.it103",
    "access": null,
    "description": "should return a DocumentFragment",
    "lineNumber": 322
  },
  {
    "__docId__": 342,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "tests/htmlelement.spec.js~describe60.describe82.describe100",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe82.describe100.it104",
    "access": null,
    "description": "should find the next sibling with class \"lisubsub\"",
    "lineNumber": 326
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "describe105",
    "testId": 105,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105",
    "access": null,
    "description": "DOM manipulations",
    "lineNumber": 333
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "describe106",
    "testId": 106,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe106",
    "access": null,
    "description": "Append",
    "lineNumber": 334
  },
  {
    "__docId__": 345,
    "kind": "test",
    "name": "it107",
    "testId": 107,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe106",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe106.it107",
    "access": null,
    "description": "should append tag to existing dom element",
    "lineNumber": 335
  },
  {
    "__docId__": 346,
    "kind": "test",
    "name": "it108",
    "testId": 108,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe106",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe106.it108",
    "access": null,
    "description": "should append string as node to existing dom element",
    "lineNumber": 340
  },
  {
    "__docId__": 347,
    "kind": "test",
    "name": "it109",
    "testId": 109,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe106",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe106.it109",
    "access": null,
    "description": "should append node to existing dom element",
    "lineNumber": 345
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "it110",
    "testId": 110,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe106",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe106.it110",
    "access": null,
    "description": "should append element to existing dom element",
    "lineNumber": 350
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "it111",
    "testId": 111,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe106",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe106.it111",
    "access": null,
    "description": "should append tag to documentFragment",
    "lineNumber": 355
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "describe112",
    "testId": 112,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe112",
    "access": null,
    "description": "Prepend",
    "lineNumber": 363
  },
  {
    "__docId__": 351,
    "kind": "test",
    "name": "it113",
    "testId": 113,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe112",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe112.it113",
    "access": null,
    "description": "should prepend tag to existing dom element",
    "lineNumber": 364
  },
  {
    "__docId__": 352,
    "kind": "test",
    "name": "it114",
    "testId": 114,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe112",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe112.it114",
    "access": null,
    "description": "should prepend tag to existing dom element",
    "lineNumber": 370
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "describe115",
    "testId": 115,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe115",
    "access": null,
    "description": "Before",
    "lineNumber": 378
  },
  {
    "__docId__": 354,
    "kind": "test",
    "name": "it116",
    "testId": 116,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe115",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe115.it116",
    "access": null,
    "description": "should insert before",
    "lineNumber": 379
  },
  {
    "__docId__": 355,
    "kind": "test",
    "name": "describe117",
    "testId": 117,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe117",
    "access": null,
    "description": "After",
    "lineNumber": 387
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "it118",
    "testId": 118,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe117",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe117.it118",
    "access": null,
    "description": "should insert after",
    "lineNumber": 388
  },
  {
    "__docId__": 357,
    "kind": "test",
    "name": "describe119",
    "testId": 119,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe119",
    "access": null,
    "description": "Wrap",
    "lineNumber": 397
  },
  {
    "__docId__": 358,
    "kind": "test",
    "name": "it120",
    "testId": 120,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe119",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe119.it120",
    "access": null,
    "description": "should wrap element and return wrapped element",
    "lineNumber": 398
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "it121",
    "testId": 121,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe119",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe119.it121",
    "access": null,
    "description": "should wrap element and return wrapping element",
    "lineNumber": 408
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "describe122",
    "testId": 122,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe122",
    "access": null,
    "description": "Unwrap",
    "lineNumber": 419
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "it123",
    "testId": 123,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe122",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe122.it123",
    "access": null,
    "description": "should unwrap element",
    "lineNumber": 420
  },
  {
    "__docId__": 362,
    "kind": "test",
    "name": "describe124",
    "testId": 124,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe124",
    "access": null,
    "description": "Empty",
    "lineNumber": 431
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "it125",
    "testId": 125,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe124",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe124.it125",
    "access": null,
    "description": "shoud empty element text node",
    "lineNumber": 432
  },
  {
    "__docId__": 364,
    "kind": "test",
    "name": "it126",
    "testId": 126,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe124",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe124.it126",
    "access": null,
    "description": "shoud empty element nodes",
    "lineNumber": 439
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "describe127",
    "testId": 127,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe127",
    "access": null,
    "description": "Remove",
    "lineNumber": 449
  },
  {
    "__docId__": 366,
    "kind": "test",
    "name": "it128",
    "testId": 128,
    "memberof": "tests/htmlelement.spec.js~describe60.describe105.describe127",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe105.describe127.it128",
    "access": null,
    "description": "should remove element from DOM",
    "lineNumber": 450
  },
  {
    "__docId__": 367,
    "kind": "test",
    "name": "describe129",
    "testId": 129,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129",
    "access": null,
    "description": "Content, cloning and informations",
    "lineNumber": 461
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "describe130",
    "testId": 130,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe130",
    "access": null,
    "description": "html",
    "lineNumber": 462
  },
  {
    "__docId__": 369,
    "kind": "test",
    "name": "it131",
    "testId": 131,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe130",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe130.it131",
    "access": null,
    "description": "should get the html content",
    "lineNumber": 463
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "it132",
    "testId": 132,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe130",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe130.it132",
    "access": null,
    "description": "should set the html content",
    "lineNumber": 466
  },
  {
    "__docId__": 371,
    "kind": "test",
    "name": "describe133",
    "testId": 133,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe133",
    "access": null,
    "description": "outerHTML",
    "lineNumber": 476
  },
  {
    "__docId__": 372,
    "kind": "test",
    "name": "it134",
    "testId": 134,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe133",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe133.it134",
    "access": null,
    "description": "should get the outerHTML content",
    "lineNumber": 477
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "describe135",
    "testId": 135,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe135",
    "access": null,
    "description": "clone",
    "lineNumber": 482
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "it136",
    "testId": 136,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe135",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe135.it136",
    "access": null,
    "description": "should create a clone",
    "lineNumber": 483
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "describe137",
    "testId": 137,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe137",
    "access": null,
    "description": "shallow",
    "lineNumber": 496
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "it138",
    "testId": 138,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe137",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe137.it138",
    "access": null,
    "description": "should create a shallow copy",
    "lineNumber": 497
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "describe139",
    "testId": 139,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe139",
    "access": null,
    "description": "isInDom",
    "lineNumber": 507
  },
  {
    "__docId__": 378,
    "kind": "test",
    "name": "it140",
    "testId": 140,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe139",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe139.it140",
    "access": null,
    "description": "should be true if is in dom",
    "lineNumber": 508
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "describe141",
    "testId": 141,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe141",
    "access": null,
    "description": "root",
    "lineNumber": 518
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "it142",
    "testId": 142,
    "memberof": "tests/htmlelement.spec.js~describe60.describe129.describe141",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe129.describe141.it142",
    "access": null,
    "description": "should return the root object container of the element",
    "lineNumber": 519
  },
  {
    "__docId__": 381,
    "kind": "test",
    "name": "describe143",
    "testId": 143,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143",
    "access": null,
    "description": "Styles and display functions",
    "lineNumber": 530
  },
  {
    "__docId__": 382,
    "kind": "test",
    "name": "describe144",
    "testId": 144,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe144",
    "access": null,
    "description": "Styles",
    "lineNumber": 531
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "it145",
    "testId": 145,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe144",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe144.it145",
    "access": null,
    "description": "should return node style properties",
    "lineNumber": 532
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "describe146",
    "testId": 146,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe146",
    "access": null,
    "description": "Style",
    "lineNumber": 536
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "it147",
    "testId": 147,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe146",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe146.it147",
    "access": null,
    "description": "should return the initial style properties values",
    "lineNumber": 537
  },
  {
    "__docId__": 386,
    "kind": "test",
    "name": "it148",
    "testId": 148,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe146",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe146.it148",
    "access": null,
    "description": "should set style properties",
    "lineNumber": 551
  },
  {
    "__docId__": 387,
    "kind": "test",
    "name": "describe149",
    "testId": 149,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe149",
    "access": null,
    "description": "Visible, display, hide, show, toggle",
    "lineNumber": 563
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "it150",
    "testId": 150,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe149",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe149.it150",
    "access": null,
    "description": "should return false for an element not in DOM",
    "lineNumber": 564
  },
  {
    "__docId__": 389,
    "kind": "test",
    "name": "it151",
    "testId": 151,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe149",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe149.it151",
    "access": null,
    "description": "should return true/false for an element in DOM",
    "lineNumber": 569
  },
  {
    "__docId__": 390,
    "kind": "test",
    "name": "describe152",
    "testId": 152,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe152",
    "access": null,
    "description": "Classes",
    "lineNumber": 587
  },
  {
    "__docId__": 391,
    "kind": "test",
    "name": "it153",
    "testId": 153,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe152",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe152.it153",
    "access": null,
    "description": "should check class",
    "lineNumber": 588
  },
  {
    "__docId__": 392,
    "kind": "test",
    "name": "it154",
    "testId": 154,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe152",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe152.it154",
    "access": null,
    "description": "should add class",
    "lineNumber": 600
  },
  {
    "__docId__": 393,
    "kind": "test",
    "name": "it155",
    "testId": 155,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe152",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe152.it155",
    "access": null,
    "description": "should remove class",
    "lineNumber": 607
  },
  {
    "__docId__": 394,
    "kind": "test",
    "name": "it156",
    "testId": 156,
    "memberof": "tests/htmlelement.spec.js~describe60.describe143.describe152",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe143.describe152.it156",
    "access": null,
    "description": "should toggle class",
    "lineNumber": 615
  },
  {
    "__docId__": 395,
    "kind": "test",
    "name": "describe157",
    "testId": 157,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe157",
    "access": null,
    "description": "NodeMetrics",
    "lineNumber": 629
  },
  {
    "__docId__": 396,
    "kind": "test",
    "name": "describe158",
    "testId": 158,
    "memberof": "tests/htmlelement.spec.js~describe60.describe157",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe157.describe158",
    "access": null,
    "description": "Position",
    "lineNumber": 630
  },
  {
    "__docId__": 397,
    "kind": "test",
    "name": "it159",
    "testId": 159,
    "memberof": "tests/htmlelement.spec.js~describe60.describe157.describe158",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe157.describe158.it159",
    "access": null,
    "description": "should return NodeMetrics object",
    "lineNumber": 631
  },
  {
    "__docId__": 398,
    "kind": "test",
    "name": "it160",
    "testId": 160,
    "memberof": "tests/htmlelement.spec.js~describe60.describe157.describe158",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe157.describe158.it160",
    "access": null,
    "description": "should set object position",
    "lineNumber": 665
  },
  {
    "__docId__": 399,
    "kind": "test",
    "name": "describe161",
    "testId": 161,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161",
    "access": null,
    "description": "Events",
    "lineNumber": 678
  },
  {
    "__docId__": 400,
    "kind": "test",
    "name": "describe162",
    "testId": 162,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe162",
    "access": null,
    "description": "Update events manager",
    "lineNumber": 679
  },
  {
    "__docId__": 401,
    "kind": "test",
    "name": "it163",
    "testId": 163,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe162",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe162.it163",
    "access": null,
    "description": "should remove all listeners when element removed from DOM",
    "lineNumber": 698
  },
  {
    "__docId__": 402,
    "kind": "test",
    "name": "it164",
    "testId": 164,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe162",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe162.it164",
    "access": null,
    "description": "should remove all listeners when calling off()",
    "lineNumber": 703
  },
  {
    "__docId__": 403,
    "kind": "test",
    "name": "it165",
    "testId": 165,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe162",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe162.it165",
    "access": null,
    "description": "should remove all clicks events when calling off('click')",
    "lineNumber": 708
  },
  {
    "__docId__": 404,
    "kind": "test",
    "name": "it166",
    "testId": 166,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe162",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe162.it166",
    "access": null,
    "description": "should remove only one click event when calling off('click', spy1)",
    "lineNumber": 714
  },
  {
    "__docId__": 405,
    "kind": "test",
    "name": "describe167",
    "testId": 167,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "access": null,
    "description": "Native events - Single Element",
    "lineNumber": 722
  },
  {
    "__docId__": 406,
    "kind": "test",
    "name": "it168",
    "testId": 168,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it168",
    "access": null,
    "description": "Should add single listener on single HtmlElement and fire it",
    "lineNumber": 741
  },
  {
    "__docId__": 407,
    "kind": "test",
    "name": "it169",
    "testId": 169,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it169",
    "access": null,
    "description": "Should add multiple listeners (same event) on single HtmlElement and fire it",
    "lineNumber": 750
  },
  {
    "__docId__": 408,
    "kind": "test",
    "name": "it170",
    "testId": 170,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it170",
    "access": null,
    "description": "Should add multiple listeners (multiple events) on single HtmlElement and fire it",
    "lineNumber": 758
  },
  {
    "__docId__": 409,
    "kind": "test",
    "name": "it171",
    "testId": 171,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it171",
    "access": null,
    "description": "Should remove single listener on single HtmlElement (specific call)",
    "lineNumber": 772
  },
  {
    "__docId__": 410,
    "kind": "test",
    "name": "it172",
    "testId": 172,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it172",
    "access": null,
    "description": "Should remove single listener on single HtmlElement (event call)",
    "lineNumber": 779
  },
  {
    "__docId__": 411,
    "kind": "test",
    "name": "it173",
    "testId": 173,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it173",
    "access": null,
    "description": "Should remove single listener on single HtmlElement (all events call)",
    "lineNumber": 786
  },
  {
    "__docId__": 412,
    "kind": "test",
    "name": "it174",
    "testId": 174,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it174",
    "access": null,
    "description": "Should remove one among multiple listener (same event) on single HtmlElement and fire it",
    "lineNumber": 793
  },
  {
    "__docId__": 413,
    "kind": "test",
    "name": "it175",
    "testId": 175,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it175",
    "access": null,
    "description": "Should remove all for event multiple listener (same event) on single HtmlElement and fire it",
    "lineNumber": 805
  },
  {
    "__docId__": 414,
    "kind": "test",
    "name": "it176",
    "testId": 176,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe167.it176",
    "access": null,
    "description": "Should remove all multiple listener (same event) on single HtmlElement and fire it",
    "lineNumber": 817
  },
  {
    "__docId__": 415,
    "kind": "test",
    "name": "describe177",
    "testId": 177,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "access": null,
    "description": "Native events - Others tests",
    "lineNumber": 830
  },
  {
    "__docId__": 416,
    "kind": "test",
    "name": "it178",
    "testId": 178,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it178",
    "access": null,
    "description": "Should add listener on Collection",
    "lineNumber": 831
  },
  {
    "__docId__": 417,
    "kind": "test",
    "name": "it179",
    "testId": 179,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it179",
    "access": null,
    "description": "Should remove listener on Collection",
    "lineNumber": 841
  },
  {
    "__docId__": 418,
    "kind": "test",
    "name": "it180",
    "testId": 180,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it180",
    "access": null,
    "description": "Should add listener at construct on single HtmlElement",
    "lineNumber": 852
  },
  {
    "__docId__": 419,
    "kind": "test",
    "name": "it181",
    "testId": 181,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it181",
    "access": null,
    "description": "Should add listener at construct on Collection",
    "lineNumber": 866
  },
  {
    "__docId__": 420,
    "kind": "test",
    "name": "it182",
    "testId": 182,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it182",
    "access": null,
    "description": "Should fire event on window",
    "lineNumber": 880
  },
  {
    "__docId__": 421,
    "kind": "test",
    "name": "it183",
    "testId": 183,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it183",
    "access": null,
    "description": "Should fire event on another element",
    "lineNumber": 892
  },
  {
    "__docId__": 422,
    "kind": "test",
    "name": "it184",
    "testId": 184,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it184",
    "access": null,
    "description": "Should check registered events/event/callback",
    "lineNumber": 906
  },
  {
    "__docId__": 423,
    "kind": "test",
    "name": "it185",
    "testId": 185,
    "memberof": "tests/htmlelement.spec.js~describe60.describe161.describe177",
    "testDepth": 3,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe161.describe177.it185",
    "access": null,
    "description": "Should fetch registered events/event/callback",
    "lineNumber": 924
  },
  {
    "__docId__": 424,
    "kind": "test",
    "name": "describe186",
    "testId": 186,
    "memberof": "tests/htmlelement.spec.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186",
    "access": null,
    "description": "Fade in and out",
    "lineNumber": 943
  },
  {
    "__docId__": 425,
    "kind": "test",
    "name": "it187",
    "testId": 187,
    "memberof": "tests/htmlelement.spec.js~describe60.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186.it187",
    "access": null,
    "description": "should return a Promise if available or this (fadeOut)",
    "lineNumber": 964
  },
  {
    "__docId__": 426,
    "kind": "test",
    "name": "it188",
    "testId": 188,
    "memberof": "tests/htmlelement.spec.js~describe60.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186.it188",
    "access": null,
    "description": "should return a Promise if available or this (fadeIn)",
    "lineNumber": 971
  },
  {
    "__docId__": 427,
    "kind": "test",
    "name": "it189",
    "testId": 189,
    "memberof": "tests/htmlelement.spec.js~describe60.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186.it189",
    "access": null,
    "description": "should fade out in 400ms",
    "lineNumber": 978
  },
  {
    "__docId__": 428,
    "kind": "test",
    "name": "it190",
    "testId": 190,
    "memberof": "tests/htmlelement.spec.js~describe60.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186.it190",
    "access": null,
    "description": "should fade in in 400ms",
    "lineNumber": 984
  },
  {
    "__docId__": 429,
    "kind": "test",
    "name": "it191",
    "testId": 191,
    "memberof": "tests/htmlelement.spec.js~describe60.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186.it191",
    "access": null,
    "description": "should fade out in 1000ms",
    "lineNumber": 990
  },
  {
    "__docId__": 430,
    "kind": "test",
    "name": "it192",
    "testId": 192,
    "memberof": "tests/htmlelement.spec.js~describe60.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "tests/htmlelement.spec.js~describe60.describe186.it192",
    "access": null,
    "description": "should fade in in 1000ms",
    "lineNumber": 996
  },
  {
    "__docId__": 431,
    "kind": "testFile",
    "name": "tests/inputelement.spec.js",
    "content": "import {Q} from 'index';\nimport ObjectArray from 'dot-object-array';\n\nwindow.Q = Q;\n\n/**\n*  @test {InputElement}\n*/\n\ndescribe('InputElement', function () {\n  /**\n  *  @test {InputElement#constructor}\n  */\n  describe('Constructor', function () {\n    it('should create input text with value', function () {\n      let i = Q('+input', {type: 'text', value: 'fixture'});\n\n      i.node.nodeName.should.equal('INPUT');\n      i.type.should.equal('text');\n      i.value.should.equal('fixture');\n    });\n\n    it('should create input text with required', function () {\n      let i = Q('+input', {type: 'text', required: 'required'});\n\n      i.rules.required.should.not.equal('undefined');\n      i.validate().should.be.false;\n      i.value = 'fixture';\n      i.validate().should.be.true;\n    });\n  });\n\n  /**\n  *  @test {InputElement}.name\n  */\n  it('should return name attribute as name', function () {\n    let i = Q('+input', {name: 'fixture', id: 'fixture2'});\n\n    i.name.should.equal('fixture');\n  });\n\n  it('should return id attribute as name', function () {\n    let i = Q('+input', {id: 'fixture2'});\n\n    i.name.should.equal('fixture2');\n  });\n\n  it('should return randomized uniqid name', function () {\n    let i = Q('+input');\n\n    i.name.length.should.not.equal(0);\n  });\n\n  /**\n  *  @test {InputElement.type}\n  *  @test {InputElement#val}\n  */\n  describe('Type and values', function () {\n    let i;\n\n    window.beforeEach(function () {\n      i = Q('+input');\n    });\n\n    describe('Textual input', function () {\n      it('should set type, set and retrieve value', function () {\n        i.type = 'email';\n        i.attr('type').should.equal('email');\n        i.val('fixture@fixture.com');\n        i.val().should.equal('fixture@fixture.com');\n      });\n    });\n\n    describe('Boolean inputs', function () {\n      it('should set type, set and retrieve value', function () {\n        i.type = 'checkbox';\n        i.attr('type').should.equal('checkbox');\n\n        i.val().should.equal(0);\n        i.node.checked = true;\n        i.val().should.equal(1);\n        i.node.checked = false;\n        i.val('test');\n        expect(i.val()).to.be.undefined;\n        i.node.checked = true;\n        i.val().should.equal('test');\n      });\n    });\n\n    describe('Select input', function () {\n      it('should set type, set and retrieve value', function () {\n        i = Q('+select', {\n          options: {\n            f1: 'fixture1',\n            f2: 'fixture2'\n          }\n        });\n\n        i.type.should.equal('select');\n        i.value.should.equal('f1');\n\n        i = Q('+select', {\n          value: 'f2',\n          options: {\n            f1: 'fixture1',\n            f2: 'fixture2'\n          }\n        });\n        i.value.should.equal('f2');\n\n        i = Q('+select', {\n          value: 'f3',\n          options: {\n            f1: 'fixture1',\n            f2: 'fixture2'\n          }\n        });\n        i.value.should.equal('f1');\n      });\n    });\n\n    describe('Textarea input', function () {\n      it('should set type, set and retrieve value', function () {\n        i = Q('+textarea');\n        i.attr('type').should.equal('textarea');\n        Q('body').append(i);\n\n        i.val().should.equal('');\n        i.val('fixture');\n        i.val().should.equal('fixture');\n        i.val('fixture2');\n        i.val().should.equal('fixture2');\n\n        i.remove();\n      });\n    });\n  });\n\n  /**\n  *  @test {InputElement#rule}\n  *  @test {InputElement.value}\n  *  @test {InputElement#validate}\n  */\n  describe('Rule', function () {\n    let i;\n    const sameas = Q('+input', {name: 'sameas', type: 'text', value: 'fixture'});\n    const rules = new ObjectArray({\n      required: [\n        {val: 'fixture', res: true},\n        {val: '', res: false},\n        {val: 0, res: true}\n      ],\n      int: [\n        {val: 10, res: true},\n        {val: -5, res: true},\n        {val: 0, res: true},\n        {val: '', res: false},\n        {val: 'a', res: false},\n        {val: '1a', res: false}\n      ],\n      number: [\n        {val: 10, res: true},\n        {val: -5, res: true},\n        {val: 0, res: true},\n        {val: 10.5, res: true},\n        {val: -10.5, res: true},\n        {val: '', res: false},\n        {val: 'a', res: false},\n        {val: 'a.10', res: false}\n      ],\n      email: [\n        {val: 'fixture@fixture.com', res: true},\n        {val: '', res: false},\n        {val: 0, res: false},\n        {val: 'fixture@', res: false},\n        {val: '@fixture.com', res: false},\n        {val: 'fixture@fixture', res: false}\n      ]\n    });\n\n    window.beforeEach(function () {\n      i = Q('+input');\n    });\n\n    it('should apply rule: sameas with empty value', function () {\n      Q('body').append(sameas);\n      i.rule('sameas', '@sameas');\n      i.validate().should.equal(false);\n      sameas.remove();\n    });\n\n    it('should apply rule: sameas with same values', function () {\n      Q('body').append(sameas);\n      i.rule('sameas', '@sameas');\n      i.value = 'fixture';\n      i.validate().should.equal(true);\n      sameas.remove();\n    });\n\n    it('should apply rule: sameas with different values', function () {\n      Q('body').append(sameas);\n      i.rule('sameas', '@sameas');\n      i.value = 'fixture3';\n      i.validate().should.equal(false);\n      sameas.remove();\n    });\n\n    rules.forEach(function (cases, rule) {\n      cases.forEach(function (c) {\n        it('should apply rule : ' + rule + ' with case : ' + JSON.stringify(c), function () {\n          i.rule(rule);\n          i.value = c.val;\n          i.validate().should.equal(c.res);\n        });\n      });\n    });\n\n    it('should apply custom rule', function () {\n      i.rule('custom', /fix/);\n      i.validate().should.be.false;\n      i.value = 'fixture';\n      i.validate().should.be.true;\n    });\n\n    it('should not evaluate string as rule', function () {\n      expect(i.rule.bind(i, 'pattern', 'notARegexp'))\n        .to.not.throw('Custom rule value must be a regular expression or callback');\n      i.rules.should.be.empty;\n    });\n\n    it('should evaluate string as rule', function () {\n      expect(i.rule.bind(i, 'pattern', 'notARegexp', null, true))\n        .to.not.throw('Custom rule value must be a regular expression or callback');\n      i.rules.should.not.be.empty;\n    });\n\n    it('should apply callback', function () {\n      var i = Q('+<input type=\"text\">');\n\n      i.rule('myRule', function () {\n        return this.value > 5;\n      }, 'value must be over 5');\n\n      i.value = 3;\n      i.validate().should.be.false;\n      i.errors.should.eql({\n        myRule: 'value must be over 5'\n      });\n      i.value = 6;\n      i.validate().should.be.true;\n    });\n  });\n\n  /**\n  *  @test {InputElement#rules}\n  *  @test {InputElement#errors}\n  */\n  describe('Rules', function () {\n    it('should apply rules', function () {\n      let i = Q('+input', {\n        required: 'required'\n      });\n\n      i.rule('fixture', /1/, 'this must be a one');\n      i.rules.should.not.be.empty;\n      i.validate();\n      i.errors.should.eql({\n        required: 'FIELD_REQUIRED',\n        fixture: 'this must be a one'\n      });\n      i.value = 'a';\n      i.val('a');\n      i.validate();\n      i.errors.should.eql({\n        fixture: 'this must be a one'\n      });\n      i.value = 1;\n      i.validate();\n      i.errors.should.be.empty;\n    });\n  });\n\n  /**\n  *  @test {label}\n  */\n  describe('Label method', function () {\n    it('should output a label', function () {\n      let i = Q('+input', {\n        name: 'fixture'\n      });\n\n      i.label('label').outerHTML.should.equal('<label for=\"fixture\">label</label>');\n    });\n  });\n\n  /**\n  *  @test {tooltip}\n  */\n  describe('Tooltip method', function () {\n    it('should output a tooltip', function () {\n      let i = Q('+input', {\n        name: 'fixture'\n      });\n\n      i.tooltip('tooltip').outerHTML.should.equal('<span data-for=\"fixture\" data-type=\"tooltip\">tooltip</span>');\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/inputelement.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 432,
    "kind": "test",
    "name": "describe193",
    "testId": 193,
    "memberof": "tests/inputelement.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193",
    "access": null,
    "description": "InputElement",
    "lineNumber": 10,
    "testTargets": [
      "InputElement"
    ]
  },
  {
    "__docId__": 433,
    "kind": "test",
    "name": "describe194",
    "testId": 194,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe194",
    "access": null,
    "description": "Constructor",
    "lineNumber": 14,
    "testTargets": [
      "InputElement#constructor"
    ]
  },
  {
    "__docId__": 434,
    "kind": "test",
    "name": "it195",
    "testId": 195,
    "memberof": "tests/inputelement.spec.js~describe193.describe194",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe194.it195",
    "access": null,
    "description": "should create input text with value",
    "lineNumber": 15
  },
  {
    "__docId__": 435,
    "kind": "test",
    "name": "it196",
    "testId": 196,
    "memberof": "tests/inputelement.spec.js~describe193.describe194",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe194.it196",
    "access": null,
    "description": "should create input text with required",
    "lineNumber": 23
  },
  {
    "__docId__": 436,
    "kind": "test",
    "name": "it197",
    "testId": 197,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.it197",
    "access": null,
    "description": "should return name attribute as name",
    "lineNumber": 36,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 437,
    "kind": "test",
    "name": "it198",
    "testId": 198,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.it198",
    "access": null,
    "description": "should return id attribute as name",
    "lineNumber": 42
  },
  {
    "__docId__": 438,
    "kind": "test",
    "name": "it199",
    "testId": 199,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.it199",
    "access": null,
    "description": "should return randomized uniqid name",
    "lineNumber": 48
  },
  {
    "__docId__": 439,
    "kind": "test",
    "name": "describe200",
    "testId": 200,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200",
    "access": null,
    "description": "Type and values",
    "lineNumber": 58,
    "testTargets": [
      "InputElement.type",
      "InputElement#val"
    ]
  },
  {
    "__docId__": 440,
    "kind": "test",
    "name": "describe201",
    "testId": 201,
    "memberof": "tests/inputelement.spec.js~describe193.describe200",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe201",
    "access": null,
    "description": "Textual input",
    "lineNumber": 65
  },
  {
    "__docId__": 441,
    "kind": "test",
    "name": "it202",
    "testId": 202,
    "memberof": "tests/inputelement.spec.js~describe193.describe200.describe201",
    "testDepth": 3,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe201.it202",
    "access": null,
    "description": "should set type, set and retrieve value",
    "lineNumber": 66
  },
  {
    "__docId__": 442,
    "kind": "test",
    "name": "describe203",
    "testId": 203,
    "memberof": "tests/inputelement.spec.js~describe193.describe200",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe203",
    "access": null,
    "description": "Boolean inputs",
    "lineNumber": 74
  },
  {
    "__docId__": 443,
    "kind": "test",
    "name": "it204",
    "testId": 204,
    "memberof": "tests/inputelement.spec.js~describe193.describe200.describe203",
    "testDepth": 3,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe203.it204",
    "access": null,
    "description": "should set type, set and retrieve value",
    "lineNumber": 75
  },
  {
    "__docId__": 444,
    "kind": "test",
    "name": "describe205",
    "testId": 205,
    "memberof": "tests/inputelement.spec.js~describe193.describe200",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe205",
    "access": null,
    "description": "Select input",
    "lineNumber": 90
  },
  {
    "__docId__": 445,
    "kind": "test",
    "name": "it206",
    "testId": 206,
    "memberof": "tests/inputelement.spec.js~describe193.describe200.describe205",
    "testDepth": 3,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe205.it206",
    "access": null,
    "description": "should set type, set and retrieve value",
    "lineNumber": 91
  },
  {
    "__docId__": 446,
    "kind": "test",
    "name": "describe207",
    "testId": 207,
    "memberof": "tests/inputelement.spec.js~describe193.describe200",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe207",
    "access": null,
    "description": "Textarea input",
    "lineNumber": 122
  },
  {
    "__docId__": 447,
    "kind": "test",
    "name": "it208",
    "testId": 208,
    "memberof": "tests/inputelement.spec.js~describe193.describe200.describe207",
    "testDepth": 3,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe200.describe207.it208",
    "access": null,
    "description": "should set type, set and retrieve value",
    "lineNumber": 123
  },
  {
    "__docId__": 448,
    "kind": "test",
    "name": "describe209",
    "testId": 209,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209",
    "access": null,
    "description": "Rule",
    "lineNumber": 144,
    "testTargets": [
      "InputElement#rule",
      "InputElement.value",
      "InputElement#validate"
    ]
  },
  {
    "__docId__": 449,
    "kind": "test",
    "name": "it210",
    "testId": 210,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it210",
    "access": null,
    "description": "should apply rule: sameas with empty value",
    "lineNumber": 185
  },
  {
    "__docId__": 450,
    "kind": "test",
    "name": "it211",
    "testId": 211,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it211",
    "access": null,
    "description": "should apply rule: sameas with same values",
    "lineNumber": 192
  },
  {
    "__docId__": 451,
    "kind": "test",
    "name": "it212",
    "testId": 212,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it212",
    "access": null,
    "description": "should apply rule: sameas with different values",
    "lineNumber": 200
  },
  {
    "__docId__": 452,
    "kind": "test",
    "name": "it213",
    "testId": 213,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it213",
    "access": null,
    "lineNumber": 210
  },
  {
    "__docId__": 453,
    "kind": "test",
    "name": "it214",
    "testId": 214,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it214",
    "access": null,
    "description": "should apply custom rule",
    "lineNumber": 218
  },
  {
    "__docId__": 454,
    "kind": "test",
    "name": "it215",
    "testId": 215,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it215",
    "access": null,
    "description": "should not evaluate string as rule",
    "lineNumber": 225
  },
  {
    "__docId__": 455,
    "kind": "test",
    "name": "it216",
    "testId": 216,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it216",
    "access": null,
    "description": "should evaluate string as rule",
    "lineNumber": 231
  },
  {
    "__docId__": 456,
    "kind": "test",
    "name": "it217",
    "testId": 217,
    "memberof": "tests/inputelement.spec.js~describe193.describe209",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe209.it217",
    "access": null,
    "description": "should apply callback",
    "lineNumber": 237
  },
  {
    "__docId__": 457,
    "kind": "test",
    "name": "describe218",
    "testId": 218,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe218",
    "access": null,
    "description": "Rules",
    "lineNumber": 258,
    "testTargets": [
      "InputElement#rules",
      "InputElement#errors"
    ]
  },
  {
    "__docId__": 458,
    "kind": "test",
    "name": "it219",
    "testId": 219,
    "memberof": "tests/inputelement.spec.js~describe193.describe218",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe218.it219",
    "access": null,
    "description": "should apply rules",
    "lineNumber": 259
  },
  {
    "__docId__": 459,
    "kind": "test",
    "name": "describe220",
    "testId": 220,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe220",
    "access": null,
    "description": "Label method",
    "lineNumber": 286,
    "testTargets": [
      "label"
    ]
  },
  {
    "__docId__": 460,
    "kind": "test",
    "name": "it221",
    "testId": 221,
    "memberof": "tests/inputelement.spec.js~describe193.describe220",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe220.it221",
    "access": null,
    "description": "should output a label",
    "lineNumber": 287
  },
  {
    "__docId__": 461,
    "kind": "test",
    "name": "describe222",
    "testId": 222,
    "memberof": "tests/inputelement.spec.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe222",
    "access": null,
    "description": "Tooltip method",
    "lineNumber": 299,
    "testTargets": [
      "tooltip"
    ]
  },
  {
    "__docId__": 462,
    "kind": "test",
    "name": "it223",
    "testId": 223,
    "memberof": "tests/inputelement.spec.js~describe193.describe222",
    "testDepth": 2,
    "static": true,
    "longname": "tests/inputelement.spec.js~describe193.describe222.it223",
    "access": null,
    "description": "should output a tooltip",
    "lineNumber": 300
  },
  {
    "__docId__": 463,
    "kind": "testFile",
    "name": "tests/q.spec.js",
    "content": "import {Q} from 'index';\n\ndescribe('Q magic', function () {\n  describe('Element creation', function () {\n    it('should returns a void HtmlElement', function () {\n      let e = Q();\n\n      e.enhanced.should.equal(true);\n      e.node.nodeType.should.equal(11);\n    });\n\n    it('should return element unchanged', function () {\n      let e = Q('+div');\n      let i = Q(e);\n\n      e.should.eql(i);\n    });\n\n    it('should create an HtmlElement from a node', function () {\n      let e = document.createElement('div');\n      let i = Q(e);\n\n      i.enhanced.should.equal(true);\n      i.node.should.eql(e);\n    });\n\n    it('should create an HtmlElement from string', function () {\n      let e = Q('+<ul style=\"display:none\" id=\"list\" class=\"list\">' +\n        '<li id=\"li11\"></li>' +\n        '<li id=\"li12\">' +\n          '<ul id=\"sublist\">' +\n            '<li id=\"li21\"></li>' +\n            '<li id=\"li22\" class=\"lisubsub\"></li>' +\n            '<li id=\"li23\" class=\"li23 lisubsub\"></li>' +\n          '</ul>' +\n        '</li>' +\n        '<li><form id=\"form\"><input type=\"text\"><input type=\"text\" id=\"name\" name=\"fixture\"></form></li>' +\n       '</ul>');\n\n      e.enhanced.should.equal(true);\n      e.node.nodeName.should.equal('UL');\n      document.body.appendChild(e.node);\n    });\n  });\n\n  describe('Element query', function () {\n    it('should throw an exception if invalid query selector', function () {\n      expect(Q.bind(Q, '*diva')).to.throw('Invalid CSS query Selector');\n    });\n\n    it('should find #li11 in DOM and memory', function () {\n      let e = Q('#list');\n\n      Q('#li11').node.id.should.equal('li11');\n      e.remove();\n      Q('#li11').length.should.equal(0);\n      Q('#li11', e).node.id.should.equal('li11');\n      document.body.appendChild(e.node);\n    });\n\n    it('should find .li23 in DOM and memory', function () {\n      let e = Q('#list');\n\n      Q('.li23').node.id.should.equal('li23');\n      e.remove();\n      Q('.li23').length.should.equal(0);\n      Q('.li23', e).node.id.should.equal('li23');\n      document.body.appendChild(e.node);\n    });\n\n    it('should find @fixture in DOM and memory', function () {\n      let e = Q('#list');\n\n      Q('@fixture').node.id.should.equal('name');\n      e.remove();\n      Q('@fixture').length.should.equal(0);\n      Q('@fixture', e).node.id.should.equal('name');\n      document.body.appendChild(e.node);\n    });\n\n    it('should find =form in DOM and memory', function () {\n      let e = Q('#list');\n\n      Q('=form').node.id.should.equal('form');\n      e.remove();\n      Q('=form').length.should.equal(0);\n      Q('=form', e).node.id.should.equal('form');\n      document.body.appendChild(e.node);\n    });\n\n    it('should find li.li23 in DOM and memory', function () {\n      let e = Q('#list');\n\n      Q('li.li23').node.id.should.equal('li23');\n      e.remove();\n      Q('li.li23').length.should.equal(0);\n      Q('li.li23', e).node.id.should.equal('li23');\n      document.body.appendChild(e.node);\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/Elementify/tastes/tests/q.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 464,
    "kind": "test",
    "name": "describe224",
    "testId": 224,
    "memberof": "tests/q.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/q.spec.js~describe224",
    "access": null,
    "description": "Q magic",
    "lineNumber": 3
  },
  {
    "__docId__": 465,
    "kind": "test",
    "name": "describe225",
    "testId": 225,
    "memberof": "tests/q.spec.js~describe224",
    "testDepth": 1,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe225",
    "access": null,
    "description": "Element creation",
    "lineNumber": 4
  },
  {
    "__docId__": 466,
    "kind": "test",
    "name": "it226",
    "testId": 226,
    "memberof": "tests/q.spec.js~describe224.describe225",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe225.it226",
    "access": null,
    "description": "should returns a void HtmlElement",
    "lineNumber": 5
  },
  {
    "__docId__": 467,
    "kind": "test",
    "name": "it227",
    "testId": 227,
    "memberof": "tests/q.spec.js~describe224.describe225",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe225.it227",
    "access": null,
    "description": "should return element unchanged",
    "lineNumber": 12
  },
  {
    "__docId__": 468,
    "kind": "test",
    "name": "it228",
    "testId": 228,
    "memberof": "tests/q.spec.js~describe224.describe225",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe225.it228",
    "access": null,
    "description": "should create an HtmlElement from a node",
    "lineNumber": 19
  },
  {
    "__docId__": 469,
    "kind": "test",
    "name": "it229",
    "testId": 229,
    "memberof": "tests/q.spec.js~describe224.describe225",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe225.it229",
    "access": null,
    "description": "should create an HtmlElement from string",
    "lineNumber": 27
  },
  {
    "__docId__": 470,
    "kind": "test",
    "name": "describe230",
    "testId": 230,
    "memberof": "tests/q.spec.js~describe224",
    "testDepth": 1,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230",
    "access": null,
    "description": "Element query",
    "lineNumber": 46
  },
  {
    "__docId__": 471,
    "kind": "test",
    "name": "it231",
    "testId": 231,
    "memberof": "tests/q.spec.js~describe224.describe230",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230.it231",
    "access": null,
    "description": "should throw an exception if invalid query selector",
    "lineNumber": 47
  },
  {
    "__docId__": 472,
    "kind": "test",
    "name": "it232",
    "testId": 232,
    "memberof": "tests/q.spec.js~describe224.describe230",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230.it232",
    "access": null,
    "description": "should find #li11 in DOM and memory",
    "lineNumber": 51
  },
  {
    "__docId__": 473,
    "kind": "test",
    "name": "it233",
    "testId": 233,
    "memberof": "tests/q.spec.js~describe224.describe230",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230.it233",
    "access": null,
    "description": "should find .li23 in DOM and memory",
    "lineNumber": 61
  },
  {
    "__docId__": 474,
    "kind": "test",
    "name": "it234",
    "testId": 234,
    "memberof": "tests/q.spec.js~describe224.describe230",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230.it234",
    "access": null,
    "description": "should find @fixture in DOM and memory",
    "lineNumber": 71
  },
  {
    "__docId__": 475,
    "kind": "test",
    "name": "it235",
    "testId": 235,
    "memberof": "tests/q.spec.js~describe224.describe230",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230.it235",
    "access": null,
    "description": "should find =form in DOM and memory",
    "lineNumber": 81
  },
  {
    "__docId__": 476,
    "kind": "test",
    "name": "it236",
    "testId": 236,
    "memberof": "tests/q.spec.js~describe224.describe230",
    "testDepth": 2,
    "static": true,
    "longname": "tests/q.spec.js~describe224.describe230.it236",
    "access": null,
    "description": "should find li.li23 in DOM and memory",
    "lineNumber": 91
  }
]